1
00:00:00,000 --> 00:00:26,010
[音乐] 

2
00:00:30,050 --> 00:00:43,299
[音乐] 

3
00:00:46,040 --> 00:00:57,179
[掌声] 

4
00:00:47,200 --> 00:00:57,179
[音乐] 

5
00:01:05,200 --> 00:01:08,279
[音乐] 

6
00:01:14,210 --> 00:01:39,029
[音乐] 

7
00:01:44,270 --> 00:01:50,079
[音乐] 

8
00:01:54,770 --> 00:02:19,949
[掌声] 

9
00:01:57,760 --> 00:02:19,949
[音乐] 

10
00:02:22,390 --> 00:02:27,350
[音乐] 

11
00:02:23,860 --> 00:02:28,790
好吧这 是 cs50，这 是演讲 

12
00:02:27,350 --> 00:02:30,710
八，那 就是这样看 

13
00:02:28,790 --> 00:02:32,480
这个年度叫做cs50 hackathon 

14
00:02:30,710 --> 00:02:34,910
我们几乎结束的传统

15
00:02:32,480 --> 00:02:37,970
学期将于晚上7点左右开始 

16
00:02:34,910 --> 00:02:39,920
剑桥的这里将在7点左右结束

17
00:02:37,970 --> 00:02:41,930
我是 第二天在剑桥和 

18
00:02:39,920 --> 00:02:43,550
晚上的标点会很 明显 

19
00:02:41,930 --> 00:02:44,810
关于最终项目的一些工作 

20
00:02:43,550 --> 00:02:46,460
当晚 的首要目标 

21
00:02:44,810 --> 00:02:47,870
给学生一个非常 的 学术 

22
00:02:46,460 --> 00:02:49,520
社会和合作环境

23
00:02:47,870 --> 00:02:51,500
这是为了解决他们的最终成就 

24
00:02:49,520 --> 00:02:53,330
在课程中， 但也在你收集 

25
00:02:51,500 --> 00:02:55,490
会有一点分心 

26
00:02:53,330 --> 00:02:58,160
菲利普的食物通常在9点左右 

27
00:02:55,490 --> 00:02:59,960
下午点一点Domino's Pizza 

28
00:02:58,160 --> 00:03:02,090
凌晨1 点左右，还有 那些人 

29
00:02:59,960 --> 00:03:03,890
站在布偶身上会有 

30
00:03:02,090 --> 00:03:06,350
如果你，请 在IHOP享用早餐 

31
00:03:03,890 --> 00:03:08,480
仍然有精力 此后 会 

32
00:03:06,350 --> 00:03:09,980
所谓的cs50 公平的高潮 

33
00:03:08,480 --> 00:03:12,020
你 在 cs50和cs中 所做的一切

34
00:03:09,980 --> 00:03:14,180
更多关于未来 几周的事情 

35
00:03:12,020 --> 00:03:15,920
没有进一步的 ado 我们去过 哪里 

36
00:03:14,180 --> 00:03:17,240
过去几周会回忆起这些

37
00:03:15,920 --> 00:03:19,100
在过去 几个 我们已经星期 

38
00:03:17,240 --> 00:03:20,900
一直在介绍网络编程和

39
00:03:19,100 --> 00:03:22,880
最近我们试图联系在一起 

40
00:03:20,900 --> 00:03:25,340
过去几个 很多 主题 

41
00:03:22,880 --> 00:03:27,140
周HTML和CSS以及JavaScript和 

42
00:03:25,340 --> 00:03:28,790
然后是Python然后另一个框架 

43
00:03:27,140 --> 00:03:30,230
另一个名为 flask的软件 

44
00:03:28,790 --> 00:03:32,690
这让它更容易 ，更多 

45
00:03:30,230 --> 00:03:34,400
可以构建基于Web的应用程序 

46
00:03:32,690 --> 00:03:36,230
最后一个最简单的例子

47
00:03:34,400 --> 00:03:36,680
周回忆看起来有点像 

48
00:03:36,230 --> 00:03:38,480
像这样 

49
00:03:36,680 --> 00:03:40,610
在过去的一周里出现了问题 

50
00:03:38,480 --> 00:03:42,680
你有过相似之处吗？ 

51
00:03:40,610 --> 00:03:44,660
构建自己的基于Web的应用程序 

52
00:03:42,680 --> 00:03:46,160
但他们并没有完全拥有所有的 

53
00:03:44,660 --> 00:03:48,740
你 可能想要组装的部分 

54
00:03:46,160 --> 00:03:50,750
进入基于 网络的 应用程序，所以今天我们将 

55
00:03:48,740 --> 00:03:51,890
填写那些最后的空白，但回想一下 

56
00:03:50,750 --> 00:03:53,990
我们 一直试图构建这些 

57
00:03:51,890 --> 00:03:55,760
应用程序不是一次性 或 只是 

58
00:03:53,990 --> 00:03:57,800
您构建的工具， 但作为一部分 

59
00:03:55,760 --> 00:03:59,000
共同范式或 方法论 

60
00:03:57,800 --> 00:04:00,709
确实当你在 学习计算机时 

61
00:03:59,000 --> 00:04:02,870
科学和软件工程 你 

62
00:04:00,709 --> 00:04:04,459
开始注意软件中的模式 

63
00:04:02,870 --> 00:04:06,050
而且 你写 的代码 ， 

64
00:04:04,459 --> 00:04:07,280
人类倾向于采用这些模式 

65
00:04:06,050 --> 00:04:08,540
因为他们节省您的时间， 然后 

66
00:04:07,280 --> 00:04:11,870
每个人都可以说同样的话 

67
00:04:08,540 --> 00:04:13,070
语言可以这么说MVC就是这样

68
00:04:11,870 --> 00:04:14,810
我们上周介绍的首字母缩略词

69
00:04:13,070 --> 00:04:16,190
模型 - 视图 - 控制器，只是 

70
00:04:14,810 --> 00:04:18,020
说到你的这种范式 

71
00:04:16,190 --> 00:04:19,790
将一定类型的 代码 组织 在一起 

72
00:04:18,020 --> 00:04:21,590
提交某些 类型的 其他代码 

73
00:04:19,790 --> 00:04:23,990
另一个文件，所以你的Python代码 

74
00:04:21,590 --> 00:04:26,300
应用程序PI你的HTML进入你的 

75
00:04:23,990 --> 00:04:28,220
HTML 文件您的CSS和CSS文件 

76
00:04:26,300 --> 00:04:30,290
等等， 但 我们没有 

77
00:04:28,220 --> 00:04:32,750
上周真的是这件事

78
00:04:30,290 --> 00:04:35,390
模型一般是指您的数据和 

79
00:04:32,750 --> 00:04:37,970
同时调查你最近的问题

80
00:04:35,390 --> 00:04:40,340
确实有数据的CSV文件 

81
00:04:37,970 --> 00:04:42,170
模型CSV不是非常富有表现力

82
00:04:40,340 --> 00:04:42,650
你几乎可以写行 文本 

83
00:04:42,170 --> 00:04:44,600
文件

84
00:04:42,650 --> 00:04:46,310
行到一个文本文件中没有 一个不同 

85
00:04:44,600 --> 00:04:47,990
电子表格，但你不能真正查询 

86
00:04:46,310 --> 00:04:49,460
但你不能轻易插入或删除 

87
00:04:47,990 --> 00:04:51,380
你几乎不得不这样做 

88
00:04:49,460 --> 00:04:53,180
重建整个文件，的确如此 

89
00:04:51,380 --> 00:04:54,920
这正是 我在回归 中 所做 的 

90
00:04:53,180 --> 00:04:57,170
第一天基于网络的应用程序 

91
00:04:54,920 --> 00:04:59,360
我在大二或大三时回信

92
00:04:57,170 --> 00:05:01,780
是 新生 校内网站和 

93
00:04:59,360 --> 00:05:04,190
所有我都可以使用的 

94
00:05:01,780 --> 00:05:06,350
技术上和概念上都是 

95
00:05:04,190 --> 00:05:07,940
CSV文件我不知道哪些 数据库 

96
00:05:06,350 --> 00:05:09,830
没有意识到他们有多容易 

97
00:05:07,940 --> 00:05:12,110
可以让我的生活，所以我存储了所有 

98
00:05:09,830 --> 00:05:14,270
这些链接背后的数据就在这里

99
00:05:12,110 --> 00:05:16,160
非常简单的文本 文件，但今天将 

100
00:05:14,270 --> 00:05:17,720
给你更多的力量和 

101
00:05:16,160 --> 00:05:19,910
特别是如果你要 进入 

102
00:05:17,720 --> 00:05:22,910
有兴趣 申请CS的班级

103
00:05:19,910 --> 00:05:24,470
其他领域和医学或艺术或 

104
00:05:22,910 --> 00:05:26,540
任何有数据的世界

105
00:05:24,470 --> 00:05:28,340
特别是在 干和数据科学领域 

106
00:05:26,540 --> 00:05:31,400
等等意识到续集有 

107
00:05:28,340 --> 00:05:33,230
真正成为这个 令人难以置信的这 

108
00:05:31,400 --> 00:05:35,570
强大的语言， 可以解决 

109
00:05:33,230 --> 00:05:37,580
那些和许多领域的问题和 

110
00:05:35,570 --> 00:05:41,480
最终你要 建立的 是什么

111
00:05:37,580 --> 00:05:44,030
一周你最后一次cs50问题设定了你

112
00:05:41,480 --> 00:05:46,310
现在已达到峰值，将达到cs50 

113
00:05:44,030 --> 00:05:49,040
资金通过 一个 基于Web的 应用程序 

114
00:05:46,310 --> 00:05:50,540
你可以买或买卖股票 

115
00:05:49,040 --> 00:05:52,790
所以你要做到这一点 

116
00:05:50,540 --> 00:05:54,860
week是编写实现Web的代码 

117
00:05:52,790 --> 00:05:56,870
应用类似于此 ，由此 

118
00:05:54,860 --> 00:05:58,910
你的用户和你自己就 可以 

119
00:05:56,870 --> 00:06:01,070
注册 一个帐户 登录 

120
00:05:58,910 --> 00:06:03,650
帐户你将免费获得谢谢 

121
00:06:01,070 --> 00:06:05,419
给我们10,000美元的虚拟美元然后 

122
00:06:03,650 --> 00:06:07,400
你可以继续买卖股票 

123
00:06:05,419 --> 00:06:09,140
通过使用 此应用程序的符号

124
00:06:07,400 --> 00:06:11,120
所以，例如，如果我继续 前进 

125
00:06:09,140 --> 00:06:14,360
在这里注册我们说用户名 

126
00:06:11,120 --> 00:06:15,500
马龙密码一二三四五 

127
00:06:14,360 --> 00:06:17,900
不应该这么说

128
00:06:15,500 --> 00:06:20,210
继续在这里注册，你会看到 

129
00:06:17,900 --> 00:06:21,650
默认情况下 我得到这个免费的 10,000美元 

130
00:06:20,210 --> 00:06:23,840
以虚拟现金，你知道我要做什么 

131
00:06:21,650 --> 00:06:26,240
继续为自己买一份也许吧 

132
00:06:23,840 --> 00:06:27,770
Netflix，其符号为NFLX 

133
00:06:26,240 --> 00:06:30,560
我要继续尝试买一个 

134
00:06:27,770 --> 00:06:32,780
分享瞧，现在你会看到 不 

135
00:06:30,560 --> 00:06:34,760
我 只剩下9美元左右的现金 

136
00:06:32,780 --> 00:06:36,680
我现在拥有一千六百 美元 

137
00:06:34,760 --> 00:06:38,720
股票的份额，如果我们重新加载这个 

138
00:06:36,680 --> 00:06:40,280
整个讲座坦率地说价格

139
00:06:38,720 --> 00:06:42,050
可能会有点上升或 稍微下降 

140
00:06:40,280 --> 00:06:44,479
因为这个Web 应用程序 

141
00:06:42,050 --> 00:06:46,849
构建还将 与 API通信 

142
00:06:44,479 --> 00:06:48,590
应用程序编程接口，以便 

143
00:06:46,849 --> 00:06:50,930
提供的一些第三方网站 

144
00:06:48,590 --> 00:06:52,370
你有库存数据，所以你问它 

145
00:06:50,930 --> 00:06:54,590
它给出的股票 的当前 价格 

146
00:06:52,370 --> 00:06:56,120
如果你是一个JSON格式的答案

147
00:06:54,590 --> 00:06:58,190
回想一下我们对此的简短讨论 

148
00:06:56,120 --> 00:06:59,300
你最终将它整合到这里 

149
00:06:58,190 --> 00:07:01,159
接口所以这 将是 

150
00:06:59,300 --> 00:07:02,150
这么 多想法的 高潮 

151
00:07:01,159 --> 00:07:04,430
你用的建筑箱子 

152
00:07:02,150 --> 00:07:07,759
实验但我们需要一些决赛 

153
00:07:04,430 --> 00:07:09,620
今天块所以首先是 当 

154
00:07:07,759 --> 00:07:11,030
我 注册 了这个网站，我创建了一个 

155
00:07:09,620 --> 00:07:13,129
帐户，我确实可以继续 

156
00:07:11,030 --> 00:07:15,860
现在退出，如果我继续并 登录 

157
00:07:13,129 --> 00:07:18,680
如果 没有人偷了我的密码，请 回来 

158
00:07:15,860 --> 00:07:20,930
但我可以看到我的帐户，只有 我的 帐户 

159
00:07:18,680 --> 00:07:22,909
帐户， 但我们 还没有看到任何 

160
00:07:20,930 --> 00:07:24,770
代码中的机制，你可以 

161
00:07:22,909 --> 00:07:27,080
实现这种登录的概念 

162
00:07:24,770 --> 00:07:29,330
什么是底层逻辑通道 

163
00:07:27,080 --> 00:07:32,690
一个网站知道你 是谁

164
00:07:29,330 --> 00:07:34,099
登录或者你没有右登录

165
00:07:32,690 --> 00:07:35,690
当我刚才去 这个网站的时候 

166
00:07:34,099 --> 00:07:37,400
刚才 它促使我登录 

167
00:07:35,690 --> 00:07:39,770
因为我不是因为我记录了 

168
00:07:37,400 --> 00:07:41,840
但是 现在 怎么知道 了 

169
00:07:39,770 --> 00:07:44,270
我 登录了它是如何知道的 

170
00:07:41,840 --> 00:07:46,190
我可以点击 引用来获得 

171
00:07:44,270 --> 00:07:48,860
股票报价或 只 买一个买 

172
00:07:46,190 --> 00:07:51,710
库存或出售为什么不提示 

173
00:07:48,860 --> 00:08:02,029
我每次点击一个链接进行登录 

174
00:07:51,710 --> 00:08:03,710
在我的用户名或密码饼干 

175
00:08:02,029 --> 00:08:05,029
由网站保存的小文件

176
00:08:03,710 --> 00:08:06,560
在你的电脑上 现在赔率最高 

177
00:08:05,029 --> 00:08:10,310
这里的每个人都有可能听过 

178
00:08:06,560 --> 00:08:11,690
形成饼干坏可能是坏隐私 

179
00:08:10,310 --> 00:08:14,900
入侵的客人还好吧 

180
00:08:11,690 --> 00:08:16,580
是的，但大多数 网络不起作用 

181
00:08:14,900 --> 00:08:19,330
没有他们这么别人 

182
00:08:16,580 --> 00:08:22,900
你是怎样理解一个cookie 是 

183
00:08:19,330 --> 00:08:22,900
什么是饼干

184
00:08:24,260 --> 00:08:27,770
是啊， 保存您的信息，一些人 认为 

185
00:08:26,450 --> 00:08:29,360
你没有 哈夫， 所以你不必放 

186
00:08:27,770 --> 00:08:30,830
它每次都是最简单的 形式 

187
00:08:29,360 --> 00:08:32,210
它正是这些的组合 

188
00:08:30,830 --> 00:08:34,280
答案由此，当我登录到 

189
00:08:32,210 --> 00:08:36,440
网站 你可以想象那个网站 

190
00:08:34,280 --> 00:08:38,300
只记得我的用户名和 我的 用户名 

191
00:08:36,440 --> 00:08:40,820
密码只需稍微 保存 即可 

192
00:08:38,300 --> 00:08:42,200
我的Mac或PC上的文件， 以便下一个 

193
00:08:40,820 --> 00:08:44,540
一次 我访问一个网页，它 只是 

194
00:08:42,200 --> 00:08:45,650
自动发送他们对我来说， 这样 

195
00:08:44,540 --> 00:08:46,220
人类不必输入它们 

196
00:08:45,650 --> 00:08:48,110
一次又一次 

197
00:08:46,220 --> 00:08:50,480
现在让我们找出那种 感觉的 错误 

198
00:08:48,110 --> 00:08:53,620
这会是有效的 但是有什么用 

199
00:08:50,480 --> 00:08:57,350
这种 天真实施的 缺点 

200
00:08:53,620 --> 00:08:58,850
你本能地认为数据是什么？ 

201
00:08:57,350 --> 00:09:01,340
就在你知道我就在那里 

202
00:08:58,850 --> 00:09:04,250
人们 要 知道在办公室 或在 

203
00:09:01,340 --> 00:09:05,600
在图书馆或 家 中 ， 我可能 

204
00:09:04,250 --> 00:09:07,550
不想只 能够 步行到 

205
00:09:05,600 --> 00:09:09,260
那台电脑， 只是看到这一点 

206
00:09:07,550 --> 00:09:10,940
我的电脑上种植的文本文件是因为 

207
00:09:09,260 --> 00:09:12,470
然后他们可以登录 到我的帐户， 由 

208
00:09:10,940 --> 00:09:13,940
只是 挖掘所以感觉有点 

209
00:09:12,470 --> 00:09:15,470
确实是侵入性的 

210
00:09:13,940 --> 00:09:17,480
事实证明 ，cookie的威胁

211
00:09:15,470 --> 00:09:19,040
cookie 或 网站 往往 不这样做 

212
00:09:17,480 --> 00:09:21,620
至少如果他们实施得好 

213
00:09:19,040 --> 00:09:24,290
他们只是种植 一个非常大的 

214
00:09:21,620 --> 00:09:26,600
硬盘或硬盘上的随机数

215
00:09:24,290 --> 00:09:27,620
你的计算机的RAM或内存如此一两 

216
00:09:26,600 --> 00:09:29,240
三四五六 CEPT 像一些 

217
00:09:27,620 --> 00:09:31,460
非常大的数字可能 与字母和 

218
00:09:29,240 --> 00:09:34,000
数字甚至可能是一些标点符号 

219
00:09:31,460 --> 00:09:36,830
唯一标识我及其后 

220
00:09:34,000 --> 00:09:38,840
我 随时 点击相同的链接 

221
00:09:36,830 --> 00:09:40,910
登录我的浏览器后的网站 

222
00:09:38,840 --> 00:09:42,080
感谢HTTP的语言 

223
00:09:40,910 --> 00:09:43,430
浏览器和服务器说我们 

224
00:09:42,080 --> 00:09:45,860
几个星期前刚刚讨论过

225
00:09:43,430 --> 00:09:48,470
神奇地发送同样大的随机

226
00:09:45,860 --> 00:09:50,300
一次又一次地向服务器编号 

227
00:09:48,470 --> 00:09:52,310
只要服务器记得那个 

228
00:09:50,300 --> 00:09:55,220
那个大的随机数对应

229
00:09:52,310 --> 00:09:57,290
用户名Mahlon它可以找出 谁的 

230
00:09:55,220 --> 00:09:59,840
帐户显示，为什么它 是一个大的 

231
00:09:57,290 --> 00:10:03,710
随机数为什么不仅仅是我的 

232
00:09:59,840 --> 00:10:07,060
密码或我的用户名为什么我 

233
00:10:03,710 --> 00:10:07,060
提出这是一个很大的随机 数 

234
00:10:09,620 --> 00:10:14,010
正是在计算机科学的随机性

235
00:10:11,880 --> 00:10:16,050
这是非常强大的成分

236
00:10:14,010 --> 00:10:17,820
如果你选择一个足够大的词或一个大词 

237
00:10:16,050 --> 00:10:20,040
足够的字符串或句子 

238
00:10:17,820 --> 00:10:21,780
一些随机对手的概率

239
00:10:20,040 --> 00:10:23,520
或 互联网上的 坏人 

240
00:10:21,780 --> 00:10:26,280
能够猜测或试图猜测 

241
00:10:23,520 --> 00:10:27,840
价值它只是如此之低，它只是没有 

242
00:10:26,280 --> 00:10:29,790
现实永远会发生在你的 

243
00:10:27,840 --> 00:10:31,410
生命统计和随机性

244
00:10:29,790 --> 00:10:32,670
为我们提供了这种能力， 所以你可以 

245
00:10:31,410 --> 00:10:34,500
想想这个比喻 

246
00:10:32,670 --> 00:10:36,660
如果，现实世界就像一个手印 

247
00:10:34,500 --> 00:10:39,210
你曾经喜欢娱乐 

248
00:10:36,660 --> 00:10:40,860
您必须在公园或酒吧 或俱乐部 

249
00:10:39,210 --> 00:10:42,810
出示证件， 或者 你必须支付 一个 

250
00:10:40,860 --> 00:10:44,640
在途中的票有时他们会 

251
00:10:42,810 --> 00:10:46,770
用可见或标记你

252
00:10:44,640 --> 00:10:48,240
隐形墨水 ，这主要是为了 

253
00:10:46,770 --> 00:10:49,500
效率让他们追求的 时间 

254
00:10:48,240 --> 00:10:50,580
你在游乐园里 就可以了 

255
00:10:49,500 --> 00:10:52,680
有点来去，你没有 

256
00:10:50,580 --> 00:10:54,210
如果你在里面，要偿还或重新处理

257
00:10:52,680 --> 00:10:56,040
酒吧或 俱乐部，你不必 保持 

258
00:10:54,210 --> 00:10:57,630
显示 您的ID，他们可以检查一次 

259
00:10:56,040 --> 00:10:59,070
然后更有效地让你来 

260
00:10:57,630 --> 00:11:00,600
走， 请 你 ，因为你只是 

261
00:10:59,070 --> 00:11:03,480
展示你的手或这个虚拟的 

262
00:11:00,600 --> 00:11:05,430
把手印给保镖或者给保镖 

263
00:11:03,480 --> 00:11:07,170
这些地方的看门人 如此饼干 

264
00:11:05,430 --> 00:11:08,640
是完全 一样 瞒着我们 

265
00:11:07,170 --> 00:11:10,590
所有这些时间 你一直在访问 

266
00:11:08,640 --> 00:11:12,690
网站你登录 到 你的哪 

267
00:11:10,590 --> 00:11:15,060
浏览器是秘密但有用的

268
00:11:12,690 --> 00:11:18,090
向该服务器提供手戳

269
00:11:15,060 --> 00:11:20,190
提醒你是谁或者 不是 

270
00:11:18,090 --> 00:11:22,560
真的是你，但是那么大 

271
00:11:20,190 --> 00:11:25,590
随机数， 以便如果服务器 

272
00:11:22,560 --> 00:11:28,080
记得号码属于谁它 

273
00:11:25,590 --> 00:11:30,270
可以找出当时 的帐户 

274
00:11:28,080 --> 00:11:32,100
如果我这样表现得更具体 

275
00:11:30,270 --> 00:11:33,660
实际上拉 了一些HTTP 

276
00:11:32,100 --> 00:11:35,760
我们过去看过的例子

277
00:11:33,660 --> 00:11:37,350
让我们在上下文中考虑这一点 

278
00:11:35,760 --> 00:11:39,300
这里的每个人都可能 使用过Gmail 

279
00:11:37,350 --> 00:11:41,070
有一点，你通常用一个登录 

280
00:11:39,300 --> 00:11:43,260
像这样的页面所以它可能很少见 

281
00:11:41,070 --> 00:11:45,210
因为你不经常被提示登录 

282
00:11:43,260 --> 00:11:47,310
因为惊喜而进入Gmail 

283
00:11:45,210 --> 00:11:48,540
来自Google的Cookie就 在您的身上 

284
00:11:47,310 --> 00:11:50,910
电脑，但让我们看看那些来了 

285
00:11:48,540 --> 00:11:53,880
从那时你请求谷歌或Gmail 

286
00:11:50,910 --> 00:11:55,620
com 你可以在一个虚拟的信封发送 

287
00:11:53,880 --> 00:11:57,660
可以这么说从 你的Mac或PC 到 

288
00:11:55,620 --> 00:11:59,130
服务器像这样的家庭消息 

289
00:11:57,660 --> 00:12:00,900
没见过 这个 ，这 是什么 

290
00:11:59,130 --> 00:12:02,850
您的浏览器实际上是发送给 

291
00:12:00,900 --> 00:12:05,010
服务器以请求 主页 

292
00:12:02,850 --> 00:12:06,480
Gmail com现在我要 简化这个 

293
00:12:05,010 --> 00:12:09,570
一点点 ，因为有一堆 

294
00:12:06,480 --> 00:12:11,460
重定向涉及的 HTTP 302和301 

295
00:12:09,570 --> 00:12:13,080
那今天不那么有趣 

296
00:12:11,460 --> 00:12:15,540
让我们姑且认为 Gmail的回应 

297
00:12:13,080 --> 00:12:17,820
通常会立即使用Gmail 

298
00:12:15,540 --> 00:12:19,860
回答这个说法200 好的，这里的 

299
00:12:17,820 --> 00:12:22,620
登录页面，这是一个网页 

300
00:12:19,860 --> 00:12:23,550
文本flash HTML格式，但一旦你 

301
00:12:22,620 --> 00:12:25,350
登录

302
00:12:23,550 --> 00:12:27,660
Gmail如何实际上做的是它也 

303
00:12:25,350 --> 00:12:31,950
发送此召回，我们称之为这些 

304
00:12:27,660 --> 00:12:33,750
事物HD HTTP标头键值 对 

305
00:12:31,950 --> 00:12:35,730
由 是排序 的 冒号分隔 

306
00:12:33,750 --> 00:12:37,769
半秘密地从浏览器发送 到 

307
00:12:35,730 --> 00:12:40,110
服务器， 从服务器到 浏览器 现在我们 

308
00:12:37,769 --> 00:12:41,970
更复杂的开发者类型可以

309
00:12:40,110 --> 00:12:43,620
看看你能 打开这个东东吧 

310
00:12:41,970 --> 00:12:45,750
Chrome的网络标签并开始 戳 

311
00:12:43,620 --> 00:12:46,920
在 它 周围 ， 它 本身并不是秘密 

312
00:12:45,750 --> 00:12:49,019
这只是大多数人不知道的 

313
00:12:46,920 --> 00:12:50,490
谷歌和其他什么 

314
00:12:49,019 --> 00:12:53,640
公司正在做的 就是字面意思 

315
00:12:50,490 --> 00:12:57,240
发送一个名为set  -  cookie的标题

316
00:12:53,640 --> 00:12:59,279
其中的值是大的随机值 

317
00:12:57,240 --> 00:13:02,640
服务器已经为 你 决定了 你的 

318
00:12:59,279 --> 00:13:05,370
浏览器假设它正确地说HTTP 

319
00:13:02,640 --> 00:13:07,140
然后应该将该值保存在RAM中 

320
00:13:05,370 --> 00:13:09,390
电脑的内存或硬盘上 

321
00:13:07,140 --> 00:13:12,870
然后每隔点击你就 

322
00:13:09,390 --> 00:13:14,910
gmail.com不应该只发送标题 

323
00:13:12,870 --> 00:13:17,610
像这样的，但它应该发出一种 的 

324
00:13:14,910 --> 00:13:19,110
对面标题只是cookie未设置 

325
00:13:17,610 --> 00:13:21,209
饼干， 但饼干是 

326
00:13:19,110 --> 00:13:23,790
那手邮票 等 的介绍

327
00:13:21,209 --> 00:13:25,769
每次您点击Gmail或 

328
00:13:23,790 --> 00:13:27,360
Facebook 或几乎 任何网站进入 

329
00:13:25,769 --> 00:13:28,860
您已登录这些cookie 

330
00:13:27,360 --> 00:13:31,020
已经在你的电脑上 种植 了 

331
00:13:28,860 --> 00:13:32,790
最近在欧洲和 中国 

332
00:13:31,020 --> 00:13:34,520
美国已通过法律 

333
00:13:32,790 --> 00:13:36,390
越来越多地施压 

334
00:13:34,520 --> 00:13:38,940
在国际上运营的公司 

335
00:13:36,390 --> 00:13:40,920
给你提供基于cookie的

336
00:13:38,940 --> 00:13:42,630
信息对，你得到这些 小 

337
00:13:40,920 --> 00:13:44,490
弹出窗口你越来越多了 

338
00:13:42,630 --> 00:13:46,220
他们多年来在欧洲说 你 

339
00:13:44,490 --> 00:13:49,170
我们可以在您的计算机上种植饼干

340
00:13:46,220 --> 00:13:52,880
所以如果 这样可能会发生什么 

341
00:13:49,170 --> 00:13:55,230
你说我的电脑上没有没有饼干 

342
00:13:52,880 --> 00:13:57,329
你将不得不继续登录 

343
00:13:55,230 --> 00:14:00,270
如果你拿走这个根本就对了 

344
00:13:57,329 --> 00:14:02,100
HTTP功能的大部分网络中断或 

345
00:14:00,270 --> 00:14:04,079
用户体验恶化 

346
00:14:02,100 --> 00:14:05,970
现在显然是 另一面 

347
00:14:04,079 --> 00:14:08,160
饼干不仅可以用于良好的 使用 

348
00:14:05,970 --> 00:14:09,600
事实证明，但也是为了邪恶 

349
00:14:08,160 --> 00:14:10,589
那里有很多广告 

350
00:14:09,600 --> 00:14:12,270
互联网当然也是如此 

351
00:14:10,589 --> 00:14:14,520
带动了很多，使收入 

352
00:14:12,270 --> 00:14:17,250
这些广告通常都会出现 

353
00:14:14,520 --> 00:14:18,930
来自HTML 或脚本中的 图像标记 

354
00:14:17,250 --> 00:14:20,640
标签或我们拥有的一些HTML类型

355
00:14:18,930 --> 00:14:23,040
在课堂上看到但他们去了 

356
00:14:20,640 --> 00:14:25,709
第三方服务器在其他地方 通信 

357
00:14:23,040 --> 00:14:27,630
并且问题出现 在cookies时 

358
00:14:25,709 --> 00:14:30,390
那些第三方被允许 种植 

359
00:14:27,630 --> 00:14:32,670
你的 电脑 上的饼干， 因为如果你 

360
00:14:30,390 --> 00:14:34,140
去谷歌，你去Facebook和 

361
00:14:32,670 --> 00:14:35,550
你去Twitter的一堆网站 

362
00:14:34,140 --> 00:14:37,440
假设他们都有一些中间人 

363
00:14:35,550 --> 00:14:39,540
广告服务 广告 

364
00:14:37,440 --> 00:14:42,509
在这些网站中的每一个中间人 

365
00:14:39,540 --> 00:14:46,620
可以这么说， 因为 他们有自己的广告 

366
00:14:42,509 --> 00:14:48,629
因此他们的HTTP标头就是这样的 

367
00:14:46,620 --> 00:14:50,670
网站和这个网站在那里 

368
00:14:48,629 --> 00:14:52,050
很多第三方都是很大 的 

369
00:14:50,670 --> 00:14:54,139
他们知道的广告网络

370
00:14:52,050 --> 00:14:56,879
到处都是小老头，你是怎么回事 

371
00:14:54,139 --> 00:14:59,040
因为他们看到你的饼干出现了 

372
00:14:56,879 --> 00:15:00,810
来自多个不同的其他网站和 

373
00:14:59,040 --> 00:15:03,149
所以这里的饼干不是一个

374
00:15:00,810 --> 00:15:04,860
计算机科学工程专长但是 

375
00:15:03,149 --> 00:15:07,589
真的是对个人隐私的威胁，因为

376
00:15:04,860 --> 00:15:10,199
它们可以很容易地用于跟踪 

377
00:15:07,589 --> 00:15:12,449
坦率地说AT＆T和Verizon 作为 一边 

378
00:15:10,199 --> 00:15:14,339
陷入困境 甚至还不够 

379
00:15:12,449 --> 00:15:17,000
几年前人们都知道 这一点 

380
00:15:14,339 --> 00:15:19,500
他们开始强行注射

381
00:15:17,000 --> 00:15:21,449
额外的HTTP 标题在精神上类似 

382
00:15:19,500 --> 00:15:22,800
这 给所有的 人的手机 

383
00:15:21,449 --> 00:15:25,589
交通所以不是你甚至可以做的事情 

384
00:15:22,800 --> 00:15:27,329
最初选择退出是因为这个 

385
00:15:25,589 --> 00:15:29,399
对于广告商来说是一种方式

386
00:15:27,329 --> 00:15:32,490
他们自己 能够跟踪用户 

387
00:15:29,399 --> 00:15:35,459
Cookie所在的HTTP标头 

388
00:15:32,490 --> 00:15:37,350
基础是非常强大但也非常 

389
00:15:35,459 --> 00:15:39,060
侵入性，我们现在才 开始 

390
00:15:37,350 --> 00:15:40,709
看到社会和政治上的 反击 

391
00:15:39,060 --> 00:15:43,019
在这个非常简单的机制上 

392
00:15:40,709 --> 00:15:45,120
希望我们作为Cs类型 只是理解 

393
00:15:43,019 --> 00:15:47,519
现在的机制，因而 现在 

394
00:15:45,120 --> 00:15:49,380
因此让我们看看这个 

395
00:15:47,519 --> 00:15:52,380
例如，让我继续前进 

396
00:15:49,380 --> 00:15:55,230
打开 在 一个相对小例子 

397
00:15:52,380 --> 00:15:57,149
适用于那些不熟悉的cs50 IDE的cs50 IDE 

398
00:15:55,230 --> 00:15:59,220
是一个基于Web的 应用程序 ，您可以通过它 

399
00:15:57,149 --> 00:16:01,019
可以在云中编写程序 

400
00:15:59,220 --> 00:16:03,000
在Mac 或PC上使用任何浏览器我都是 

401
00:16:01,019 --> 00:16:06,089
要继续 进入我的帐户 

402
00:16:03,000 --> 00:16:08,399
而且我要去 商店，我 

403
00:16:06,089 --> 00:16:10,709
打算进入 模板目录 

404
00:16:08,399 --> 00:16:12,329
并表明 这个 例子在这里有一个 

405
00:16:10,709 --> 00:16:13,769
这个 看起来很熟悉的 文件很少

406
00:16:12,329 --> 00:16:15,540
房间里的学生申请点pi 

407
00:16:13,769 --> 00:16:17,639
是基于Web的应用程序，然后我们 

408
00:16:15,540 --> 00:16:19,709
有一些模板文件可以这么说 

409
00:16:17,639 --> 00:16:21,569
我 在这里的 终端 窗口 我 要去 

410
00:16:19,709 --> 00:16:23,550
前进，只需我的键盘进入 

411
00:16:21,569 --> 00:16:25,439
这个目录名为store in source 

412
00:16:23,550 --> 00:16:28,050
八，这是 在线提供，我 

413
00:16:25,439 --> 00:16:29,639
继续 前进并做 烧瓶运行 

414
00:16:28,050 --> 00:16:31,230
对于那些不熟悉的是命令通过

415
00:16:29,639 --> 00:16:34,199
你可以启动一个Web服务器和 

416
00:16:31,230 --> 00:16:36,059
开始运行一个基于Web的应用程序 ， 

417
00:16:34,199 --> 00:16:38,399
既然我 已经 准备好了 

418
00:16:36,059 --> 00:16:41,009
提前并在这里 访问此URL 

419
00:16:38,399 --> 00:16:44,160
我们会看到一个相对 简单的 

420
00:16:41,009 --> 00:16:45,899
超级丑陋 的 网店让我继续前进 

421
00:16:44,160 --> 00:16:48,209
并放大 一点和这个网上商店 

422
00:16:45,899 --> 00:16:50,339
允许我买三件傅的酒吧 

423
00:16:48,209 --> 00:16:50,470
并且无论那些是什么和这个 

424
00:16:50,339 --> 00:16:53,320
是

425
00:16:50,470 --> 00:16:55,030
一个非常简单的电子商务， 如网站 

426
00:16:53,320 --> 00:16:57,070
我只需输入 Fu的 数量 

427
00:16:55,030 --> 00:16:58,810
我想要的酒吧和低音然后我 

428
00:16:57,070 --> 00:17:01,480
可以继续 购买它们，所以我要去 

429
00:16:58,810 --> 00:17:04,750
继续 ， 说给我一个食物怎么样 

430
00:17:01,480 --> 00:17:06,250
关于零条和两个低音 我和我 

431
00:17:04,750 --> 00:17:08,980
继续 点击 购买 

432
00:17:06,250 --> 00:17:10,540
现在你会看到我的 购物车但是如果 

433
00:17:08,980 --> 00:17:11,950
我继续购物你会看到它 

434
00:17:10,540 --> 00:17:13,840
像你继续浏览一样重置

435
00:17:11,950 --> 00:17:15,010
亚马逊或其他任何网站，但如果 

436
00:17:13,840 --> 00:17:17,530
你想检查你的购物车 

437
00:17:15,010 --> 00:17:18,760
再次注意到它记得我是什么 

438
00:17:17,530 --> 00:17:20,140
寻找，事实上你知道什么

439
00:17:18,760 --> 00:17:22,900
我 会继续 前进 ，并关闭窗口 

440
00:17:20,140 --> 00:17:25,120
哎呀我实际上失去了网站，但你 

441
00:17:22,900 --> 00:17:27,580
知道如果我回到那个URL 并且 

442
00:17:25,120 --> 00:17:29,470
重新打开我看到店面，但如果我

443
00:17:27,580 --> 00:17:31,900
查看我记得的购物车 

444
00:17:29,470 --> 00:17:33,550
我的国家 现在注意到了现在的力量 

445
00:17:31,900 --> 00:17:36,010
饼干它不仅仅是为了记住 

446
00:17:33,550 --> 00:17:38,200
手印你是谁，但现在你可以 

447
00:17:36,010 --> 00:17:40,960
记得关于该用户的 任何 

448
00:17:38,200 --> 00:17:42,040
你想要在亚马逊上 购物车 

449
00:17:40,960 --> 00:17:43,540
或任何网站，它是最好的 

450
00:17:42,040 --> 00:17:45,370
这样的例子， 因为它会 

451
00:17:43,540 --> 00:17:47,500
对于一个用户来说可怕的可怕

452
00:17:45,370 --> 00:17:49,420
每次 点击 都会获得经验或用户体验

453
00:17:47,500 --> 00:17:50,530
丢失内容的darn链接

454
00:17:49,420 --> 00:17:52,660
你的购物车 因为网站 

455
00:17:50,530 --> 00:17:54,670
忘了你是谁， 所以这是一个 

456
00:17:52,660 --> 00:17:56,890
令人信服的功能，以记住它 

457
00:17:54,670 --> 00:17:58,570
太实现此功能的cookies 

458
00:17:56,890 --> 00:18:01,270
因为更普遍的是发生了什么

459
00:17:58,570 --> 00:18:03,850
当你设置一个时，使用cookies 

460
00:18:01,270 --> 00:18:07,240
使用 setcookie标头的 cookie 

461
00:18:03,850 --> 00:18:09,130
看起来像这样 有一个关键的价值 

462
00:18:07,240 --> 00:18:11,710
我们可能会调用右边的一对

463
00:18:09,130 --> 00:18:13,900
会话和值的值 是 

464
00:18:11,710 --> 00:18:16,810
手印会议 只是一个术语 

465
00:18:13,900 --> 00:18:17,980
技术中是指这种抽象 

466
00:18:16,810 --> 00:18:19,270
你可以把它想象成一个购物 

467
00:18:17,980 --> 00:18:20,830
购物车，但它没有必要 

468
00:18:19,270 --> 00:18:22,930
任何与 实际购物 或 

469
00:18:20,830 --> 00:18:25,450
电子商务它只是一个容器 

470
00:18:22,930 --> 00:18:28,180
你可以存储的 东西，所以这是 

471
00:18:25,450 --> 00:18:30,790
告诉 网站 我的会话 

472
00:18:28,180 --> 00:18:33,730
价值我的手印是1 2 3 4 5和大 

473
00:18:30,790 --> 00:18:36,210
网站可以真正随机数 

474
00:18:33,730 --> 00:18:38,500
然后说你知道我要存储什么

475
00:18:36,210 --> 00:18:40,960
容器， 让我们称之为Python 

476
00:18:38,500 --> 00:18:42,640
你里面的 字典或 词典 

477
00:18:40,960 --> 00:18:45,010
我可以把任何东西我想等 

478
00:18:42,640 --> 00:18:47,410
事实上，当你去购物 车 

479
00:18:45,010 --> 00:18:49,840
像这样 的服务器实际上是什么 

480
00:18:47,410 --> 00:18:52,270
看到你的手印，做得很好 

481
00:18:49,840 --> 00:18:52,720
并意识到你是用户1 2 3 4 5 

482
00:18:52,270 --> 00:18:55,450
6 7 

483
00:18:52,720 --> 00:18:57,340
哦那个用户名Mahlon 让我走了 

484
00:18:55,450 --> 00:18:59,920
提前并抓住Python的字典 

485
00:18:57,340 --> 00:19:01,960
来自内存或甚至来自CSV 文件的 dict 

486
00:18:59,920 --> 00:19:03,800
如果你想要并告诉你的内容 

487
00:19:01,960 --> 00:19:05,810
你的购物 车我 

488
00:19:03,800 --> 00:19:07,400
而其他 人布莱恩访问 同样的 

489
00:19:05,810 --> 00:19:08,750
准确的网站登录他的 

490
00:19:07,400 --> 00:19:10,730
帐户他要提出 一个 

491
00:19:08,750 --> 00:19:12,320
据推测不同的手印 

492
00:19:10,730 --> 00:19:14,720
该网站可以寻找不同的 

493
00:19:12,320 --> 00:19:16,580
字典和秀布莱恩的不同 

494
00:19:14,720 --> 00:19:18,620
他的购物 车 和内容

495
00:19:16,580 --> 00:19:20,540
每个人都一样，这间客房 所以这 

496
00:19:18,620 --> 00:19:22,940
简单的机制我的意思是考虑 

497
00:19:20,540 --> 00:19:25,640
这 只是一个愚蠢的 文本值 

498
00:19:22,940 --> 00:19:28,010
关键的冒号值和所有 这些 

499
00:19:25,640 --> 00:19:29,780
现在可以 完成所有 网络的功能 

500
00:19:28,010 --> 00:19:31,370
来吧，我们不会看太多

501
00:19:29,780 --> 00:19:33,470
细节到这里的代码，但让我 

502
00:19:31,370 --> 00:19:36,110
如果我进入，会显示一个片段 

503
00:19:33,470 --> 00:19:38,810
应用I型 ， 使 魔术 

504
00:19:36,110 --> 00:19:41,060
烧瓶中的这种可能只是为了进口 

505
00:19:38,810 --> 00:19:42,410
您还记得这个附加功能 

506
00:19:41,060 --> 00:19:44,720
从 你 过去的 几个 问题 

507
00:19:42,410 --> 00:19:47,330
你从瓶子里进口了几个 

508
00:19:44,720 --> 00:19:49,340
事情渲染模板重定向请求 

509
00:19:47,330 --> 00:19:51,530
好吧，如果你添加会话到该列表 

510
00:19:49,340 --> 00:19:53,840
这是代码的抽象 

511
00:19:51,530 --> 00:19:55,670
手印章的想法你现在可以做的是

512
00:19:53,840 --> 00:19:57,980
这让我向下滚动到多汁 

513
00:19:55,670 --> 00:20:00,410
在这里， 并注意到你可以做到 

514
00:19:57,980 --> 00:20:03,260
现在和下一个cs50的代码行

515
00:20:00,410 --> 00:20:06,470
财务问题这样的代码行

516
00:20:03,260 --> 00:20:08,810
会议仅仅 是 一个Python 字典或 

517
00:20:06,470 --> 00:20:12,050
dict 你可以 使用任何 索引 

518
00:20:08,810 --> 00:20:13,370
单词foo或bar或bass就像你一样 

519
00:20:12,050 --> 00:20:15,140
可以更普遍地使用词典

520
00:20:13,370 --> 00:20:17,120
并且你可以存储任何你的东西

521
00:20:15,140 --> 00:20:20,720
在我的情况下，我 希望 存储 一个数字 

522
00:20:17,120 --> 00:20:23,150
0 Foos或1 foo 或 2 Foos或其他任何东西 

523
00:20:20,720 --> 00:20:26,330
我可以简单地将用户转换为int 

524
00:20:23,150 --> 00:20:27,560
请求表格项目无论 是 什么 和 

525
00:20:26,330 --> 00:20:28,820
让我挥挥手 一些代码 

526
00:20:27,560 --> 00:20:30,500
因为它只是设置了 

527
00:20:28,820 --> 00:20:32,810
整个事情 ，但 新的代码行 

528
00:20:30,500 --> 00:20:34,370
现在将赋予我们权力的新功能

529
00:20:32,810 --> 00:20:37,310
建立类似 股票交易的 东西 

530
00:20:34,370 --> 00:20:39,050
这里的网站很简单

531
00:20:37,310 --> 00:20:41,300
因为你 还可以做些什么来 记住 

532
00:20:39,050 --> 00:20:43,070
用户登录 即可 继续 

533
00:20:41,300 --> 00:20:45,950
并存储在这个所谓的会议 上 

534
00:20:43,070 --> 00:20:47,600
如果值为true，则值为true 

535
00:20:45,950 --> 00:20:49,160
在那里，你可以推断， 人类 是 

536
00:20:47,600 --> 00:20:52,310
登录， 如果没有这样的 值 

537
00:20:49,160 --> 00:20:54,350
在字典中他们没有登录 

538
00:20:52,310 --> 00:20:56,390
等会牵着你的手 更在 一个 位 

539
00:20:54,350 --> 00:20:57,920
用这个设置的下一个问题 

540
00:20:56,390 --> 00:20:59,360
介绍cs50 融资， 我们会 

541
00:20:57,920 --> 00:21:00,770
写一些处理的代码 

542
00:20:59,360 --> 00:21:02,180
登录，以便您可以通过示例查看如何 

543
00:21:00,770 --> 00:21:04,370
做到这一点，但它取决于 你 

544
00:21:02,180 --> 00:21:07,400
此后 开始记住 什么 

545
00:21:04,370 --> 00:21:09,590
用户实际使用的 股票 

546
00:21:07,400 --> 00:21:10,759
会议保留他们的事实 

547
00:21:09,590 --> 00:21:12,889
已登录

548
00:21:10,759 --> 00:21:16,609
没事所以这 是一个很大一下子 

549
00:21:12,889 --> 00:21:17,779
但任何 关于饼干和饼干的 问题 

550
00:21:16,609 --> 00:21:26,299
他们提供这些 东西的功能

551
00:21:17,779 --> 00:21:27,979
会议你认为是啊 

552
00:21:26,299 --> 00:21:29,989
会话保存在 用户端或 

553
00:21:27,979 --> 00:21:32,539
服务器确实很好的 问题 和 

554
00:21:29,989 --> 00:21:34,999
答案可能是它 取决于你可以存储 

555
00:21:32,539 --> 00:21:36,589
它在用户的 客户端上 

556
00:21:34,999 --> 00:21:38,389
浏览器和这里的绅士 

557
00:21:36,589 --> 00:21:40,159
早先提出你可以 在 这里 

558
00:21:38,389 --> 00:21:41,869
建议你理论上可以存储 

559
00:21:40,159 --> 00:21:43,309
就像字面意思他们的 用户名和 

560
00:21:41,869 --> 00:21:45,079
密码也许我 早些时候提出过 

561
00:21:43,309 --> 00:21:47,419
他们的计算机上，这就是坏的 

562
00:21:45,079 --> 00:21:48,649
我们之前推测的原因， 但你 

563
00:21:47,419 --> 00:21:50,839
也可以存储他们的内容

564
00:21:48,649 --> 00:21:52,729
购物车的酒吧和低音提琴 

565
00:21:50,839 --> 00:21:54,109
这不像存储那么具有侵略性

566
00:21:52,729 --> 00:21:55,069
他们的密码，但如果你买

567
00:21:54,109 --> 00:21:57,259
你真的不想要的人 

568
00:21:55,069 --> 00:21:58,849
知道这是入侵所以也许 

569
00:21:57,259 --> 00:22:01,190
我们经常能做得越来越好 

570
00:21:58,849 --> 00:22:03,709
存储在服务器上， 所以设计精良 

571
00:22:01,190 --> 00:22:06,229
网站 通常只会存储此内容 

572
00:22:03,709 --> 00:22:08,119
大的随机值上的手印 

573
00:22:06,229 --> 00:22:09,979
Mac 或PC， 然后所有 的 

574
00:22:08,119 --> 00:22:12,589
有趣的， 也许是敏感的东西 

575
00:22:09,979 --> 00:22:14,539
存储在数据库或CSV文件中或 只是 

576
00:22:12,589 --> 00:22:17,089
服务器的RAM或内存就像在 

577
00:22:14,539 --> 00:22:21,459
全局变量好问题其他 

578
00:22:17,089 --> 00:22:25,429
提出其他问题

579
00:22:21,459 --> 00:22:28,129
没事所以这是解决的一个问题 

580
00:22:25,429 --> 00:22:29,869
我们现在知道我们可以实现登录表单 

581
00:22:28,129 --> 00:22:31,309
我们知道我们可以 记住这一点 

582
00:22:29,869 --> 00:22:33,499
人们登录后就这样吧 

583
00:22:31,309 --> 00:22:34,940
规定现在可以但可以结束 

584
00:22:33,499 --> 00:22:37,309
过去几周没有 

585
00:22:34,940 --> 00:22:40,489
非常强大，只有访问权限 

586
00:22:37,309 --> 00:22:42,199
像CSV文件逗号分隔的东西 

587
00:22:40,489 --> 00:22:44,209
创造出类似幻觉的价值观

588
00:22:42,199 --> 00:22:46,909
Excel和 谷歌电子表格 和Apple 

589
00:22:44,209 --> 00:22:48,289
像列和行的数字为什么好 

590
00:22:46,909 --> 00:22:49,940
它几乎是线性搜索

591
00:22:48,289 --> 00:22:51,979
一切 都 可以成为CSV文件 

592
00:22:49,940 --> 00:22:53,749
行和行 以及行和数据行 

593
00:22:51,979 --> 00:22:55,549
如果你想搜索任何东西 

594
00:22:53,749 --> 00:22:57,589
在你可能想要的那个文件中 

595
00:22:55,549 --> 00:22:58,249
为你的 调查实施怎么做 

596
00:22:57,589 --> 00:23:00,589
你找到它

597
00:22:58,249 --> 00:23:02,239
你打开文件打开文件吧 

598
00:23:00,589 --> 00:23:04,999
也许使用for 循环 并迭代 

599
00:23:02,239 --> 00:23:06,979
每一 行寻找一些价值 

600
00:23:04,999 --> 00:23:08,659
然后关闭Big文件 

601
00:23:06,979 --> 00:23:10,459
在最坏情况下的东西，你的nØ 

602
00:23:08,659 --> 00:23:12,229
关心是在最后，那是 

603
00:23:10,459 --> 00:23:13,789
现在你可以非常高效

604
00:23:12,229 --> 00:23:15,529
非常有效地附加两个文件 

605
00:23:13,789 --> 00:23:16,069
回想一下，当我们 打开文件时 

606
00:23:15,529 --> 00:23:17,929
引用unquote 

607
00:23:16,069 --> 00:23:20,269
a for append mode我们用a做了

608
00:23:17,929 --> 00:23:22,039
对你说， 而不是 w-4的简短例子 

609
00:23:20,269 --> 00:23:23,809
可以帮助您获得操作系统

610
00:23:22,039 --> 00:23:24,650
帮助并在文件中添加行

611
00:23:23,809 --> 00:23:26,930
非常底部是 

612
00:23:24,650 --> 00:23:28,310
更高效，但你不能插入

613
00:23:26,930 --> 00:23:30,320
中间的事情非常有效

614
00:23:28,310 --> 00:23:32,030
你不能轻易删除你的东西

615
00:23:30,320 --> 00:23:33,920
对于那些种类而言，必须逐字逐句

616
00:23:32,030 --> 00:23:36,320
方案打开文件 读取 

617
00:23:33,920 --> 00:23:38,780
完整的东西然后 写出部分 

618
00:23:36,320 --> 00:23:40,430
当你写 出来的时候 加上它 

619
00:23:38,780 --> 00:23:42,410
所以人类多年前就意识到了这一点 

620
00:23:40,430 --> 00:23:44,030
这对我们所有的人来说都是愚蠢的 

621
00:23:42,410 --> 00:23:46,760
世界不断地编写代码 

622
00:23:44,030 --> 00:23:48,830
打开 文件更改文件保存文件 我 

623
00:23:46,760 --> 00:23:50,600
不要我们中的一些人 做得更好 

624
00:23:48,830 --> 00:23:51,680
实现 该功能 然后 

625
00:23:50,600 --> 00:23:53,810
与世界分享

626
00:23:51,680 --> 00:23:55,250
因而 有效地 诞生了 数据库 

627
00:23:53,810 --> 00:23:57,380
而这些日子有很多不同

628
00:23:55,250 --> 00:23:59,090
您可能熟悉的数据库类型

629
00:23:57,380 --> 00:24:01,340
用工具商业软件就好 

630
00:23:59,090 --> 00:24:03,650
Oracle或续集服务器或 Microsoft 

631
00:24:01,340 --> 00:24:06,440
访问 和开源世界 

632
00:24:03,650 --> 00:24:08,780
Postgres和MySQL以及续集 Lite和 

633
00:24:06,440 --> 00:24:10,490
其他人，其中许多甚至是那些人 

634
00:24:08,780 --> 00:24:12,680
名字暗示使用特殊语言 

635
00:24:10,490 --> 00:24:14,690
称为续集结构化查询语言 

636
00:24:12,680 --> 00:24:16,610
这是我们 最后的语言 

637
00:24:14,690 --> 00:24:18,020
除非你去 ， 否则你会 在cs50中介绍你 

638
00:24:16,610 --> 00:24:20,000
关上 自己与最终项目 

639
00:24:18,020 --> 00:24:21,920
拿起更多东西，但续集 

640
00:24:20,000 --> 00:24:23,930
你有能力选择 数据吗？ 

641
00:24:21,920 --> 00:24:25,700
从数据库插入它以删除 

642
00:24:23,930 --> 00:24:27,260
它来更新它的所有的事情 ， 

643
00:24:25,700 --> 00:24:30,230
你绝对可以用Python和 

644
00:24:27,260 --> 00:24:33,020
它只是如此乏味的 CSV 

645
00:24:30,230 --> 00:24:34,970
写的代码自己 那么 这些行 

646
00:24:33,020 --> 00:24:37,970
什么是正确的心理模型是我

647
00:24:34,970 --> 00:24:39,560
声称基本上是一个 像大多数人 

648
00:24:37,970 --> 00:24:40,850
这个房间里的每个人都可能用过 

649
00:24:39,560 --> 00:24:44,180
Google Spreadsheets，如果你没有 

650
00:24:40,850 --> 00:24:46,040
大概Excel或也许苹果这样的数字

651
00:24:44,180 --> 00:24:47,690
这些是电子表格，他们是 

652
00:24:46,040 --> 00:24:50,300
基本上你可以称之为

653
00:24:47,690 --> 00:24:51,680
关系数据库关系暗示 

654
00:24:50,300 --> 00:24:52,850
那之间有关系

655
00:24:51,680 --> 00:24:55,160
行和列中的各种数据

656
00:24:52,850 --> 00:24:57,260
由你决定或谁做它， 

657
00:24:55,160 --> 00:25:00,260
这是一个电子表格当然和它 

658
00:24:57,260 --> 00:25:02,300
有你的实体实际的行

659
00:25:00,260 --> 00:25:04,310
数据和列和什么是 

660
00:25:02,300 --> 00:25:06,350
关于列的值得注意的 

661
00:25:04,310 --> 00:25:08,620
用它 做什么 都是 常规的 

662
00:25:06,350 --> 00:25:11,030
特别是在第一 行中的列 

663
00:25:08,620 --> 00:25:12,800
是的给你一些标题值

664
00:25:11,030 --> 00:25:14,600
当然可以把它们放在左边 

665
00:25:12,800 --> 00:25:16,190
这只是人类喜欢它似乎阅读 

666
00:25:14,600 --> 00:25:18,050
从上到下而不是左到所有 

667
00:25:16,190 --> 00:25:19,670
向右走，所以我们刚 采用了一个 

668
00:25:18,050 --> 00:25:21,170
惯例几年前你的专栏

669
00:25:19,670 --> 00:25:24,800
代表不同类型的数据 和 

670
00:25:21,170 --> 00:25:26,960
行代表不同的 值 

671
00:25:24,800 --> 00:25:28,880
那些字段或那些列所以 

672
00:25:26,960 --> 00:25:31,190
如果你想要一家商店，那就这么说吧

673
00:25:28,880 --> 00:25:32,660
一堆的价值电子表格 

674
00:25:31,190 --> 00:25:35,450
班级或大学的学生 

675
00:25:32,660 --> 00:25:37,570
一 列可能是他们的ID号 

676
00:25:35,450 --> 00:25:39,550
哈佛身份证或他们耶鲁的想法另一个

677
00:25:37,570 --> 00:25:41,860
可能是他们的电子邮件地址

678
00:25:39,550 --> 00:25:43,300
电话号码年龄 等 你 和 你 

679
00:25:41,860 --> 00:25:44,890
可以说你可以 做到的全部 

680
00:25:43,300 --> 00:25:46,900
它非常 黑体字顶部和 

681
00:25:44,890 --> 00:25:49,060
组织事情并缩短它但在 某些方面 

682
00:25:46,900 --> 00:25:50,590
指出这不是 一个 合适的 工具 

683
00:25:49,060 --> 00:25:52,480
事实上我在毕业时碰到了这个

684
00:25:50,590 --> 00:25:53,830
学校几年前我在分析 

685
00:25:52,480 --> 00:25:55,570
大量的数据， 它只是 

686
00:25:53,830 --> 00:25:57,490
方便 双击CSV文件 

687
00:25:55,570 --> 00:25:59,110
在Excel中打开它并只是操纵它 

688
00:25:57,490 --> 00:26:01,870
并回答我的数据问题 

689
00:25:59,110 --> 00:26:06,970
有，但是在当天的Excel 实际 

690
00:26:01,870 --> 00:26:10,030
有一个65,536 行的限制听起来 像一个 

691
00:26:06,970 --> 00:26:12,280
很多，这是2到16的 权力， 如果 

692
00:26:10,030 --> 00:26:14,050
你 抓住了那里的参考但是在那里 

693
00:26:12,280 --> 00:26:16,510
几年前人类和微软决定

694
00:26:14,050 --> 00:26:18,520
这就 足够了， 而且很坦率 

695
00:26:16,510 --> 00:26:20,590
因为即使在成千上万行 

696
00:26:18,520 --> 00:26:22,030
就像我的Mac 因为无法使用而无法使用 

697
00:26:20,590 --> 00:26:24,550
只是有太多的内存 是 

698
00:26:22,030 --> 00:26:27,040
使用所以我们说只是 不切实际的限制 

699
00:26:24,550 --> 00:26:36,310
无论如何，但在某些 时候你 可能 想要 

700
00:26:27,040 --> 00:26:38,110
存储 65,536谷歌和Facebook和 

701
00:26:36,310 --> 00:26:40,180
其他人肯定已经这样做了 你 

702
00:26:38,110 --> 00:26:41,800
不能只在Mac上使用程序 或 

703
00:26:40,180 --> 00:26:44,140
PC 你不再需要使用发烧友了 

704
00:26:41,800 --> 00:26:46,600
软件，但经常是那个更高级的软件

705
00:26:44,140 --> 00:26:48,700
仍然有效， 你有 一个 同样的方式 

706
00:26:46,600 --> 00:26:50,950
我们的主要文件称为电子表格 

707
00:26:48,700 --> 00:26:52,840
人类世界， 但在服务器世界你 

708
00:26:50,950 --> 00:26:54,730
可能会把 它称为数据库而不是 

709
00:26:52,840 --> 00:26:56,350
而在我们的人类世界中， 我们可能拥有 

710
00:26:54,730 --> 00:26:58,330
称为床单或个人的东西

711
00:26:56,350 --> 00:26:59,680
电子表格在更大的文件中 

712
00:26:58,330 --> 00:27:01,720
数据库，你会有所谓的东西 

713
00:26:59,680 --> 00:27:04,030
表，但它们是完全 一样的东西 

714
00:27:01,720 --> 00:27:06,100
有行和列等我们的时候 

715
00:27:04,030 --> 00:27:08,440
要实际存储的数据 ，我们可以 

716
00:27:06,100 --> 00:27:09,880
实际上 以完全相同的方式 存储 它 

717
00:27:08,440 --> 00:27:12,580
所以让我继续这样做让我 离开 

718
00:27:09,880 --> 00:27:15,190
提前开放 Google Spreadsheets 

719
00:27:12,580 --> 00:27:17,290
只是代表一个数据库和 

720
00:27:15,190 --> 00:27:21,850
让我继续创建 一个 新文件 

721
00:27:17,290 --> 00:27:23,680
这是如此新的 电子表格，就这样 

722
00:27:21,850 --> 00:27:25,420
我们可以像学生一样代表

723
00:27:23,680 --> 00:27:27,610
我打电话给这个电子表格的学生 

724
00:27:25,420 --> 00:27:29,920
在这里，我要把他们的身份证 

725
00:27:27,610 --> 00:27:31,300
号码和他们的名字，有些是什么

726
00:27:29,920 --> 00:27:38,920
其他领域我为此而烦恼不已 

727
00:27:31,300 --> 00:27:41,380
记住电子邮件再说宿舍好运动

728
00:27:38,920 --> 00:27:43,350
好吧所以运动他们想 确定那是 

729
00:27:41,380 --> 00:27:46,340
好一点 

730
00:27:43,350 --> 00:27:48,780
还有什么

731
00:27:46,340 --> 00:27:53,280
毕业你的年龄 还不错 

732
00:27:48,780 --> 00:27:54,600
毕业年龄集中好 

733
00:27:53,280 --> 00:27:56,610
我们可能继续坚持下去 

734
00:27:54,600 --> 00:27:58,559
变得越来越宽 ，这些都是我的 

735
00:27:56,610 --> 00:28:00,660
列，如果你愿意或者在 

736
00:27:58,559 --> 00:28:02,730
数据库，你 坦率地说 我可以 

737
00:28:00,660 --> 00:28:04,530
如果我真的想要整洁，请说出这个

738
00:28:02,730 --> 00:28:05,549
在这里，我可以打电话给这些学生和 

739
00:28:04,530 --> 00:28:07,559
你知道我应该怎么称呼这个 

740
00:28:05,549 --> 00:28:09,630
不是学生而是大学，因为我 

741
00:28:07,559 --> 00:28:11,429
可能想在这里有另一个标签 

742
00:28:09,630 --> 00:28:13,799
所有人都会先发制人地说出来 

743
00:28:11,429 --> 00:28:15,660
教职员工可能有身份证 

744
00:28:13,799 --> 00:28:17,340
数字， 他们有名字和他们 

745
00:28:15,660 --> 00:28:19,230
可能有部门

746
00:28:17,340 --> 00:28:21,600
他们也可能有电子邮件和 

747
00:28:19,230 --> 00:28:23,250
所以我的意思是你的电话 号码 

748
00:28:21,600 --> 00:28:25,770
一个又一个，但我可能 要 种 

749
00:28:23,250 --> 00:28:27,299
聚集这些不同类型的数据 

750
00:28:25,770 --> 00:28:28,620
不同的电子表格因为它们是 

751
00:28:27,299 --> 00:28:30,330
那种苹果和 橘子可能会 

752
00:28:28,620 --> 00:28:32,370
有些重叠， 但它们是截然不同的 

753
00:28:30,330 --> 00:28:34,350
所以 我在数据库中有不同的表格 

754
00:28:32,370 --> 00:28:35,970
世界你做同样的事情，除了 

755
00:28:34,350 --> 00:28:38,160
你把整个事情称为数据库和 

756
00:28:35,970 --> 00:28:40,380
你把这些事情表称为清楚 

757
00:28:38,160 --> 00:28:42,299
但更重要的是真实的 

758
00:28:40,380 --> 00:28:44,160
数据库可以说你必须是一个 

759
00:28:42,299 --> 00:28:46,230
告诉他们更加积极主动 

760
00:28:44,160 --> 00:28:47,549
数据库您 想要 什么类型 的数据 

761
00:28:46,230 --> 00:28:49,590
现在店里的 那些 你已经使用 谷歌 

762
00:28:47,549 --> 00:28:51,480
Excel中的电子表格和Apple数字

763
00:28:49,590 --> 00:28:53,190
知道你可以去喜欢这种格式 

764
00:28:51,480 --> 00:28:54,630
菜单或 数据菜单或其他和 

765
00:28:53,190 --> 00:28:56,640
你可以用不同的小数表示事物 

766
00:28:54,630 --> 00:28:58,590
你可以把东西变成百分之 

767
00:28:56,640 --> 00:29:00,120
你可以格式化数据但是 

768
00:28:58,590 --> 00:29:01,559
不倾向于有任何功能 

769
00:29:00,120 --> 00:29:03,540
对您的数据的影响 只是一个 

770
00:29:01,559 --> 00:29:05,220
美学细节，如多长或短 

771
00:29:03,540 --> 00:29:07,860
你想显示数字吗？ 

772
00:29:05,220 --> 00:29:10,140
您的列和单元格， 但有 

773
00:29:07,860 --> 00:29:12,270
您可以实际提供多汁的数据库

774
00:29:10,140 --> 00:29:15,390
提示数据库将有所帮助 

775
00:29:12,270 --> 00:29:18,299
该数据库存储并查找数据 

776
00:29:15,390 --> 00:29:20,460
比如说你效率更高 

777
00:29:18,299 --> 00:29:22,620
这是一个数据类型的 清单 

778
00:29:20,460 --> 00:29:24,480
我们 在续集中 访问 了所以 

779
00:29:22,620 --> 00:29:25,620
续集是与 我们的语言

780
00:29:24,480 --> 00:29:28,140
能够查询数据库 

781
00:29:25,620 --> 00:29:30,240
坦率地说，像 谷歌 这样的东西 

782
00:29:28,140 --> 00:29:31,799
电子表格和 Microsoft Excel如何 

783
00:29:30,240 --> 00:29:34,020
你找到我们常常 喜欢的数据吗？ 

784
00:29:31,799 --> 00:29:35,970
命令F或控制F，你搜索 

785
00:29:34,020 --> 00:29:37,440
因为它不是 你的程序化程度 

786
00:29:35,970 --> 00:29:39,150
我可以用宏等等做到这一点

787
00:29:37,440 --> 00:29:40,620
用代码做这个，但续集你是 

788
00:29:39,150 --> 00:29:43,470
要去得首先做出一些决定

789
00:29:40,620 --> 00:29:45,450
续集支持一些不同的数据

790
00:29:43,470 --> 00:29:46,530
至少以其中一种形式输入它 

791
00:29:45,450 --> 00:29:49,620
原来那里有很多竞争对手 

792
00:29:46,530 --> 00:29:51,090
在那里 续集是一个通用 的语言 

793
00:29:49,620 --> 00:29:52,890
但不同的公司和不同 

794
00:29:51,090 --> 00:29:55,080
非营利组织提出了 他们的意见 

795
00:29:52,890 --> 00:29:57,210
自己的方言非常像人类 

796
00:29:55,080 --> 00:29:58,290
可能会说话，我们可能会发出一些声音 

797
00:29:57,210 --> 00:29:59,250
说西班牙语很不错

798
00:29:58,290 --> 00:30:00,600
变化 

799
00:29:59,250 --> 00:30:02,610
西班牙语更不用说很多了

800
00:30:00,600 --> 00:30:03,960
其他语言和类似的 

801
00:30:02,610 --> 00:30:06,450
编程世界就是那样的 

802
00:30:03,960 --> 00:30:07,440
语言中常见的单词子集但是 

803
00:30:06,450 --> 00:30:08,760
然后不同的公司和 不同 

804
00:30:07,440 --> 00:30:10,650
人们可能会增加 和减少 

805
00:30:08,760 --> 00:30:12,690
他们自己的功能只是因为他们

806
00:30:10,650 --> 00:30:15,990
认为这 对他们的用例 更好 

807
00:30:12,690 --> 00:30:18,870
所以在续集Lite这是 数据库 

808
00:30:15,990 --> 00:30:21,030
我们将在cs50 IDE中使用的技术

809
00:30:18,870 --> 00:30:23,670
Android使用它，它非常受欢迎 

810
00:30:21,030 --> 00:30:26,340
在其他情况下 过 的iOS以及 他们 

811
00:30:23,670 --> 00:30:29,220
只有少数数据类型的blob 

812
00:30:26,340 --> 00:30:30,630
事物整数数字真实和文本 现在 

813
00:30:29,220 --> 00:30:31,500
这是什么意思 以及它原来 它 

814
00:30:30,630 --> 00:30:33,420
意味着不同的东西 

815
00:30:31,500 --> 00:30:35,580
数据库和另一个流行的数据 

816
00:30:33,420 --> 00:30:37,400
它被称为Postgres或Postgres续集 

817
00:30:35,580 --> 00:30:39,600
这是一个非常受欢迎的 

818
00:30:37,400 --> 00:30:40,920
高性能网站，如果你是 

819
00:30:39,600 --> 00:30:42,270
试图建立一个你正在尝试的企业 

820
00:30:40,920 --> 00:30:43,950
使每个人都使用的应用程序

821
00:30:42,270 --> 00:30:45,750
在校园里 一般你会用一个 

822
00:30:43,950 --> 00:30:47,460
发烧友科技比续集 精简版 

823
00:30:45,750 --> 00:30:49,410
根据定义 ，它是轻量级的 

824
00:30:47,460 --> 00:30:51,540
你做了像Postgres这样的事情 

825
00:30:49,410 --> 00:30:53,070
我们将向您介绍这两种 

826
00:30:51,540 --> 00:30:54,930
沿途的方言因为每一个 

827
00:30:53,070 --> 00:30:56,970
它们允许我们做不同的事情 

828
00:30:54,930 --> 00:31:00,240
具有不同 的精确度 

829
00:30:56,970 --> 00:31:01,650
所以在续集中让我们声称尽管如此 

830
00:31:00,240 --> 00:31:04,080
它 至少 是一种 简化 

831
00:31:01,650 --> 00:31:05,670
这些数据类型在决定什么类型时 

832
00:31:04,080 --> 00:31:07,380
要存储在数据库表中的数据 

833
00:31:05,670 --> 00:31:07,980
你不仅要决定它是什么 

834
00:31:07,380 --> 00:31:10,440
叫

835
00:31:07,980 --> 00:31:12,690
喜欢身份证和姓名， 电子邮件和宿舍 

836
00:31:10,440 --> 00:31:14,010
必须决定它是什么数据类型 

837
00:31:12,690 --> 00:31:15,690
我们有点完整的循环因为 

838
00:31:14,010 --> 00:31:19,140
我们 最后 一次 这样做是为了什么 

839
00:31:15,690 --> 00:31:20,940
语言见续集二你做 

840
00:31:19,140 --> 00:31:22,770
这个，但它不是 挑剔的 

841
00:31:20,940 --> 00:31:24,720
实际上提高了性能，所以这是 

842
00:31:22,770 --> 00:31:26,130
帮助您 更多地 了解这些 数据 

843
00:31:24,720 --> 00:31:28,260
因为服务器越多越有效率

844
00:31:26,130 --> 00:31:30,660
数据库知道您的数据 

845
00:31:28,260 --> 00:31:32,670
它可以更快地找到它 

846
00:31:30,660 --> 00:31:34,320
你一般的数据库世界

847
00:31:32,670 --> 00:31:36,300
必须决定不只是存储一个 

848
00:31:34,320 --> 00:31:38,850
整数， 但要么是一个小蚂蚁 

849
00:31:36,300 --> 00:31:41,520
整数或大整数和一般 

850
00:31:38,850 --> 00:31:43,710
在大多数数据库中至少 讲 这个 

851
00:31:41,520 --> 00:31:45,930
可能是2个字节， 这可能是4个字节 

852
00:31:43,710 --> 00:31:47,480
这可能是8个字节， 所以我们可能 

853
00:31:45,930 --> 00:31:50,370
如果你有一个家庭，这里给家人留下深刻印象

854
00:31:47,480 --> 00:31:51,750
什么是 32位整数 或4个字节 

855
00:31:50,370 --> 00:31:53,990
您可以在存储最大的整数 您 

856
00:31:51,750 --> 00:31:53,990
数据库

857
00:31:56,550 --> 00:32:01,810
有人请 留下深刻印象的 四 十亿 

858
00:32:00,250 --> 00:32:03,640
完全正确 ，可能 是四个 

859
00:32:01,810 --> 00:32:05,110
十亿正面价值或者可能是它

860
00:32:03,640 --> 00:32:07,000
只有两个十亿，如果你也想 

861
00:32:05,110 --> 00:32:07,540
有20亿左右的负数 

862
00:32:07,000 --> 00:32:11,350
同样

863
00:32:07,540 --> 00:32:14,230
大INT 使用 64位这 仅仅是 

864
00:32:11,350 --> 00:32:16,030
大规模的大而小的int 

865
00:32:14,230 --> 00:32:18,100
或小int而不是那么微小 

866
00:32:16,030 --> 00:32:19,570
int 和一些方言 小蚂蚁就是 

867
00:32:18,100 --> 00:32:24,730
两个字节，它实际上计为 

868
00:32:19,570 --> 00:32:26,500
正如我之前提到的那样，高达65535 

869
00:32:24,730 --> 00:32:28,330
你只需要现在决定为什么会 

870
00:32:26,500 --> 00:32:30,100
你选择一个 而不是另一个 

871
00:32:28,330 --> 00:32:31,450
可以只使用大的int和存储小 

872
00:32:30,100 --> 00:32:33,400
数字和大数字一样 

873
00:32:31,450 --> 00:32:35,110
以及为什么你可能只是 直觉上没有 

874
00:32:33,400 --> 00:32:37,960
想要制作所有整数值 

875
00:32:35,110 --> 00:32:41,440
在数据库中开始它只是简单 

876
00:32:37,960 --> 00:32:43,360
给我尽可能多的头上空间 

877
00:32:41,440 --> 00:32:45,310
你只是不必要地使用内存 

878
00:32:43,360 --> 00:32:47,590
对，为什么要使用比你 需要更多的内存

879
00:32:45,310 --> 00:32:48,940
到 现在为止可以说是得到了内存这么便宜 

880
00:32:47,590 --> 00:32:51,010
这些天电脑变得越来越大 

881
00:32:48,940 --> 00:32:53,050
而且在某些情况下 更快， 所以不是 

882
00:32:51,010 --> 00:32:55,750
很重要，但如果你有很多数据

883
00:32:53,050 --> 00:32:57,910
以及数据库中的每一行 

884
00:32:55,750 --> 00:32:59,830
是 两个字节大于它需要 

885
00:32:57,910 --> 00:33:02,380
我的意思是你有一百万 行 

886
00:32:59,830 --> 00:33:03,970
那个已经很大的是 字节数 

887
00:33:02,380 --> 00:33:05,740
你只是在浪费和投掷 

888
00:33:03,970 --> 00:33:07,150
因此， 实际上 你应该这样做 

889
00:33:05,740 --> 00:33:08,410
一些人想到了这些数据类型 

890
00:33:07,150 --> 00:33:10,810
当然你不想太小 

891
00:33:08,410 --> 00:33:13,000
因为如果你使用一个小int或者也许 

892
00:33:10,810 --> 00:33:15,490
即使是整数， 但业务也是如此 

893
00:33:13,000 --> 00:33:18,580
好，你有超过40亿

894
00:33:15,490 --> 00:33:20,710
用户或四十亿行或四行 

895
00:33:18,580 --> 00:33:22,420
十亿种食物，酒吧和贝司 

896
00:33:20,710 --> 00:33:24,220
已经出售绝对发生 

897
00:33:22,420 --> 00:33:27,790
做google和世界各地的Facebook 

898
00:33:24,220 --> 00:33:30,460
你最好开始使用64位 

899
00:33:27,790 --> 00:33:31,990
代表唯一的价值而不仅仅是 

900
00:33:30,460 --> 00:33:34,240
32 因为最终你会用完 

901
00:33:31,990 --> 00:33:36,220
以及除了整数值之外还有什么 

902
00:33:34,240 --> 00:33:37,870
续集你可能想要使用浮动 

903
00:33:36,220 --> 00:33:39,340
点值那些是实 数 

904
00:33:37,870 --> 00:33:40,690
有小数点的话 ，此 

905
00:33:39,340 --> 00:33:42,100
很像C，他们被称为一点点 

906
00:33:40,690 --> 00:33:44,380
不同的东西，故意的 

907
00:33:42,100 --> 00:33:46,300
在这种情况下使用两个单词但是真实的

908
00:33:44,380 --> 00:33:48,100
数是一个32位值 ，该 值 是一个 

909
00:33:46,300 --> 00:33:50,140
浮点值就像 C中 的浮点数一样 

910
00:33:48,100 --> 00:33:52,090
双精度就像是双倍精度 

911
00:33:50,140 --> 00:33:54,700
C是64 位，只是让 

912
00:33:52,090 --> 00:33:56,320
你可以获得更精细的控制权 

913
00:33:54,700 --> 00:33:57,910
我们见过的小数点是因为 

914
00:33:56,320 --> 00:34:00,340
当然你不能 代表数字 

915
00:33:57,910 --> 00:34:03,130
正是因为不精确的作为 

916
00:34:00,340 --> 00:34:04,630
我们在Python和C数字中看到过

917
00:34:03,130 --> 00:34:06,430
对于 一堆人来说， 这是 一种无所不能 

918
00:34:04,630 --> 00:34:09,160
数字相关的事情并不完全 

919
00:34:06,430 --> 00:34:09,609
整数或实数必然是布尔a 

920
00:34:09,160 --> 00:34:11,649
是或

921
00:34:09,609 --> 00:34:13,359
假值日期，如果你愿意 

922
00:34:11,649 --> 00:34:16,419
字面上存储像年年

923
00:34:13,359 --> 00:34:18,129
- 月- 日 - 日和标准 

924
00:34:16,419 --> 00:34:19,989
计算机格式即使是人类 

925
00:34:18,129 --> 00:34:21,429
文化因他们写日期而异 

926
00:34:19,989 --> 00:34:24,669
时间，如果你想有一个日期和 

927
00:34:21,429 --> 00:34:26,799
实际上数字 之后的时间

928
00:34:24,669 --> 00:34:29,349
问题的解决方案证明了这一点 

929
00:34:26,799 --> 00:34:31,659
毕竟这一次我们终于有了 

930
00:34:29,349 --> 00:34:34,450
用于存储数字的 内置 机制 

931
00:34:31,659 --> 00:34:36,039
确切地说 ，这是完美的时间 

932
00:34:34,450 --> 00:34:36,849
因为你在cs50 财务时 

933
00:34:36,039 --> 00:34:38,619
处理钱 

934
00:34:36,849 --> 00:34:40,989
如果你不这样做会很好 

935
00:34:38,619 --> 00:34:42,579
不小心圆了多少钱 

936
00:34:40,989 --> 00:34:44,499
有人或者略低 

937
00:34:42,579 --> 00:34:47,109
略的你高的 可能 

938
00:34:44,499 --> 00:34:48,879
家庭，特别是因为 少数人 

939
00:34:47,109 --> 00:34:51,730
电影早在一天 ，如果你见过 

940
00:34:48,879 --> 00:34:53,799
超人3这是多少钱 

941
00:34:51,730 --> 00:34:55,480
通过刮掉几分钱来制作 

942
00:34:53,799 --> 00:34:58,869
计算机系统和更现代的李 

943
00:34:55,480 --> 00:35:00,640
办公空间办公空间这样做 

944
00:34:58,869 --> 00:35:02,049
好大骗局试图完善这些 

945
00:35:00,640 --> 00:35:04,749
如果你使用正确的话，那就好了

946
00:35:02,049 --> 00:35:07,210
技术和语言与续集 你 

947
00:35:04,749 --> 00:35:09,369
实际上可以指定数值数据类型 

948
00:35:07,210 --> 00:35:11,349
这就像一个浮点值但是 

949
00:35:09,369 --> 00:35:13,660
你基本上指定了总数 

950
00:35:11,349 --> 00:35:15,009
您想要处理的数字以及如何 处理 

951
00:35:13,660 --> 00:35:17,259
其中许多应该在十进制之后 

952
00:35:15,009 --> 00:35:18,910
这点在股市中 很常见 

953
00:35:17,259 --> 00:35:21,160
实际上使用四个小数点 

954
00:35:18,910 --> 00:35:22,839
精确所以不仅仅是时态的美分 

955
00:35:21,160 --> 00:35:24,670
在 数百个地方， 但到了 

956
00:35:22,839 --> 00:35:26,349
千万。 把 你 

957
00:35:24,670 --> 00:35:29,019
现在可以指定使用的值

958
00:35:26,349 --> 00:35:31,119
四是精确 而 你不必 

959
00:35:29,019 --> 00:35:33,069
担心那些 舍入区域 错误 

960
00:35:31,119 --> 00:35:34,569
我们在时间和 时间 之前谈过

961
00:35:33,069 --> 00:35:36,279
盖章已经过了多少时间 

962
00:35:34,569 --> 00:35:38,380
因为日期和时间的门也是 

963
00:35:36,279 --> 00:35:41,499
续集然后再提供给你 

964
00:35:38,380 --> 00:35:43,329
最后这里的文字值证明了你 

965
00:35:41,499 --> 00:35:45,339
有值的时候选择

966
00:35:43,329 --> 00:35:47,259
来决定要有多少个字符 

967
00:35:45,339 --> 00:35:49,809
用于存储您可以使用char的数据 

968
00:35:47,259 --> 00:35:51,670
就像C中的数组一样 

969
00:35:49,809 --> 00:35:53,440
必须事先决定 一个字符串 

970
00:35:51,670 --> 00:35:55,089
要使用多少字节，如果你说 

971
00:35:53,440 --> 00:35:58,029
char 8你得到八个字节 

972
00:35:55,089 --> 00:36:00,160
如果你的名字是 Mahlon ma LAN 

973
00:35:58,029 --> 00:36:03,039
浪费三个或如果我们 知道终止 

974
00:36:00,160 --> 00:36:04,779
两个字节，但续集介绍 

975
00:36:03,039 --> 00:36:07,299
Python给我们的解决方案

976
00:36:04,779 --> 00:36:09,730
to varchar'作为 暗示 的名称 

977
00:36:07,299 --> 00:36:11,680
可变数量的字符 允许您 

978
00:36:09,730 --> 00:36:13,359
指定一个上限 ，如果你 

979
00:36:11,680 --> 00:36:15,190
知道你的一个专栏正在进行中 

980
00:36:13,359 --> 00:36:17,769
被称为姓名和一个人的名字

981
00:36:15,190 --> 00:36:19,329
可能是像五个字母或 可能的 局域网 

982
00:36:17,769 --> 00:36:21,549
对于有更长时间的人来说 肯定 更多 

983
00:36:19,329 --> 00:36:23,020
您可以说的姓氏或名字 

984
00:36:21,549 --> 00:36:25,360
VAR char 

985
00:36:23,020 --> 00:36:26,830
百，这是上限 

986
00:36:25,360 --> 00:36:29,140
它有多长，但数据库将是 

987
00:36:26,830 --> 00:36:31,750
聪明， 如果你只需要五个字符 

988
00:36:29,140 --> 00:36:34,360
或五个字节，它不会浪费 九十五 

989
00:36:31,750 --> 00:36:34,780
其他人为你优化它 

990
00:36:34,360 --> 00:36:36,730
您

991
00:36:34,780 --> 00:36:38,860
如果你愿意，最后发短信 

992
00:36:36,730 --> 00:36:41,050
存储成千上万的段落 

993
00:36:38,860 --> 00:36:42,040
或者 甚至更大 的 文本 页面 

994
00:36:41,050 --> 00:36:44,560
varchar'你不一定在哪里

995
00:36:42,040 --> 00:36:46,630
想要一个定义明确的上限你 

996
00:36:44,560 --> 00:36:49,240
想要一大块记忆但是有 

997
00:36:46,630 --> 00:36:51,670
这里有什么意义，很快就是 char 

998
00:36:49,240 --> 00:36:53,110
和varchar'似乎不均匀

999
00:36:51,670 --> 00:36:55,180
补充只是char似乎 

1000
00:36:53,110 --> 00:36:56,950
不必要为什么把自己画成一个 

1001
00:36:55,180 --> 00:36:58,990
一角，说给我 八个字节 

1002
00:36:56,950 --> 00:37:02,440
什么时候你可以 说给我 

1003
00:36:58,990 --> 00:37:05,260
100字节 ，你和数据库服务器 

1004
00:37:02,440 --> 00:37:07,120
弄清楚实际使用了多少

1005
00:37:05,260 --> 00:37:13,150
为什么这两种数据类型 存在 是啊 

1006
00:37:07,120 --> 00:37:15,160
时间是的，所以时间 就可以了 

1007
00:37:13,150 --> 00:37:16,630
使用一个数据 实际上需要更长的时间 

1008
00:37:15,160 --> 00:37:19,000
类型或其他如何可能 

1009
00:37:16,630 --> 00:37:21,490
如果你有价值，可能会很好 

1010
00:37:19,000 --> 00:37:23,950
像char那样你指定 一个精确的 

1011
00:37:21,490 --> 00:37:25,450
如果 你的 话，像八个字符的数量

1012
00:37:23,950 --> 00:37:27,580
想想谷歌中 的专栏 

1013
00:37:25,450 --> 00:37:30,340
电子表格中的 每一个都 优于excel 

1014
00:37:27,580 --> 00:37:31,630
单元格完全相同的列 

1015
00:37:30,340 --> 00:37:34,180
宽度正确它是 8个字节 

1016
00:37:31,630 --> 00:37:37,630
8字节8字节8字节，并尽快 

1017
00:37:34,180 --> 00:37:40,990
你完全不断抵消这一点 

1018
00:37:37,630 --> 00:37:43,420
是字节0 这是8这是16这是 

1019
00:37:40,990 --> 00:37:45,490
24这是32 ，依此类推 

1020
00:37:43,420 --> 00:37:47,290
重新引入 的能力，在 --see 

1021
00:37:45,490 --> 00:37:49,330
我们有阵列你随机

1022
00:37:47,290 --> 00:37:51,070
访问做简单的简单算术 

1023
00:37:49,330 --> 00:37:53,680
乘法加法和减法 

1024
00:37:51,070 --> 00:37:56,740
你可以跳转到任何元素 

1025
00:37:53,680 --> 00:37:59,050
列如果它使用相同数量的 

1026
00:37:56,740 --> 00:38:02,410
每个单元格的字节， 但使用varchar' 

1027
00:37:59,050 --> 00:38:04,870
如果你需要小非常狭窄

1028
00:38:02,410 --> 00:38:06,580
呼叫细胞 和你要去的宽细胞 

1029
00:38:04,870 --> 00:38:08,320
有什么叫做参差不齐的数组 

1030
00:38:06,580 --> 00:38:09,610
左侧的一侧是这样的 

1031
00:38:08,320 --> 00:38:11,350
讲话将是非常直和 

1032
00:38:09,610 --> 00:38:13,420
僵硬但另一方可能有点 

1033
00:38:11,350 --> 00:38:15,460
根据单词的长度而有所不同

1034
00:38:13,420 --> 00:38:17,530
您的大约时间点列

1035
00:38:15,460 --> 00:38:20,110
这会让计算机有更多的时间 

1036
00:38:17,530 --> 00:38:22,000
搜索varchar'字段，因为它 

1037
00:38:20,110 --> 00:38:23,650
不能只跳到 第三个元素 吧 

1038
00:38:22,000 --> 00:38:25,330
必须潜在地搜索所有这些 

1039
00:38:23,650 --> 00:38:26,980
但幸运的是，在一天结束时 

1040
00:38:25,330 --> 00:38:29,530
数据库并不是这样做的 

1041
00:38:26,980 --> 00:38:31,630
演变为线性搜索CSV以进化 

1042
00:38:29,530 --> 00:38:33,760
为了我们的目的进入线性搜索 

1043
00:38:31,630 --> 00:38:35,410
魔术和那种知识分子 

1044
00:38:33,760 --> 00:38:36,880
秘密酱的财产可以这么说 

1045
00:38:35,410 --> 00:38:38,710
进入数据库 或 

1046
00:38:36,880 --> 00:38:41,079
续集服务器Microsoft Access Postgres 

1047
00:38:38,710 --> 00:38:43,269
我的续集和续集呃真的 

1048
00:38:41,079 --> 00:38:45,759
智能电脑科学家已经决定

1049
00:38:43,269 --> 00:38:48,400
实现算法 和花哨的数据 

1050
00:38:45,759 --> 00:38:51,069
结构通常以树为基础 

1051
00:38:48,400 --> 00:38:53,589
我们对二叉树或尝试的讨论

1052
00:38:51,069 --> 00:38:55,750
在哈希表和那些更高级的数据上 

1053
00:38:53,589 --> 00:38:57,309
结构他们已经烘烤了这些种类

1054
00:38:55,750 --> 00:38:59,289
数据结构和设计 

1055
00:38:57,309 --> 00:39:00,789
他们 制作 了数据库软件 

1056
00:38:59,289 --> 00:39:03,250
免费或商业 

1057
00:39:00,789 --> 00:39:04,779
可用，所以我们现在只有 一个 

1058
00:39:03,250 --> 00:39:06,819
抽象称为数据库 

1059
00:39:04,779 --> 00:39:08,500
我们可以存储数据 并 阅读它 

1060
00:39:06,819 --> 00:39:10,630
更新它写它并快速更改它 

1061
00:39:08,500 --> 00:39:13,299
无需 实现 所有 这些 

1062
00:39:10,630 --> 00:39:14,769
低水平管道我们自己等等

1063
00:39:13,299 --> 00:39:16,509
这最终是数据库的意义 所在 

1064
00:39:14,769 --> 00:39:18,789
要给 我们，但我们必须实际 

1065
00:39:16,509 --> 00:39:21,130
有权访问数据库 来做到这一点 

1066
00:39:18,789 --> 00:39:23,950
我们需要先实际 决定先帮忙 

1067
00:39:21,130 --> 00:39:27,700
数据库告诉它 要存储 什么 

1068
00:39:23,950 --> 00:39:29,710
在何处以及如何将其存储为一个类型 ，以便 

1069
00:39:27,700 --> 00:39:32,019
为什么我们不这样做 让我继续前进 

1070
00:39:29,710 --> 00:39:34,869
做到这一点 与几个 

1071
00:39:32,019 --> 00:39:37,089
例子让我去进取 ， 不断 开拓 

1072
00:39:34,869 --> 00:39:40,559
cs50 IDE又是我们基于网络的编程 

1073
00:39:37,089 --> 00:39:43,059
环境，让我进入我们的 

1074
00:39:40,559 --> 00:39:44,799
对于那些不熟悉的终端窗口

1075
00:39:43,059 --> 00:39:46,509
终端窗口只是这个黑色和 

1076
00:39:44,799 --> 00:39:48,309
白色或这个蓝色和白色的窗口 

1077
00:39:46,509 --> 00:39:49,930
你可以输入命令而不是

1078
00:39:48,309 --> 00:39:51,309
不是指向和点击， 双击 

1079
00:39:49,930 --> 00:39:53,170
你只能用文字做事的事情 

1080
00:39:51,309 --> 00:39:55,029
在此窗口中，它原来在 

1081
00:39:53,170 --> 00:39:57,640
续集光的世界我们可以 

1082
00:39:55,029 --> 00:40:00,279
实际上使用了一个 叫续集 的 命令 

1083
00:39:57,640 --> 00:40:02,619
光 3让我们 创造了一个 

1084
00:40:00,279 --> 00:40:03,940
数据库因此在我们的人类世界中为CSVs 

1085
00:40:02,619 --> 00:40:05,049
你已经看到了如何在代码中你可以 

1086
00:40:03,940 --> 00:40:07,690
你可以创建行和列 

1087
00:40:05,049 --> 00:40:10,089
字面上输入文本框续集 

1088
00:40:07,690 --> 00:40:12,369
光和数据库 技术 

1089
00:40:10,089 --> 00:40:13,660
使用二进制格式零和1等 

1090
00:40:12,369 --> 00:40:16,299
你得实际 存储您的 

1091
00:40:13,660 --> 00:40:18,819
使用程序的数据不同，所以如果我 

1092
00:40:16,299 --> 00:40:22,869
想要创建一个名为的文件 

1093
00:40:18,819 --> 00:40:25,269
我可以 直截了当 地说出 IMS 点 数据库 

1094
00:40:22,869 --> 00:40:27,160
续集就像三个frosh IMS DB然后 

1095
00:40:25,269 --> 00:40:29,289
我在这个程序中 这 是一个基于文本的 

1096
00:40:27,160 --> 00:40:30,910
程序，我可以通过它创建我的行 

1097
00:40:29,289 --> 00:40:32,529
并通过设计列， 它 会 

1098
00:40:30,910 --> 00:40:34,119
它有点神秘了 

1099
00:40:32,529 --> 00:40:35,859
看起来有点神秘，但如果我 

1100
00:40:34,119 --> 00:40:37,420
想要继续创建一个像这样的表 

1101
00:40:35,859 --> 00:40:39,549
我要去的电子表格 

1102
00:40:37,420 --> 00:40:41,380
字面上输入创建表我会 

1103
00:40:39,549 --> 00:40:42,700
像上次一样打电话给这个注册人

1104
00:40:41,380 --> 00:40:44,559
一周 我们正在看着IMS 

1105
00:40:42,700 --> 00:40:45,759
新生内部的例子

1106
00:40:44,559 --> 00:40:47,650
体育项目有小孩学生

1107
00:40:45,759 --> 00:40:49,570
注册体育，所以我会 

1108
00:40:47,650 --> 00:40:52,210
我要去的注册人表 

1109
00:40:49,570 --> 00:40:55,270
现在提前并指明我想要 一些 

1110
00:40:52,210 --> 00:40:57,520
此数据库表的列之一 

1111
00:40:55,270 --> 00:40:59,080
我想称之为ID的 其中一个我 

1112
00:40:57,520 --> 00:41:00,730
想叫名字，其中一个我 

1113
00:40:59,080 --> 00:41:02,890
想打电话给宿舍所以我要保留 UPS 

1114
00:41:00,730 --> 00:41:04,960
我不是故意 打击输入 让我 

1115
00:41:02,890 --> 00:41:07,540
清理这个， 所以现在我有三个 

1116
00:41:04,960 --> 00:41:09,190
列ID名称和宿舍 ，如果我是 

1117
00:41:07,540 --> 00:41:10,690
打从理论上进入应该 

1118
00:41:09,190 --> 00:41:11,890
创建一个它不会的数据库 

1119
00:41:10,690 --> 00:41:14,470
像Excel或Google这样的图形

1120
00:41:11,890 --> 00:41:16,990
电子表格，但它将存在于我的IDE中 

1121
00:41:14,470 --> 00:41:18,610
和一个名为frosh IMS DB的文件， 但 我 

1122
00:41:16,990 --> 00:41:20,530
因为我有，所以不能只是进入 

1123
00:41:18,610 --> 00:41:22,210
告诉 数据库我 需要的 更多 

1124
00:41:20,530 --> 00:41:24,400
告诉它 ， 你知道我的ID 

1125
00:41:22,210 --> 00:41:28,080
value应该是一个整数和 

1126
00:41:24,400 --> 00:41:30,690
你知道我的名字应该是什么

1127
00:41:28,080 --> 00:41:32,980
char var char 

1128
00:41:30,690 --> 00:41:36,850
又该学生的名义

1129
00:41:32,980 --> 00:41:38,230
存储为条形图好吧所以varchar' 

1130
00:41:36,850 --> 00:41:39,400
因为如果你，他们会改变 

1131
00:41:38,230 --> 00:41:40,480
可以想到你的 一群朋友 

1132
00:41:39,400 --> 00:41:40,990
他们可能有短名称或长 

1133
00:41:40,480 --> 00:41:42,640
名

1134
00:41:40,990 --> 00:41:44,740
什么是上限是什么 

1135
00:41:42,640 --> 00:41:50,520
朋友的长度你的朋友 

1136
00:41:44,740 --> 00:41:53,320
最长的名字16 嗨是这里的任何人 

1137
00:41:50,520 --> 00:41:57,220
有 名字的第一个名字，最后一个名字 

1138
00:41:53,320 --> 00:41:59,110
超过16好哦哦对不起我听说过 

1139
00:41:57,220 --> 00:42:00,940
16我想，因为你不会 

1140
00:41:59,110 --> 00:42:02,560
能够 注册 frosh IMS因为 

1141
00:42:00,940 --> 00:42:03,790
数据库会截断它和as 

1142
00:42:02,560 --> 00:42:05,740
如果你曾经去过一个地方 

1143
00:42:03,790 --> 00:42:07,720
网站并尝试输入 表单 

1144
00:42:05,740 --> 00:42:10,570
字段和键盘停止 

1145
00:42:07,720 --> 00:42:12,070
工作或你输入一个长词或 

1146
00:42:10,570 --> 00:42:13,840
段落然后你点击Enter和 

1147
00:42:12,070 --> 00:42:15,790
它的一些进展 顺利 

1148
00:42:13,840 --> 00:42:18,010
因为数据库可能只能 

1149
00:42:15,790 --> 00:42:19,660
存储这么多字节，坦率地说 

1150
00:42:18,010 --> 00:42:21,040
经常发生在客户服务论坛上 

1151
00:42:19,660 --> 00:42:22,570
如果他们真的不想要你的话 

1152
00:42:21,040 --> 00:42:24,670
对客户过于冗长

1153
00:42:22,570 --> 00:42:26,080
支持员工他们将限制的长度 

1154
00:42:24,670 --> 00:42:27,460
你正在 打字的领域 

1155
00:42:26,080 --> 00:42:29,380
他们也在数据库上这样做 

1156
00:42:27,460 --> 00:42:30,610
但也可能是 实用的人 

1157
00:42:29,380 --> 00:42:32,920
他们不想读大的原因 

1158
00:42:30,610 --> 00:42:34,660
投诉，这就是这么久50 

1159
00:42:32,920 --> 00:42:38,920
任何人都有一个超过50的名字 

1160
00:42:34,660 --> 00:42:40,450
人物有趣 而且不多 

1161
00:42:38,920 --> 00:42:43,390
名字，但你 知道我们有什么 

1162
00:42:40,450 --> 00:42:47,350
技术来回答这个最长的名字 

1163
00:42:43,390 --> 00:42:49,690
在世界上， 这是吉尼斯书 

1164
00:42:47,350 --> 00:42:53,410
世界纪录可能就是这样 

1165
00:42:49,690 --> 00:42:56,560
他的名字叫Barnaby Marmaduke alesis 

1166
00:42:53,410 --> 00:42:58,570
Benji cobweb d'Artagnan Egbert Felix 

1167
00:42:56,560 --> 00:43:01,910
Gasper Humbert Ignatius Jayden 

1168
00:42:58,570 --> 00:43:04,369
Casper Leroy Maximilian Neddy Petula 

1169
00:43:01,910 --> 00:43:07,789
一个 pepin quill um Rosencrantz Sexton 

1170
00:43:04,369 --> 00:43:10,819
Teddy up 将与 Atma Wayland Xylon合作 

1171
00:43:07,789 --> 00:43:15,230
Yardley Zachary ， 他也是 sanski 

1172
00:43:10,819 --> 00:43:17,450
显然是尼克， 但 好吧， 让我 

1173
00:43:15,230 --> 00:43:19,010
继续并强调 这一点，我只是 我 

1174
00:43:17,450 --> 00:43:20,599
可以手动计算，但我敢肯定 

1175
00:43:19,010 --> 00:43:22,700
有人制作了一个网站 

1176
00:43:20,599 --> 00:43:25,880
我们去的字符串中的字符

1177
00:43:22,700 --> 00:43:28,400
字母计数com 好吧让我们继续 吧 

1178
00:43:25,880 --> 00:43:30,500
粘贴，计算字符225 

1179
00:43:28,400 --> 00:43:32,450
所以尼克不会注册，除非 

1180
00:43:30,500 --> 00:43:35,240
我们不支持 十六或 五十 

1181
00:43:32,450 --> 00:43:36,470
看起来我们需要至少225所以 

1182
00:43:35,240 --> 00:43:38,000
某些时候你 必须做出 

1183
00:43:36,470 --> 00:43:39,980
决定，说实话，并非总是如此 

1184
00:43:38,000 --> 00:43:42,530
显而易见， 你必须 指明这一点 

1185
00:43:39,980 --> 00:43:45,230
varchars 将是16可以 

1186
00:43:42,530 --> 00:43:47,329
50岁可能是 225但你知道 B 是什么 

1187
00:43:45,230 --> 00:43:50,510
有孩子， 所以让我们稍微整理一下 

1188
00:43:47,329 --> 00:43:52,430
并诚实地称它为varchar'255 

1189
00:43:50,510 --> 00:43:54,710
因为这是一个如此重要的惯例

1190
00:43:52,430 --> 00:43:56,630
255天往往是最大长度 

1191
00:43:54,710 --> 00:43:58,220
对于旧数据库中的此字段和 

1192
00:43:56,630 --> 00:44:00,260
至少感觉就像它可能 

1193
00:43:58,220 --> 00:44:01,579
除了你之外，还有 足够的空间来换取 名字 

1194
00:44:00,260 --> 00:44:02,930
不得不对某些人做出判断

1195
00:44:01,579 --> 00:44:05,720
点我们可以忽略的问题 和 

1196
00:44:02,930 --> 00:44:07,069
说一千个字符，但如果那样的话

1197
00:44:05,720 --> 00:44:08,869
永远不会 真的发生在你的身上 

1198
00:44:07,069 --> 00:44:10,190
可能会浪费你的空间 

1199
00:44:08,869 --> 00:44:12,109
不应该因为即使它是一个 

1200
00:44:10,190 --> 00:44:13,940
上限， 你牺牲了一些东西 

1201
00:44:12,109 --> 00:44:16,010
喜欢可能搜索的时间 

1202
00:44:13,940 --> 00:44:17,869
如果你 只是告诉那个领域 

1203
00:44:16,010 --> 00:44:20,270
数据库， 它会 比 它大 

1204
00:44:17,869 --> 00:44:23,420
它曾经 竟然会被它需要 

1205
00:44:20,270 --> 00:44:25,099
更精细的暗示所以宿舍 哦 

1206
00:44:23,420 --> 00:44:28,160
上帝现在我们要再做 一次怎么做 

1207
00:44:25,099 --> 00:44:32,319
我们用宿舍做的最长的是什么 

1208
00:44:28,160 --> 00:44:32,319
宿舍的长度或校园里的房子我 

1209
00:44:32,559 --> 00:44:39,260
也许就像她对 Siemer的房子一样

1210
00:44:37,069 --> 00:44:41,480
老实说，在某些方面它没有 

1211
00:44:39,260 --> 00:44:43,039
太重要了，但要保持一致 

1212
00:44:41,480 --> 00:44:45,049
重要的是它的风格问题 

1213
00:44:43,039 --> 00:44:46,279
在某些方面你的设计问题

1214
00:44:45,049 --> 00:44:47,270
知道你不必挑剔每一个

1215
00:44:46,279 --> 00:44:48,829
没什么价值，但你可能应该

1216
00:44:47,270 --> 00:44:50,510
选择一些合理的价值你 

1217
00:44:48,829 --> 00:44:52,069
可以为室友或者一个人辩护 

1218
00:44:50,510 --> 00:44:53,660
同事或教学研究员 和 

1219
00:44:52,069 --> 00:44:55,640
然后说这没有足够的感觉 

1220
00:44:53,660 --> 00:44:58,099
它实际上是过度 而且有 

1221
00:44:55,640 --> 00:45:00,049
我要做的最后一件事就是 

1222
00:44:58,099 --> 00:45:02,150
用 分号 结束 我的思想 

1223
00:45:00,049 --> 00:45:03,710
我道歉他们回来了，但最后 

1224
00:45:02,150 --> 00:45:05,539
如果我没有 做的 话 ， 我的开始就在这里 

1225
00:45:03,710 --> 00:45:06,410
类型的图形错误，我会 

1226
00:45:05,539 --> 00:45:08,900
继续 进入 并 进入 

1227
00:45:06,410 --> 00:45:11,089
似乎没有任何事情发生和讽刺 

1228
00:45:08,900 --> 00:45:12,619
在cs50 并且没有编程 

1229
00:45:11,089 --> 00:45:14,329
发生通常是 一件好事 

1230
00:45:12,619 --> 00:45:16,880
因为这 意味着没有发生任何错误 

1231
00:45:14,329 --> 00:45:19,489
如果在续集光我输入模式我可以 

1232
00:45:16,880 --> 00:45:21,289
实际上只是 看到了反流 

1233
00:45:19,489 --> 00:45:23,269
我刚刚创建的表格更多 

1234
00:45:21,289 --> 00:45:24,949
重要的是我可以开始插入数据 

1235
00:45:23,269 --> 00:45:27,979
现在 不幸的是， 现在 还没有 

1236
00:45:24,949 --> 00:45:30,429
图形，但如果我想插入数据 

1237
00:45:27,979 --> 00:45:32,359
进入这个我可以做到插入 

1238
00:45:30,429 --> 00:45:34,489
注册人你想要什么 

1239
00:45:32,359 --> 00:45:36,769
插入我想继续 插入一个 

1240
00:45:34,489 --> 00:45:39,229
用什么来标识一个名字和一个宿舍 

1241
00:45:36,769 --> 00:45:40,849
用这些值很好地衡量ID 

1242
00:45:39,229 --> 00:45:42,739
将是第一个将成为注册人的人 

1243
00:45:40,849 --> 00:45:46,329
第一个注册的将是Brian 

1244
00:45:42,739 --> 00:45:49,309
和他的宿舍布莱恩你住在哪里

1245
00:45:46,329 --> 00:45:51,079
Pennypacker 所以 可能是 好的 

1246
00:45:49,309 --> 00:45:53,479
接近 时间或两个 纵向所以 

1247
00:45:51,079 --> 00:45:56,029
我要继续这样做 

1248
00:45:53,479 --> 00:45:58,099
创建续集语句的示例

1249
00:45:56,029 --> 00:46:00,380
table是一个动词或表达式

1250
00:45:58,099 --> 00:46:02,209
使用insert into是你指定的另一个 

1251
00:46:00,380 --> 00:46:04,249
表名的 领域 

1252
00:46:02,209 --> 00:46:06,469
表，然后价值，现在我

1253
00:46:04,249 --> 00:46:08,539
资本化只是为了弄清楚我们的是什么 

1254
00:46:06,469 --> 00:46:10,969
续集命令和实际内容 

1255
00:46:08,539 --> 00:46:12,439
只是人类开发人员选择的词语 

1256
00:46:10,969 --> 00:46:13,819
但它只是一个惯例 ，这些 

1257
00:46:12,439 --> 00:46:15,709
大写字可能是 

1258
00:46:13,819 --> 00:46:17,119
在大多数情况下也是小写， 但它 

1259
00:46:15,709 --> 00:46:18,739
帮助的事情，我觉得在视觉 上 

1260
00:46:17,119 --> 00:46:20,689
区分现在我继续前进 并 进入 

1261
00:46:18,739 --> 00:46:22,009
似乎没有什么事情 可能会 发生 

1262
00:46:20,689 --> 00:46:23,689
一件好事让我们继续并注册 

1263
00:46:22,009 --> 00:46:26,569
另一个人我将是第二个

1264
00:46:23,689 --> 00:46:30,499
注册人 也许马修斯的大卫 

1265
00:46:26,569 --> 00:46:32,299
马修斯在这里进入，现在如果我

1266
00:46:30,499 --> 00:46:33,709
想要选择所有 的学生 

1267
00:46:32,299 --> 00:46:36,559
数据库中我可以继续 说 

1268
00:46:33,709 --> 00:46:38,479
选择或你知道什么让我们 

1269
00:46:36,559 --> 00:46:40,749
选择所有内容，如许多所示 

1270
00:46:38,479 --> 00:46:43,579
来自注册人的明星语言

1271
00:46:40,749 --> 00:46:45,709
分号进入，我们有它

1272
00:46:43,579 --> 00:46:47,329
这是一个非常简单的小事 

1273
00:46:45,709 --> 00:46:49,459
轻量级数据库，但有我的 

1274
00:46:47,329 --> 00:46:50,839
行和列很像Excel时 

1275
00:46:49,459 --> 00:46:52,699
Google Spreadsheets会将它们 排除在外 

1276
00:46:50,839 --> 00:46:55,099
对我而言，它比这更好 

1277
00:46:52,699 --> 00:46:57,859
假设我想搜索这个数据库 

1278
00:46:55,099 --> 00:46:59,630
对于所有注册的学生 

1279
00:46:57,859 --> 00:47:01,009
因为马修斯并假设那个时间 

1280
00:46:59,630 --> 00:47:02,779
传球和 更多的学生 

1281
00:47:01,009 --> 00:47:04,519
注册frosh IMS 我实际上可以 

1282
00:47:02,779 --> 00:47:09,949
过滤这些 数据我可以 做 类似的事情 

1283
00:47:04,519 --> 00:47:13,099
从宿舍的注册人中选择明星

1284
00:47:09,949 --> 00:47:14,900
等于引用不引用马修斯等我 

1285
00:47:13,099 --> 00:47:17,299
可以过滤它击中输入， 现在我得到 

1286
00:47:14,900 --> 00:47:18,979
回来只有一排，如果你 应该介意的话 

1287
00:47:17,299 --> 00:47:21,049
如果可以的话，我开始哇哇哇哇 

1288
00:47:18,979 --> 00:47:22,369
在此介绍Python或JavaScript 

1289
00:47:21,049 --> 00:47:23,869
你知道我能做什么 

1290
00:47:22,369 --> 00:47:24,769
可能会回来不是这个 和这个 

1291
00:47:23,869 --> 00:47:26,749
基于ASCII 

1292
00:47:24,769 --> 00:47:27,950
表这个文本表也许我可以得到 

1293
00:47:26,749 --> 00:47:30,140
回到一个实际的清单 

1294
00:47:27,950 --> 00:47:31,130
行，这样我才能真正做到 

1295
00:47:30,140 --> 00:47:32,810
一些与这些数据， 这就是 

1296
00:47:31,130 --> 00:47:34,400
事实上，如果我们这样做的话

1297
00:47:32,810 --> 00:47:38,110
我想选择我能做的其他人 

1298
00:47:34,400 --> 00:47:41,720
嗯，也许只选择名字

1299
00:47:38,110 --> 00:47:43,130
宿舍 等于马修斯的注册人

1300
00:47:41,720 --> 00:47:45,140
如果我只关心知道谁 

1301
00:47:43,130 --> 00:47:47,030
注册我可以做到这一点和Whittle 

1302
00:47:45,140 --> 00:47:49,670
它已经减少到更少的数据 了 

1303
00:47:47,030 --> 00:47:51,230
在这几个命令 我可以表达 

1304
00:47:49,670 --> 00:47:53,480
比你更多的功能 

1305
00:47:51,230 --> 00:47:54,680
可以使用CSV以CSV格式执行此操作 

1306
00:47:53,480 --> 00:47:56,960
将不得不 写 所有这些 

1307
00:47:54,680 --> 00:47:58,820
Python行代码自己 如果 

1308
00:47:56,960 --> 00:48:00,410
Brian 感动，所以Brian真的不喜欢 

1309
00:47:58,820 --> 00:48:03,200
联盟宿舍所以我们要继续前进 

1310
00:48:00,410 --> 00:48:05,290
并更新注册人并设置宿舍 

1311
00:48:03,200 --> 00:48:10,220
等于你想去哪里 

1312
00:48:05,290 --> 00:48:12,170
加拿大，我可以通过几种方式做到这一点 

1313
00:48:10,220 --> 00:48:14,600
你的直觉是什么能够辨认出来的 

1314
00:48:12,170 --> 00:48:19,090
布莱恩只有布莱恩，所以我不希望 

1315
00:48:14,600 --> 00:48:22,220
搬到加拿大 我们如何移动布莱恩 

1316
00:48:19,090 --> 00:48:24,950
是的，也许我们可以做骂名字 

1317
00:48:22,220 --> 00:48:26,840
等于引用不引用布莱恩 并输入我 

1318
00:48:24,950 --> 00:48:30,470
像这样，但有人发现了错 

1319
00:48:26,840 --> 00:48:31,880
这个，如果你可以，如果有 两个 布莱恩的 

1320
00:48:30,470 --> 00:48:34,310
我们正在移动它们都是三个

1321
00:48:31,880 --> 00:48:36,260
他们这样的 宝贝 真的会 更 诚实 

1322
00:48:34,310 --> 00:48:38,630
说让我们只说 其中 ID 

1323
00:48:36,260 --> 00:48:40,400
现在等于一个我当然知道你们 两个 

1324
00:48:38,630 --> 00:48:41,840
知道布莱恩的哈佛身份证号码

1325
00:48:40,400 --> 00:48:43,550
什么， 但这会更多 

1326
00:48:41,840 --> 00:48:46,310
准确， 因为 这里 的 假设是 

1327
00:48:43,550 --> 00:48:49,250
最左边的列是 我们的ID字段 

1328
00:48:46,310 --> 00:48:50,960
人的约定应该是唯一的，这样 

1329
00:48:49,250 --> 00:48:52,610
它唯一地标识了房间 

1330
00:48:50,960 --> 00:48:54,380
我们可以 拥有尽可能多的Brian's 

1331
00:48:52,610 --> 00:48:56,270
但如果我，我们不会混淆他们 

1332
00:48:54,380 --> 00:48:58,150
继续前进， 按下回车键 ，现在似乎没有任何 

1333
00:48:56,270 --> 00:49:01,580
要发生， 但如果我从中选择明星 

1334
00:48:58,150 --> 00:49:04,100
再次注册并打入通知

1335
00:49:01,580 --> 00:49:05,750
现在布莱恩确实感动了 

1336
00:49:04,100 --> 00:49:07,670
加拿大所以有很多其他的 东西 

1337
00:49:05,750 --> 00:49:09,620
布莱恩，你知道你不是很好 

1338
00:49:07,670 --> 00:49:14,030
在 体育运动中，团队 总结如此删除 

1339
00:49:09,620 --> 00:49:16,370
从注册人我们身份证等于一个和 

1340
00:49:14,030 --> 00:49:19,370
现在，如果我们从注册人中选择明星 

1341
00:49:16,370 --> 00:49:20,900
我们是 只有我离开，但布莱恩 

1342
00:49:19,370 --> 00:49:23,600
也好了， 所以我们有能力 

1343
00:49:20,900 --> 00:49:25,880
插入以选择更新和删除 

1344
00:49:23,600 --> 00:49:27,080
并在过滤时一直创建

1345
00:49:25,880 --> 00:49:28,910
而我们只是抓住了 

1346
00:49:27,080 --> 00:49:30,740
在这里 表明可能的原因是什么 

1347
00:49:28,910 --> 00:49:32,420
事实证明， 我们 可以存储如此多的 数据 

1348
00:49:30,740 --> 00:49:34,220
在这些数据库中我们所有的学生 

1349
00:49:32,420 --> 00:49:35,690
如果你是一家公司，我们所有的教员 

1350
00:49:34,220 --> 00:49:37,400
你可以开始存储所有的 

1351
00:49:35,690 --> 00:49:39,380
数据库中的 所有产品

1352
00:49:37,400 --> 00:49:41,000
尽快订购所有客户 

1353
00:49:39,380 --> 00:49:41,790
当你开始沿着 那条路走下去的时候我们会 

1354
00:49:41,000 --> 00:49:44,460
看看有什么不妥

1355
00:49:41,790 --> 00:49:46,950
我们的客户有姓名和身份证号码 

1356
00:49:44,460 --> 00:49:48,180
也许 电子邮件地址和邮政 

1357
00:49:46,950 --> 00:49:49,470
解决那些会变得 混乱的问题 

1358
00:49:48,180 --> 00:49:50,940
电话号码有点像 

1359
00:49:49,470 --> 00:49:52,500
整数但不完全如此 

1360
00:49:50,940 --> 00:49:55,140
我们 仍然需要回答很多问题 

1361
00:49:52,500 --> 00:49:56,490
但感觉就像 吃水果 的时候 了 

1362
00:49:55,140 --> 00:49:57,780
和一些松饼所以我们为什么 不去 

1363
00:49:56,490 --> 00:49:59,430
前进并 休息 五分钟 

1364
00:49:57,780 --> 00:50:00,480
在某些 音乐上，父母需要 离开 

1365
00:49:59,430 --> 00:50:03,600
那很好，我们会在这里见到你

1366
00:50:00,480 --> 00:50:05,880
在 五分钟左右 没事所以我们 

1367
00:50:03,600 --> 00:50:08,100
回来和我们离开的地方 完全一样 

1368
00:50:05,880 --> 00:50:10,410
这里使用续集精简版3 

1369
00:50:08,100 --> 00:50:13,440
续集的 第3版 就像 命令 一样 

1370
00:50:10,410 --> 00:50:15,030
这仅仅是 基于文本的 界面 

1371
00:50:13,440 --> 00:50:17,010
我们应该想到的技术 

1372
00:50:15,030 --> 00:50:18,480
作为续集 Lite续集精简版 

1373
00:50:17,010 --> 00:50:20,250
有趣的是它的重量轻 

1374
00:50:18,480 --> 00:50:22,050
感觉它不是服务器它不是 

1375
00:50:20,250 --> 00:50:24,210
你必须运行它的花哨的软件 

1376
00:50:22,050 --> 00:50:26,460
从字面上将所有数据存储在一个 

1377
00:50:24,210 --> 00:50:29,100
文件但按惯例 以 dot 结尾 

1378
00:50:26,460 --> 00:50:31,440
DB 或者甚至是点续集Lite但是 

1379
00:50:29,100 --> 00:50:33,090
它只是一个二进制文件零和一个 

1380
00:50:31,440 --> 00:50:34,560
这不是你可以打开的文字

1381
00:50:33,090 --> 00:50:37,470
Excel或 类似 的 东西 ，所以它不是 

1382
00:50:34,560 --> 00:50:39,470
一个CSV，所以它存储在文件中这意味着 

1383
00:50:37,470 --> 00:50:41,520
你不需要这个特别的 

1384
00:50:39,470 --> 00:50:43,350
设置数据库的经验 

1385
00:50:41,520 --> 00:50:45,360
服务器你不需要内存 和 

1386
00:50:43,350 --> 00:50:47,190
实际在计算机上运行的软件 

1387
00:50:45,360 --> 00:50:48,810
除了你，你可以在当地存放一切 

1388
00:50:47,190 --> 00:50:51,630
确实要付出代价， 因为从我们的召回 

1389
00:50:48,810 --> 00:50:53,250
过去的讨论磁盘很慢，如果 

1390
00:50:51,630 --> 00:50:54,810
您将数据存储在 磁盘上 

1391
00:50:53,250 --> 00:50:56,670
它不会那么快 

1392
00:50:54,810 --> 00:50:58,380
仅将其存储在RAM中，这就是原因 

1393
00:50:56,670 --> 00:51:00,450
这些其他技术 如 Postgres 

1394
00:50:58,380 --> 00:51:03,570
在我的续集和Microsoft Access 和 

1395
00:51:00,450 --> 00:51:05,430
续集服务器和oracle 存在的那些 

1396
00:51:03,570 --> 00:51:07,350
在某些人的字面意义上的发烧友产品

1397
00:51:05,430 --> 00:51:09,600
并 双击图标 或运行 

1398
00:51:07,350 --> 00:51:11,400
运行 的是保持 一个 程序 命令 

1399
00:51:09,600 --> 00:51:13,500
在计算机的内存中运行， 

1400
00:51:11,400 --> 00:51:15,060
给你更好的表现 但是 

1401
00:51:13,500 --> 00:51:16,770
为了我们的目的教学续集 

1402
00:51:15,060 --> 00:51:18,210
精简版是方便，但我们仍然要 

1403
00:51:16,770 --> 00:51:20,640
询问有关数据 类型 的问题 

1404
00:51:18,210 --> 00:51:22,740
因为续集精简版确实支持发烧友 

1405
00:51:20,640 --> 00:51:25,470
数据类型，如Postgres和 

1406
00:51:22,740 --> 00:51:27,030
续集服务器和MySQL以及Oracle和 

1407
00:51:25,470 --> 00:51:28,800
那些是小写的我们 

1408
00:51:27,030 --> 00:51:30,210
介绍了一下， 但老实说 这个 

1409
00:51:28,800 --> 00:51:32,640
很快就会变得乏味 

1410
00:51:30,210 --> 00:51:34,950
即使我很少记得 恰到好处 

1411
00:51:32,640 --> 00:51:36,690
在创建表时 的语法

1412
00:51:34,950 --> 00:51:38,370
一切都必须去，所以我倾向于

1413
00:51:36,690 --> 00:51:40,410
使用图形用户界面或 GUI 

1414
00:51:38,370 --> 00:51:41,970
我自己也有很多工具 

1415
00:51:40,410 --> 00:51:44,460
在那里， 但 我们已经建立了一个免费的 

1416
00:51:41,970 --> 00:51:46,500
和开源 到 cs50 IDE那就好了 

1417
00:51:44,460 --> 00:51:48,150
让你更容易编辑你的 

1418
00:51:46,500 --> 00:51:51,120
续集表所以我要 继续前进 

1419
00:51:48,150 --> 00:51:52,920
并退出续集Lite呐喊 退出 

1420
00:51:51,120 --> 00:51:54,309
续集精简版，我要走了 

1421
00:51:52,920 --> 00:51:55,749
在这里前进 

1422
00:51:54,309 --> 00:51:57,459
你会注意到我们拥有 全部 

1423
00:51:55,749 --> 00:52:00,640
今天的文件包括大多数 

1424
00:51:57,459 --> 00:52:03,099
最近frosh IMS DB就是我的文件 

1425
00:52:00,640 --> 00:52:05,859
用续集 Lite 3 创建， 但如果你 

1426
00:52:03,099 --> 00:52:07,509
使用cs50 IDE时双击它 

1427
00:52:05,859 --> 00:52:09,430
究竟要 打开一个程序，是 

1428
00:52:07,509 --> 00:52:10,749
它叫做PHP点亮了 它恰好是 

1429
00:52:09,430 --> 00:52:13,089
写在 另一种语言 叫PHP 

1430
00:52:10,749 --> 00:52:15,249
与数据库无关 

1431
00:52:13,089 --> 00:52:17,529
这里的产品名称， 但它是一个 

1432
00:52:15,249 --> 00:52:19,869
使用非常简单的HTML的工具

1433
00:52:17,529 --> 00:52:21,789
表只是给我们一个图形用户 

1434
00:52:19,869 --> 00:52:23,890
界面完全相同 

1435
00:52:21,789 --> 00:52:25,539
功能和个人我发现 

1436
00:52:23,890 --> 00:52:26,920
这更容易使用和教学

1437
00:52:25,539 --> 00:52:28,749
它会更好， 因为它是 

1438
00:52:26,920 --> 00:52:31,209
将向我们展示可用的数据 

1439
00:52:28,749 --> 00:52:33,039
例如 ，我们的 表的类型

1440
00:52:31,209 --> 00:52:34,329
注意这里有很多事情要发生 

1441
00:52:33,039 --> 00:52:37,539
屏幕， 但很多 这只是 

1442
00:52:34,329 --> 00:52:40,029
无趣的细节， 但请注意我 

1443
00:52:37,539 --> 00:52:42,009
然后看一张名为注册人的表 

1444
00:52:40,029 --> 00:52:44,890
我可以浏览它我可以看到它的结构 

1445
00:52:42,009 --> 00:52:46,299
我可以 通过输入 来执行 手动续集 

1446
00:52:44,890 --> 00:52:47,890
在我可以搜索它插入我可以做 

1447
00:52:46,299 --> 00:52:49,420
一堆东​​西，这就是原因 

1448
00:52:47,890 --> 00:52:50,979
这个图形用户界面就是这样 

1449
00:52:49,420 --> 00:52:53,229
方便的让我继续前进， 点击 

1450
00:52:50,979 --> 00:52:56,589
注册人，默认情况下你会看到 

1451
00:52:53,229 --> 00:52:58,449
这些标签现在浏览结构续集

1452
00:52:56,589 --> 00:53:00,880
然后是一堆别人并注意到 

1453
00:52:58,449 --> 00:53:02,469
在这里， 你会 看到一行和 

1454
00:53:00,880 --> 00:53:05,349
一个注册谁 真正留下 

1455
00:53:02,469 --> 00:53:08,529
因为当我们上次离开时​​， 我们删除了 

1456
00:53:05,349 --> 00:53:09,819
布莱恩强行从团队那里假设 

1457
00:53:08,529 --> 00:53:11,529
我想继续添加更多行 

1458
00:53:09,819 --> 00:53:13,179
只是为了讨论 我可以 

1459
00:53:11,529 --> 00:53:15,759
只需在这里手动完成我就可以进去了 

1460
00:53:13,179 --> 00:53:20,019
在这里，我可以说让我们说第三个 

1461
00:53:15,759 --> 00:53:21,579
我认为球员将是维罗尼卡 

1462
00:53:20,019 --> 00:53:23,349
她也在马修斯，所以我可以 

1463
00:53:21,579 --> 00:53:25,119
在 这里键入， 我可以 去 

1464
00:53:23,349 --> 00:53:27,849
提前 点击插入，但有什么好处 

1465
00:53:25,119 --> 00:53:30,249
关于PHP lited man是不会的 

1466
00:53:27,849 --> 00:53:32,349
只为你插入行 

1467
00:53:30,249 --> 00:53:34,779
向您展示续集Lite代码 

1468
00:53:32,349 --> 00:53:36,489
你可以自己这样做 所以它的 

1469
00:53:34,779 --> 00:53:37,959
在一个很好的视觉增强

1470
00:53:36,489 --> 00:53:39,279
完全相同的命令，你会注意到 

1471
00:53:37,959 --> 00:53:40,509
他们使用双引号而不是 我的 

1472
00:53:39,279 --> 00:53:42,339
有时单引号

1473
00:53:40,509 --> 00:53:43,989
可互换，但并非总是如此，这是一个 

1474
00:53:42,339 --> 00:53:45,640
只是学习你的 好方法 

1475
00:53:43,989 --> 00:53:46,949
实际上可以用 右边 做 

1476
00:53:45,640 --> 00:53:49,029
续集代码所以你不是

1477
00:53:46,949 --> 00:53:50,289
使用GUI过度简化它但你 

1478
00:53:49,029 --> 00:53:53,170
知道我们要做什么我会 去 

1479
00:53:50,289 --> 00:53:54,939
提前，重新开始， 因为我想 

1480
00:53:53,170 --> 00:53:56,529
我会做出更好的决定 

1481
00:53:54,939 --> 00:53:59,259
提前和字面上右键单击或按Ctrl键 

1482
00:53:56,529 --> 00:54:01,239
点击此删除frosh IMS DB并让我们

1483
00:53:59,259 --> 00:54:03,549
实际上现在从头开始 

1484
00:54:01,239 --> 00:54:05,890
以前， 当我这样做时，我可以 

1485
00:54:03,549 --> 00:54:08,079
在我的终端 窗口中继续前行 

1486
00:54:05,890 --> 00:54:11,109
完成续集Lite 3然后 

1487
00:54:08,079 --> 00:54:12,849
什么是IMS DB和创建的 

1488
00:54:11,109 --> 00:54:14,559
文件现在我实际上只是 

1489
00:54:12,849 --> 00:54:16,420
继续并触摸一个名为that的文件 

1490
00:54:14,559 --> 00:54:18,219
name这是一个简单的命令 

1491
00:54:16,420 --> 00:54:20,170
从字面上创造它但却什么都没有 

1492
00:54:18,219 --> 00:54:21,640
它只是所以我有一个空文件和 

1493
00:54:20,170 --> 00:54:23,349
你会看到它刚刚再次弹出 

1494
00:54:21,640 --> 00:54:25,450
在左侧，这是方便和 

1495
00:54:23,349 --> 00:54:27,279
现在我可以双击 这个版本的 

1496
00:54:25,450 --> 00:54:29,589
这其中有没有 在 这些事和我 

1497
00:54:27,279 --> 00:54:31,719
回到PHP lited min但是注意 没有 

1498
00:54:29,589 --> 00:54:33,549
数据库中的表，让我们开始问 

1499
00:54:31,719 --> 00:54:36,039
一些困难的问题，即 

1500
00:54:33,549 --> 00:54:38,410
实际上如何在a中创建数据

1501
00:54:36,039 --> 00:54:41,229
数据库，以便让 我继续前进 ，去 

1502
00:54:38,410 --> 00:54:43,089
这里的这个字段创建了新表 

1503
00:54:41,229 --> 00:54:44,979
数据库frosh IMS，我会继续前进 ， 

1504
00:54:43,089 --> 00:54:49,269
再次称它为注册人， 但有多少 

1505
00:54:44,979 --> 00:54:53,859
字段让我们去 ID名称和宿舍 

1506
00:54:49,269 --> 00:54:57,160
还有什么电子邮件听说 年龄 较早 我 

1507
00:54:53,859 --> 00:54:58,869
有时 你早就听说过

1508
00:54:57,160 --> 00:55:00,579
想请原谅我想要参加的体育运动 

1509
00:54:58,869 --> 00:55:02,200
确定六个字段六个字段让我们一起去 

1510
00:55:00,579 --> 00:55:03,489
所以实际上你知道七个 

1511
00:55:02,200 --> 00:55:05,650
字段我想要电话号码到这个时候 

1512
00:55:03,489 --> 00:55:07,809
所以让我直接点击进入，现在 

1513
00:55:05,650 --> 00:55:08,979
你会看到 一种 粘糊糊 的提示方式 

1514
00:55:07,809 --> 00:55:10,630
你对所有的 答案都是一样的 

1515
00:55:08,979 --> 00:55:12,069
问题和以前一样， 也许这就是问题 

1516
00:55:10,630 --> 00:55:14,680
更清楚 也许它 不是，但它只是一个 

1517
00:55:12,069 --> 00:55:16,509
完全记忆的替代方案

1518
00:55:14,680 --> 00:55:18,609
什么命令需要如此顶级

1519
00:55:16,509 --> 00:55:21,130
这里是 我需要 的所有领域 

1520
00:55:18,609 --> 00:55:22,930
讽刺的是，这些领域是 

1521
00:55:21,130 --> 00:55:24,219
只是列的同义词，但我的 

1522
00:55:22,930 --> 00:55:27,190
列目前按行排列

1523
00:55:24,219 --> 00:55:29,349
但这只是一个UI 问题所以让 我走吧 

1524
00:55:27,190 --> 00:55:31,779
提前并按惯例决定我的第一个 

1525
00:55:29,349 --> 00:55:33,279
字段几乎总是ID或可能

1526
00:55:31,779 --> 00:55:35,559
应该是，我们会明白这是为什么

1527
00:55:33,279 --> 00:55:37,479
强大的只是一点点的 

1528
00:55:35,559 --> 00:55:39,430
按惯例的数据类型 应该是 

1529
00:55:37,479 --> 00:55:40,799
除非你有很多 ， 否则是整数

1530
00:55:39,430 --> 00:55:43,180
像脸书一样的数据然后大 

1531
00:55:40,799 --> 00:55:45,369
激烈但请注意这个下拉菜单 

1532
00:55:43,180 --> 00:55:48,039
实际上给了我们一个很好的选项菜单 

1533
00:55:45,369 --> 00:55:50,979
就像以前一样，你会看到 灰色 

1534
00:55:48,039 --> 00:55:52,749
发表文章的类别或花哨的术语 

1535
00:55:50,979 --> 00:55:54,729
这些不同类型的亲和力

1536
00:55:52,749 --> 00:55:56,440
续集Lite和小写黑色 

1537
00:55:54,729 --> 00:55:59,259
这里的话你会看到实际的 

1538
00:55:56,440 --> 00:56:00,880
大流行支持的数据类型 

1539
00:55:59,259 --> 00:56:02,349
你可能会像Postgres这样的数据库

1540
00:56:00,880 --> 00:56:03,459
想要用于你的最终项目 

1541
00:56:02,349 --> 00:56:05,170
事实上我们正在介绍这些 

1542
00:56:03,459 --> 00:56:07,539
晚上或者你正在使用这些进行最后的决定

1543
00:56:05,170 --> 00:56:08,920
云中的项目不在cs50 ide中 

1544
00:56:07,539 --> 00:56:10,359
但实际上是获得自己的 域名 

1545
00:56:08,920 --> 00:56:12,819
如果你这样做，请说出并放置你的网站 

1546
00:56:10,359 --> 00:56:14,410
一个网络应用程序， 所以在这里我们拥有所有 

1547
00:56:12,819 --> 00:56:15,849
我可用的类型和整数 

1548
00:56:14,410 --> 00:56:18,789
我要继续并按字面意思选择 

1549
00:56:15,849 --> 00:56:20,440
我的ID的整数好吧接下来就行 了 

1550
00:56:18,789 --> 00:56:21,460
并缩小让 我继续选择 

1551
00:56:20,440 --> 00:56:23,650
学生的名字 

1552
00:56:21,460 --> 00:56:28,599
在我们做 之前，我们决定使用 char 

1553
00:56:23,650 --> 00:56:30,160
varchar okay bar char的大小是 255 

1554
00:56:28,599 --> 00:56:31,960
所以这里的用户界面只允许 

1555
00:56:30,160 --> 00:56:33,220
我输入它所以 语法是一个 

1556
00:56:31,960 --> 00:56:36,040
有点不同，因为它是一个GUI但是 

1557
00:56:33,220 --> 00:56:39,160
255， 但你知道 最后一个 字段是 什么 

1558
00:56:36,040 --> 00:56:41,470
宿舍-我觉得我们说VARCHAR处理等等 

1559
00:56:39,160 --> 00:56:42,700
让我选择那个和255虽然这个

1560
00:56:41,470 --> 00:56:44,140
一个人有点争议，我不是 

1561
00:56:42,700 --> 00:56:45,760
确定正确的数字是 如此 

1562
00:56:44,140 --> 00:56:47,710
我不太 清楚 

1563
00:56:45,760 --> 00:56:49,660
规范上的一些相同的值，而不 

1564
00:56:47,710 --> 00:56:51,190
太浪费但注意到有一个 

1565
00:56:49,660 --> 00:56:53,500
这里几个问题我们 还没来 

1566
00:56:51,190 --> 00:56:55,300
但 我们 早先暗示 我们完美的 segue 

1567
00:56:53,500 --> 00:56:56,829
事实证明你需要做一个 

1568
00:56:55,300 --> 00:57:00,099
在设计时没有其他决定 

1569
00:56:56,829 --> 00:57:02,319
数据库， 如果你 事先 知道 那个 

1570
00:57:00,099 --> 00:57:04,180
你的领域就像是主要的一块 

1571
00:57:02,319 --> 00:57:05,770
用于唯一标识用户的数据

1572
00:57:04,180 --> 00:57:08,770
这就是 所谓的 初级 

1573
00:57:05,770 --> 00:57:11,380
键入保证的列或字段 

1574
00:57:08,770 --> 00:57:13,180
将如此唯一地识别用户 

1575
00:57:11,380 --> 00:57:15,490
如果你有两个Brians ，他们每个人都是 

1576
00:57:13,180 --> 00:57:18,280
要拥有自己的编号 因此 

1577
00:57:15,490 --> 00:57:20,230
您的主键而不是 名称字段 

1578
00:57:18,280 --> 00:57:22,480
Brian 所以我要告诉数据库 

1579
00:57:20,230 --> 00:57:24,150
这 是 主键， 它会 

1580
00:57:22,480 --> 00:57:27,190
帮助我跟踪这种独特性 

1581
00:57:24,150 --> 00:57:28,990
此外，这是 一个奇特的功能 

1582
00:57:27,190 --> 00:57:30,700
我手动而且非常随意

1583
00:57:28,990 --> 00:57:32,589
说布莱恩将成为我的第一名 

1584
00:57:30,700 --> 00:57:34,359
第二名维罗尼卡将排名第三 

1585
00:57:32,589 --> 00:57:35,829
这就像电脑一样乏味

1586
00:57:34,359 --> 00:57:37,150
能为 我 解决这个问题 我 

1587
00:57:35,829 --> 00:57:39,250
不想想谁是 ID 

1588
00:57:37,150 --> 00:57:41,140
编号你可以 自动增加 

1589
00:57:39,250 --> 00:57:44,710
字段， 所以如果我实际上检查此框 

1590
00:57:41,140 --> 00:57:46,960
我的续集只会加上加号 

1591
00:57:44,710 --> 00:57:48,609
每次回答a时加上ID字段

1592
00:57:46,960 --> 00:57:50,500
新名称和我不需要的新宿舍 

1593
00:57:48,609 --> 00:57:52,720
甚至打扰再指定一个ID 

1594
00:57:50,500 --> 00:57:54,970
现在这里有另一列不为空

1595
00:57:52,720 --> 00:57:56,530
您可以在哪里指定此列 

1596
00:57:54,970 --> 00:57:57,369
永远不会为空，这很重要 

1597
00:57:56,530 --> 00:57:59,859
因为如果你正在建立一个网站

1598
00:57:57,369 --> 00:58:01,630
您必须 拥有重要数据 

1599
00:57:59,859 --> 00:58:04,150
来自像您的应用程序的用户不会 

1600
00:58:01,630 --> 00:58:05,740
没有用户使用 用户名或工作 

1601
00:58:04,150 --> 00:58:08,319
他们的密码或 电子邮件 地址 

1602
00:58:05,740 --> 00:58:10,990
你可以说不是null和你的数据库 

1603
00:58:08,319 --> 00:58:13,059
将确保你甚至不能插入一个 

1604
00:58:10,990 --> 00:58:15,700
除非你给出，否则进入这个数据库 

1605
00:58:13,059 --> 00:58:17,589
它是 该字段 的值 ， 因此它有所帮助 

1606
00:58:15,700 --> 00:58:18,849
你保护你不受自己，因为 

1607
00:58:17,589 --> 00:58:21,069
你当然可以实现这一点 

1608
00:58:18,849 --> 00:58:24,490
逻辑上是Python或 任何 语言 但 

1609
00:58:21,069 --> 00:58:26,380
该数据库是一个最终的战书，以及 

1610
00:58:24,490 --> 00:58:28,359
默认值并不真正 

1611
00:58:26,380 --> 00:58:30,640
感觉在这里，但对于某些类型的 

1612
00:58:28,359 --> 00:58:33,430
您 可以说数据库 插入的字段

1613
00:58:30,640 --> 00:58:35,020
我当前的时间或当前日期 

1614
00:58:33,430 --> 00:58:39,490
现在为什么你 想要那个 

1615
00:58:35,020 --> 00:58:42,820
按日期 和 时间默认 为什么可能 

1616
00:58:39,490 --> 00:58:44,860
这个帐户是有用的 

1617
00:58:42,820 --> 00:58:46,390
当他们买了一个foo 时 创造了 

1618
00:58:44,860 --> 00:58:47,650
酒吧运送任何原因

1619
00:58:46,390 --> 00:58:49,210
你可能 只是想知道它是什么 

1620
00:58:47,650 --> 00:58:50,500
时间现在我们没有 必要写 

1621
00:58:49,210 --> 00:58:52,270
该数据库可以回答 码 

1622
00:58:50,500 --> 00:58:53,860
这些问题对你而言 如此之多 

1623
00:58:52,270 --> 00:58:56,440
比我们当然更多的功能

1624
00:58:53,860 --> 00:58:59,290
单独使用CSV， 因此名称应为a 

1625
00:58:56,440 --> 00:59:00,790
主键否则我们不能 

1626
00:58:59,290 --> 00:59:02,560
有两个Brians，一般是你的 

1627
00:59:00,790 --> 00:59:04,030
主键虽然是一个字段 

1628
00:59:02,560 --> 00:59:05,860
理论上你可以联合起来 

1629
00:59:04,030 --> 00:59:06,730
列，如果你想要但通常 

1630
00:59:05,860 --> 00:59:08,500
它将是一个单一的 

1631
00:59:06,730 --> 00:59:11,530
我们应该自动 增加Brian这样吗 

1632
00:59:08,500 --> 00:59:14,830
好吧，我们有Brian Brian 28或者 

1633
00:59:11,530 --> 00:59:17,290
Brian  -  Brian 3等等 没有 

1634
00:59:14,830 --> 00:59:19,570
我可能真的有意义而不是空 

1635
00:59:17,290 --> 00:59:21,430
想要所有 新人的名字 

1636
00:59:19,570 --> 00:59:23,980
我们知道谁 报名参加 体育比赛 

1637
00:59:21,430 --> 00:59:26,320
宿舍但不 知道，但整个角落的情况 

1638
00:59:23,980 --> 00:59:28,450
任何人都可以想到一个角落的情况 

1639
00:59:26,320 --> 00:59:31,210
宿舍也许应该是那样的 

1640
00:59:28,450 --> 00:59:32,680
他们 在校外 你 的通勤是空的 

1641
00:59:31,210 --> 00:59:34,060
知道这不是很多学生，但如果你 

1642
00:59:32,680 --> 00:59:35,800
百分之 五的百分之五 

1643
00:59:34,060 --> 00:59:38,110
住在校外的学生这是 一个 

1644
00:59:35,800 --> 00:59:39,970
设计问题现在和你们所有人 

1645
00:59:38,110 --> 00:59:41,590
可能已经访问了 一些网站 

1646
00:59:39,970 --> 00:59:43,000
你就不能填写的表格

1647
00:59:41,590 --> 00:59:44,980
正确的方式，因为你不适合他们的 

1648
00:59:43,000 --> 00:59:46,660
模具或他们的期望，那就是 

1649
00:59:44,980 --> 00:59:48,550
仅仅因为糟糕的设计决定 

1650
00:59:46,660 --> 00:59:48,970
所以让我们只允许它为空 

1651
00:59:48,550 --> 00:59:51,160
案件

1652
00:59:48,970 --> 00:59:54,130
现在我们还说了一个电话号码 

1653
00:59:51,160 --> 00:59:56,680
一个我提议天哪没有有趣的电话 

1654
00:59:54,130 --> 01:00:04,480
数字类型所以你想要去什么 

1655
00:59:56,680 --> 01:00:06,580
我很抱歉varchar'好的，所以我们可以 

1656
01:00:04,480 --> 01:00:08,470
选择varchar'并且可能使用10或者 

1657
01:00:06,580 --> 01:00:11,560
所以至少在美国10位数 

1658
01:00:08,470 --> 01:00:14,620
虽然可能像破了12或者破折号 

1659
01:00:11,560 --> 01:00:20,080
13 括号 或 那是什么 

1660
01:00:14,620 --> 01:00:21,910
哦，我听到抱怨抱怨一个小int 

1661
01:00:20,080 --> 01:00:23,310
并且可以将它视为一个 数字 

1662
01:00:21,910 --> 01:00:28,990
也可能是另一种选择 

1663
01:00:23,310 --> 01:00:31,710
别的 所以特定精度 

1664
01:00:28,990 --> 01:00:31,710
数 

1665
01:00:33,760 --> 01:00:38,599
好，所以不是一个坏的本能，但它转向 

1666
01:00:36,349 --> 01:00:40,250
输出您所在的数字数据类型

1667
01:00:38,599 --> 01:00:41,390
指定比例，因为它被称为 

1668
01:00:40,250 --> 01:00:43,430
总位数和精度 

1669
01:00:41,390 --> 01:00:45,349
这通常意味着 

1670
01:00:43,430 --> 01:00:47,329
浮点 值如此实数 

1671
01:00:45,349 --> 01:00:49,970
小数点，因为即使

1672
01:00:47,329 --> 01:00:52,130
你指定的最大限制是不是 

1673
01:00:49,970 --> 01:00:54,640
要求许多数字只是最大值 

1674
01:00:52,130 --> 01:00:54,640
是啊

1675
01:01:02,510 --> 01:01:07,230
是的，我认为我们可以找到错误 

1676
01:01:05,820 --> 01:01:08,640
在这两个 想法中， 但他们两个 

1677
01:01:07,230 --> 01:01:11,550
如果你允许 一个字符 是合理的 

1678
01:01:08,640 --> 01:01:14,310
或varchar 我可以输入像 foo或 

1679
01:01:11,550 --> 01:01:15,600
酒吧 或 低音，而不是 一个 号码，这样也许我们 

1680
01:01:14,310 --> 01:01:16,950
应该与int 一起 ，但有人可以想 

1681
01:01:15,600 --> 01:01:23,070
为什么你的一个反例 

1682
01:01:16,950 --> 01:01:25,950
不应该使用整数变量长度 

1683
01:01:23,070 --> 01:01:27,630
但如果我们实际上数学可能是 65 

1684
01:01:25,950 --> 01:01:28,950
也许那里有足够的字节或者我们 

1685
01:01:27,630 --> 01:01:30,510
可以使用一个大的int，这给了我们一个

1686
01:01:28,950 --> 01:01:38,000
真的很长的电话号码所以有 

1687
01:01:30,510 --> 01:01:39,990
可能是合理的最大是啊是的 

1688
01:01:38,000 --> 01:01:41,040
连字符和括号我们 必须 

1689
01:01:39,990 --> 01:01:42,510
决定我们继续支持那些 

1690
01:01:41,040 --> 01:01:45,420
老实说，我们所有人 也许都是 

1691
01:01:42,510 --> 01:01:46,710
现在很少以我们为中心，但大部分都是 

1692
01:01:45,420 --> 01:01:48,180
我们在这里， 但你知道什么时候你做 

1693
01:01:46,710 --> 01:01:50,130
您键入的某些区域中的本地呼叫 

1694
01:01:48,180 --> 01:01:51,420
首先是零，有些人可能会输入 

1695
01:01:50,130 --> 01:01:52,920
他们的数字为零，但会有什么 

1696
01:01:51,420 --> 01:01:56,250
如果您将0键入整数，则会发生

1697
01:01:52,920 --> 01:01:57,720
现在，你会忽略它 

1698
01:01:56,250 --> 01:01:59,130
我们就是那个角落的案子哦该死的 

1699
01:01:57,720 --> 01:02:01,740
它就像没有办法解决这个问题 

1700
01:01:59,130 --> 01:02:03,540
问题似乎 是最好的 我们 

1701
01:02:01,740 --> 01:02:05,670
我必须妥协妥当 

1702
01:02:03,540 --> 01:02:10,230
接受我们 必须解决这个问题 

1703
01:02:05,670 --> 01:02:12,180
代码varchar'好吧所以varchars或 

1704
01:02:10,230 --> 01:02:13,980
char很好， 所以让我们也许吧 

1705
01:02:12,180 --> 01:02:15,780
从外面 没有 人简化问题

1706
01:02:13,980 --> 01:02:17,520
美国 可以采取 新生内部 

1707
01:02:15,780 --> 01:02:19,560
简化世界的运动， 因为 

1708
01:02:17,520 --> 01:02:21,450
如果我们现在只支持 我们的电话号码 

1709
01:02:19,560 --> 01:02:23,220
如果我们说你，我们可以说十位数 

1710
01:02:21,450 --> 01:02:24,510
知道我不关心连字符 

1711
01:02:23,220 --> 01:02:27,120
或括号 我可以使用代码 

1712
01:02:24,510 --> 01:02:29,520
JavaScript 或Python 扔掉 了 

1713
01:02:27,120 --> 01:02:32,460
语法，我只能存储 十 位数 

1714
01:02:29,520 --> 01:02:34,320
也许char 十足够三 

1715
01:02:32,460 --> 01:02:36,150
区域代码，然后其余的 

1716
01:02:34,320 --> 01:02:37,440
所有 七位数的数字 都在上升 

1717
01:02:36,150 --> 01:02:39,120
但是你会发现 这个 错误 太 

1718
01:02:37,440 --> 01:02:41,100
我们真的疏远了 

1719
01:02:39,120 --> 01:02:42,840
校园内的国际人口 

1720
01:02:41,100 --> 01:02:44,700
所以但这些只是 不明显的 

1721
01:02:42,840 --> 01:02:46,200
设计决策 ，所以我们在这里 

1722
01:02:44,700 --> 01:02:47,670
我们并不总是 在 学期末 

1723
01:02:46,200 --> 01:02:49,590
有良好的答案 和合理的人 

1724
01:02:47,670 --> 01:02:52,050
会不同意， 但让我简化我们的 

1725
01:02:49,590 --> 01:02:54,510
假设， 我们只做十号 

1726
01:02:52,050 --> 01:02:56,730
数字和信任，我将 使用代码 

1727
01:02:54,510 --> 01:02:58,890
Python 或其他语言 扔 

1728
01:02:56,730 --> 01:03:00,990
远离标点符号 的语法 

1729
01:02:58,890 --> 01:03:02,820
什么是圆括号和连字符 

1730
01:03:00,990 --> 01:03:04,620
我会确保 人类没有输入 

1731
01:03:02,820 --> 01:03:05,970
我可以做的任何字母

1732
01:03:04,620 --> 01:03:07,650
在代码中，你知道我们可以做到 这一点 

1733
01:03:05,970 --> 01:03:11,010
甚至在人类的JavaScript中 

1734
01:03:07,650 --> 01:03:13,690
提交表格让我们呃 我们会离开 

1735
01:03:11,010 --> 01:03:17,530
最终体育运动

1736
01:03:13,690 --> 01:03:19,240
好的 运动他们可能想这样做 

1737
01:03:17,530 --> 01:03:21,069
这是一个很好的例子 ，你不应该 

1738
01:03:19,240 --> 01:03:23,109
真的有空格 的字段名 等等 

1739
01:03:21,069 --> 01:03:25,690
大会将是体育运动 

1740
01:03:23,109 --> 01:03:28,960
真的或可能或者让我们称之为 

1741
01:03:25,690 --> 01:03:30,339
在这种情况下我们会回来运动

1742
01:03:28,960 --> 01:03:34,690
我认为还有另外两个想法 

1743
01:03:30,339 --> 01:03:36,039
我们有电话号码邮箱好的电子邮件是 

1744
01:03:34,690 --> 01:03:38,289
好的，那个应该是什么

1745
01:03:36,039 --> 01:03:41,609
没有电子邮件类型不幸的是， 即使 

1746
01:03:38,289 --> 01:03:44,650
有一个HTML输入类型的电子邮件

1747
01:03:41,609 --> 01:03:46,299
什么是树皮， 是的 巴特我觉得 

1748
01:03:44,650 --> 01:03:47,770
我们可能 在这里 需要 头像但是 

1749
01:03:46,299 --> 01:03:49,619
这里有一点什么都不明显是什么 

1750
01:03:47,770 --> 01:03:53,079
世界上最长的电子邮件地址 

1751
01:03:49,619 --> 01:03:55,299
也许是尼克尼克尼，所以我没有 

1752
01:03:53,079 --> 01:03:56,770
知道，但让我们选择一个合理的上层 

1753
01:03:55,299 --> 01:03:59,170
我们 可能会感到很舒服 

1754
01:03:56,770 --> 01:04:01,869
作为一个团体，让我们看到任何东西 

1755
01:03:59,170 --> 01:04:04,329
否则这里没有 ，然后哪一个 

1756
01:04:01,869 --> 01:04:06,339
更多领域哦授予 哦一种年龄 

1757
01:04:04,329 --> 01:04:08,890
让我们终于适应年龄这么大的年龄 

1758
01:04:06,339 --> 01:04:12,280
简单的事你想要什么？ 

1759
01:04:08,890 --> 01:04:14,260
要小的 价格你不会 

1760
01:04:12,280 --> 01:04:15,640
你可以做到 我们不会支持别人 

1761
01:04:14,260 --> 01:04:19,210
超过65 万五百 

1762
01:04:15,640 --> 01:04:22,319
三十五岁有人 想要 

1763
01:04:19,210 --> 01:04:22,319
但是，这个想法有问题

1764
01:04:25,050 --> 01:04:32,040
我认为没有人是正确的 

1765
01:04:27,240 --> 01:04:33,330
除了我，这些月的任何一个都回答 

1766
01:04:32,040 --> 01:04:43,170
知道这取决于 

1767
01:04:33,330 --> 01:04:44,970
我们想要一个月，所以你假设我们 

1768
01:04:43,170 --> 01:04:46,740
想要生日我想我已经称它了

1769
01:04:44,970 --> 01:04:49,170
年龄所以也许这就是问题所在 

1770
01:04:46,740 --> 01:04:51,090
就好像它的年龄小就好了 

1771
01:04:49,170 --> 01:04:54,780
你可以零岁或 65岁 

1772
01:04:51,090 --> 01:04:56,070
我们有一个很好的 范围，如果它是 

1773
01:04:54,780 --> 01:04:58,140
年龄我觉得我们 没事 

1774
01:04:56,070 --> 01:04:59,910
但我认为你猥亵到了一个好点 

1775
01:04:58,140 --> 01:05:04,710
这就是我们想要的原因 

1776
01:04:59,910 --> 01:05:06,360
存储出生日期，而不是年龄该死的

1777
01:05:04,710 --> 01:05:07,350
事情总是在改变 

1778
01:05:06,360 --> 01:05:09,750
就像我要更新我的 

1779
01:05:07,350 --> 01:05:11,850
数据库明天然后第二天 

1780
01:05:09,750 --> 01:05:14,160
每小时或每分钟更别说了

1781
01:05:11,850 --> 01:05:15,330
仅仅因为我的用户年龄正在发生变化 

1782
01:05:14,160 --> 01:05:17,880
这样看起来很傻 

1783
01:05:15,330 --> 01:05:21,120
让我来代替固定的值， 这样做 

1784
01:05:17,880 --> 01:05:23,280
出生日期 出生日期之 类的东西 

1785
01:05:21,120 --> 01:05:25,860
也许指定不是int而是let 

1786
01:05:23,280 --> 01:05:27,510
实际上使用日期字段而不是我们的时间 

1787
01:05:25,860 --> 01:05:29,040
如果我们真的关心，可以存储时间

1788
01:05:27,510 --> 01:05:32,880
什么时候他们出生在某一天 

1789
01:05:29,040 --> 01:05:34,500
一天，但在这里我能说的日期将 

1790
01:05:32,880 --> 01:05:36,660
好一点，因为现在我知道了 

1791
01:05:34,500 --> 01:05:38,010
Python JavaScript 甚至C 我都可以 做到 

1792
01:05:36,660 --> 01:05:39,570
如果我知道他们 的数学和 点点 

1793
01:05:38,010 --> 01:05:41,400
出生在 这样 的一天和 

1794
01:05:39,570 --> 01:05:43,320
一个月和一年，我只会减去 

1795
01:05:41,400 --> 01:05:45,270
从当天的月份和年份开始 

1796
01:05:43,320 --> 01:05:47,460
并计算 出多少天或多年 

1797
01:05:45,270 --> 01:05:49,050
他们是一个更好的设计决定 

1798
01:05:47,460 --> 01:05:51,060
也许，但我们必须这样做 

1799
01:05:49,050 --> 01:05:52,890
标准化我们不能只是的格式 

1800
01:05:51,060 --> 01:05:54,090
让 人们从美国和 欧洲 

1801
01:05:52,890 --> 01:05:56,670
亚洲各种选择都属于 自己 

1802
01:05:54,090 --> 01:05:59,790
格式续集标准化今年 

1803
01:05:56,670 --> 01:06:01,050
年份 - 月份 - 月份 - 日期 

1804
01:05:59,790 --> 01:06:03,390
这就是 拥有这些 的 价值 

1805
01:06:01,050 --> 01:06:07,980
数据类型再 好吧那么怎么样 

1806
01:06:03,390 --> 01:06:11,250
运动最后一个条形图 好吧 

1807
01:06:07,980 --> 01:06:20,790
什么是最长的单词数量 

1808
01:06:11,250 --> 01:06:23,280
体育他们很稳重 ，是 我 

1809
01:06:20,790 --> 01:06:25,170
听到 - 我不知道，只是为了 

1810
01:06:23,280 --> 01:06:26,730
为了开辟可能性 

1811
01:06:25,170 --> 01:06:28,350
你认为人类可能会有点儿 

1812
01:06:26,730 --> 01:06:30,060
说明并实际写一个

1813
01:06:28,350 --> 01:06:31,800
他们所有的运动段落

1814
01:06:30,060 --> 01:06:33,720
参与或 什么， 甚至更大 

1815
01:06:31,800 --> 01:06:35,340
比段落文字更大

1816
01:06:33,720 --> 01:06:36,930
体育这可能并不引人注目 

1817
01:06:35,340 --> 01:06:38,070
然后我会把它改回varchar'但是 

1818
01:06:36,930 --> 01:06:38,850
如果有人像他们一样输入

1819
01:06:38,070 --> 01:06:41,460
大学作文 

1820
01:06:38,850 --> 01:06:42,570
进入共同的应用程序或 

1821
01:06:41,460 --> 01:06:44,160
如果你要求人们粘贴他们的

1822
01:06:42,570 --> 01:06:46,110
您可能想要的简历等

1823
01:06:44,160 --> 01:06:47,760
使用文字，因为我不知道有多少 

1824
01:06:46,110 --> 01:06:49,350
有人会有文字 允许的话 

1825
01:06:47,760 --> 01:06:51,030
您可以存储更多的数据 ，但它 

1826
01:06:49,350 --> 01:06:53,160
存储它有点不同它倾向于 

1827
01:06:51,030 --> 01:06:55,110
将其存储在列中但不是使用

1828
01:06:53,160 --> 01:06:56,640
如果你记得几个 星期的话 

1829
01:06:55,110 --> 01:06:58,410
回来它使用相当于 

1830
01:06:56,640 --> 01:06:59,940
把它存放在那里 需要一个 

1831
01:06:58,410 --> 01:07:02,700
多一点时间 再来一次 

1832
01:06:59,940 --> 01:07:03,750
这里 只是权衡，所以我们 

1833
01:07:02,700 --> 01:07:05,850
可以做 VAR 充电 

1834
01:07:03,750 --> 01:07:08,850
255让我有点紧张，所以我 

1835
01:07:05,850 --> 01:07:10,590
要用另一个常用值1024 

1836
01:07:08,850 --> 01:07:12,180
这是两个人的力量， 但没有人 

1837
01:07:10,590 --> 01:07:13,530
在这里正确答案，但这些是 

1838
01:07:12,180 --> 01:07:16,080
我们必须做出非明显的设计决定 

1839
01:07:13,530 --> 01:07:18,090
如果我在 这里 没有 犯任何错误 

1840
01:07:16,080 --> 01:07:20,610
我要继续 点击创建和 

1841
01:07:18,090 --> 01:07:22,650
你创建了哪个表甚至可以 

1842
01:07:20,610 --> 01:07:24,900
现在就看到了 这 一直 是 数据 

1843
01:07:22,650 --> 01:07:27,780
在那里创造， 如果我回去 ，瞧瞧 

1844
01:07:24,900 --> 01:07:29,730
我和 IMS 又回到了 

1845
01:07:27,780 --> 01:07:31,320
注册人表 不仅可以浏览 

1846
01:07:29,730 --> 01:07:33,180
那里什么都没有我可以 

1847
01:07:31,320 --> 01:07:35,100
看看结构 ，实际看到 

1848
01:07:33,180 --> 01:07:36,450
所有这些相同的值 并编辑一些 

1849
01:07:35,100 --> 01:07:38,370
他们喜欢重命名，但你不能 

1850
01:07:36,450 --> 01:07:40,080
完全毁坏它 ，你可能需要 

1851
01:07:38,370 --> 01:07:42,330
从头开始 你做的太多了 

1852
01:07:40,080 --> 01:07:48,240
然后改变任何问题 

1853
01:07:42,330 --> 01:07:49,980
关于这个是啊我为什么要使用1024 

1854
01:07:48,240 --> 01:07:53,400
而不是10 23通常当你 

1855
01:07:49,980 --> 01:07:56,130
选择一个席子 哦约定我 不能 

1856
01:07:53,400 --> 01:07:57,450
证明这255是 最大的因为我 

1857
01:07:56,130 --> 01:07:59,940
认为其中一个 字节是保留的 

1858
01:07:57,450 --> 01:08:01,350
历史上有些价值， 但事实并非如此 

1859
01:07:59,940 --> 01:08:07,290
真的是绑定 的情况 

1860
01:08:01,350 --> 01:08:10,650
如今解除了没有充分的理由 

1861
01:08:07,290 --> 01:08:12,510
是的，如果多年前255实际上是 

1862
01:08:10,650 --> 01:08:14,160
限制因此它现在被采用我没有 

1863
01:08:12,510 --> 01:08:16,080
知道我刚摘的两个大国 的关 

1864
01:08:14,160 --> 01:08:22,500
专辑和 我的下一个去将 是2048年 

1865
01:08:16,080 --> 01:08:23,640
4096等等只是因为是吧 

1866
01:08:22,500 --> 01:08:26,430
图表吧之间有什么区别 

1867
01:08:23,640 --> 01:08:29,250
char和char char 使用固定数字 

1868
01:08:26,430 --> 01:08:31,440
不管你有多少人都是字节数 

1869
01:08:29,250 --> 01:08:33,780
正在利用你的优势 

1870
01:08:31,440 --> 01:08:35,520
列在概念上是完美的 

1871
01:08:33,780 --> 01:08:37,350
直接 在 左 边缘和 

1872
01:08:35,520 --> 01:08:39,870
右边缘意味着你随机

1873
01:08:37,350 --> 01:08:42,300
访问因为每个单元都是固定的 

1874
01:08:39,870 --> 01:08:44,550
来自 其余varchar 的字节数

1875
01:08:42,300 --> 01:08:46,200
像一个被称为参差不齐的数组一样使用 

1876
01:08:44,550 --> 01:08:48,600
右侧是一侧的 

1877
01:08:46,200 --> 01:08:50,460
在不同的细胞中更短或更长 

1878
01:08:48,600 --> 01:08:52,420
每个都只有最大长度 

1879
01:08:50,460 --> 01:08:53,949
那些细胞，但搜索它可能会很慢 

1880
01:08:52,420 --> 01:08:56,049
因此，他不能只是跳跃 

1881
01:08:53,949 --> 01:08:58,299
出售卖 你必须遵循 

1882
01:08:56,049 --> 01:09:03,580
这些事情是这样的长度

1883
01:08:58,299 --> 01:09:05,500
如果我想补充的话 ，是吧你 好吗？ 

1884
01:09:03,580 --> 01:09:07,929
现在和教育教育领域

1885
01:09:05,500 --> 01:09:09,520
如果你意识到太晚，请修改表格 

1886
01:09:07,929 --> 01:09:11,799
Hotelling就像 我需要实际添加一样 

1887
01:09:09,520 --> 01:09:13,420
我们可以在GUI工具中做到这一点

1888
01:09:11,799 --> 01:09:14,830
将一个字段添加到表的末尾 

1889
01:09:13,420 --> 01:09:16,660
从字面上看 ，让我们这样做 

1890
01:09:14,830 --> 01:09:18,549
让我继续 ，点击go我会 

1891
01:09:16,660 --> 01:09:20,230
提示类似的形式，但更小 

1892
01:09:18,549 --> 01:09:22,600
我 可以继续输入一些东西 

1893
01:09:20,230 --> 01:09:25,120
喜欢教育让我提出这个 

1894
01:09:22,600 --> 01:09:26,980
varchar' 也许255我们可以拥有 

1895
01:09:25,120 --> 01:09:30,609
那场辩论 我也要 继续前进 

1896
01:09:26,980 --> 01:09:32,469
说添加字段现在注意到 

1897
01:09:30,609 --> 01:09:33,790
表已成功更改它 

1898
01:09:32,469 --> 01:09:34,839
实际上，无论出于什么原因，它都是

1899
01:09:33,790 --> 01:09:36,670
没有向我展示代码 

1900
01:09:34,839 --> 01:09:39,549
特别命令，但字面上 

1901
01:09:36,670 --> 01:09:41,170
续集中的祭坛命令 

1902
01:09:39,549 --> 01:09:43,089
允许你改变它， 如果我回去 

1903
01:09:41,170 --> 01:09:45,339
现在你会看到 我 的 结构 

1904
01:09:43,089 --> 01:09:50,679
有另一个名为 教育的 专栏 

1905
01:09:45,339 --> 01:09:52,179
具有讽刺意味的是，这里有一排是好的 

1906
01:09:50,679 --> 01:09:55,000
问题不列的顺序

1907
01:09:52,179 --> 01:09:56,890
从根本上说，没有任何惯例

1908
01:09:55,000 --> 01:09:59,020
你通常会把ID放在第一位 

1909
01:09:56,890 --> 01:10:00,790
那我个人按照设计就像 

1910
01:09:59,020 --> 01:10:02,590
最重要的字段就像名字一样 

1911
01:10:00,790 --> 01:10:03,580
感觉就像电子邮件一样正确的选择 

1912
01:10:02,590 --> 01:10:04,960
虽然我觉得这是正确的选择

1913
01:10:03,580 --> 01:10:05,440
显然有点太晚了 

1914
01:10:04,960 --> 01:10:07,660
这次

1915
01:10:05,440 --> 01:10:10,030
在续集 精简版重新排序 并不容易 

1916
01:10:07,660 --> 01:10:11,949
事情，但在其他数据库， 你可以这样 

1917
01:10:10,030 --> 01:10:14,550
在那里，它更像是一种 人类的习俗哦 

1918
01:10:11,949 --> 01:10:14,550
是啊

1919
01:10:16,350 --> 01:10:19,870
好的问题是一个公约 

1920
01:10:18,400 --> 01:10:22,000
一个主键或者你可以拥有 

1921
01:10:19,870 --> 01:10:24,550
根据 定义，您只能拥有 多个 

1922
01:10:22,000 --> 01:10:27,489
一个，但主键可以跨越 

1923
01:10:24,550 --> 01:10:30,040
多列，所以我们还没见过 

1924
01:10:27,489 --> 01:10:31,690
用例， 但有 

1925
01:10:30,040 --> 01:10:33,250
场景中，你会 想说 

1926
01:10:31,690 --> 01:10:36,040
我想保证这两个 

1927
01:10:33,250 --> 01:10:38,110
列一起 是唯一的但不是每个 

1928
01:10:36,040 --> 01:10:40,600
个人独特，但我们不会 

1929
01:10:38,110 --> 01:10:42,719
反驳说 ， 只是还没有 其他问题 

1930
01:10:40,600 --> 01:10:42,719
是啊

1931
01:10:46,380 --> 01:10:51,580
非常好的问题，如果你有什么 

1932
01:10:48,400 --> 01:10:53,770
你 已经有了加入教育 

1933
01:10:51,580 --> 01:10:55,420
那里的真实数据，但你没有指定 

1934
01:10:53,770 --> 01:10:56,920
null 因为什么 是 有问题的 

1935
01:10:55,420 --> 01:10:58,510
是的教育背景 

1936
01:10:56,920 --> 01:11:00,010
以前的人通常是 什么的 

1937
01:10:58,510 --> 01:11:01,540
数据库会做的是拒绝它或 

1938
01:11:00,010 --> 01:11:03,460
它只会把空字符串 

1939
01:11:01,540 --> 01:11:05,320
引用 - 取消引用， 所以它在技术上不是 

1940
01:11:03,460 --> 01:11:07,630
但 实际上并 没有什么 

1941
01:11:05,320 --> 01:11:08,170
只是一串 零 长度 真的 很好 

1942
01:11:07,630 --> 01:11:10,870
题

1943
01:11:08,170 --> 01:11:12,280
好的，那么 我们现在 可以 做 什么呢 

1944
01:11:10,870 --> 01:11:14,320
让这个更加强大 

1945
01:11:12,280 --> 01:11:16,600
我继续并快速插入一些数据 

1946
01:11:14,320 --> 01:11:17,530
在这里我会保留大部分 空白但是 

1947
01:11:16,600 --> 01:11:19,620
你知道我 甚至都 不会打扰 

1948
01:11:17,530 --> 01:11:23,260
有了 Brian Brian，你又回到了团队中 

1949
01:11:19,620 --> 01:11:25,210
让我们继续吧 ，插入Brian 吧 

1950
01:11:23,260 --> 01:11:28,510
现在进入注册人再次让我们 

1951
01:11:25,210 --> 01:11:30,489
继续，再加上Veronica ，我就是 

1952
01:11:28,510 --> 01:11:32,560
只需手动插入几行

1953
01:11:30,489 --> 01:11:34,210
再次注意到它正在执行所有这些 

1954
01:11:32,560 --> 01:11:36,130
对我来说， 没有我不得不打扰 

1955
01:11:34,210 --> 01:11:37,630
打字出来，但我 绝对可以 

1956
01:11:36,130 --> 01:11:39,190
事实上只是为了 好的措施让我们 做一个 

1957
01:11:37,630 --> 01:11:41,320
如果我单击续集选项卡，请手动

1958
01:11:39,190 --> 01:11:42,940
请注意，我收到了默认建议 

1959
01:11:41,320 --> 01:11:44,860
这是你的语法 

1960
01:11:42,940 --> 01:11:48,340
可以选择一切， 或者我可以 输入 

1961
01:11:44,860 --> 01:11:49,840
插入注册人，但现在如果我

1962
01:11:48,340 --> 01:11:51,850
只想插入一个我没有的名字 

1963
01:11:49,840 --> 01:11:53,920
我 可以做所有的所有列

1964
01:11:51,850 --> 01:11:57,040
说继续，在这里插入亚伦 

1965
01:11:53,920 --> 01:11:59,590
实例分号缩小并单击go 

1966
01:11:57,040 --> 01:12:02,080
似乎如果我回去上班

1967
01:11:59,590 --> 01:12:03,730
现在浏览亚伦也在那里 但是 

1968
01:12:02,080 --> 01:12:05,500
你会看到查询的不同之处 

1969
01:12:03,730 --> 01:12:07,690
这是由自动生成 的 

1970
01:12:05,500 --> 01:12:09,460
GUI懒得插入

1971
01:12:07,690 --> 01:12:12,640
引用/取消引用这将被称为空 

1972
01:12:09,460 --> 01:12:14,020
长度为零的字符串我省略了 偶数 

1973
01:12:12,640 --> 01:12:15,850
提到那些专栏是

1974
01:12:14,020 --> 01:12:17,050
故意插入null如此坦率

1975
01:12:15,850 --> 01:12:18,910
我的数据库变得 有点乱 

1976
01:12:17,050 --> 01:12:21,610
这里你通常不使用PHP 

1977
01:12:18,910 --> 01:12:23,140
lited min或GUI 来插入数据 

1978
01:12:21,610 --> 01:12:24,699
可能会用它来方便地创建你的

1979
01:12:23,140 --> 01:12:26,620
表格和种类得到您的申请 

1980
01:12:24,699 --> 01:12:27,760
准备好但是你会写代码 

1981
01:12:26,620 --> 01:12:28,840
最终，这是方向

1982
01:12:27,760 --> 01:12:30,820
我们要走了，我要 继续前进 

1983
01:12:28,840 --> 01:12:32,020
再插 一个人 哦，我忘了我 

1984
01:12:30,820 --> 01:12:34,060
因为我们，所以根本不在团队中 

1985
01:12:32,020 --> 01:12:36,580
重新开始让我自己回来 

1986
01:12:34,060 --> 01:12:38,440
大卫队让我继续前进 

1987
01:12:36,580 --> 01:12:40,210
然后单击插入返回注册人 

1988
01:12:38,440 --> 01:12:42,100
现在你会看到我们四个人 

1989
01:12:40,210 --> 01:12:43,780
ID已更改，因为它们已被插入 

1990
01:12:42,100 --> 01:12:45,370
在不同的顺序，但注意到所有

1991
01:12:43,780 --> 01:12:47,949
自动递增已经发生 

1992
01:12:45,370 --> 01:12:49,090
神奇地为我而且这很有用 

1993
01:12:47,949 --> 01:12:51,100
因为我没有就别想 

1994
01:12:49,090 --> 01:12:53,500
谁在乎我的身份证 

1995
01:12:51,100 --> 01:12:55,570
在很多 情况下我只需要一个 

1996
01:12:53,500 --> 01:12:57,180
数据库是一个唯一的ID 

1997
01:12:55,570 --> 01:13:00,130
现在让我们实际写一点点 

1998
01:12:57,180 --> 01:13:01,600
代码现在 为止，我们还没有 做 

1999
01:13:00,130 --> 01:13:03,100
任何有用的东西，我们已经证明你喜欢 

2000
01:13:01,600 --> 01:13:04,930
你在这黑色和白色的 窗户 

2001
01:13:03,100 --> 01:13:06,760
可以选择插入和更新数据 

2002
01:13:04,930 --> 01:13:08,050
但这并没有真正解决任何问题 

2003
01:13:06,760 --> 01:13:09,460
问题，我们知道的还 

2004
01:13:08,050 --> 01:13:10,720
我们有这个基于图形的网络 

2005
01:13:09,460 --> 01:13:13,330
您可以通过它创建的界面

2006
01:13:10,720 --> 01:13:14,950
表和添加数据， 但谁在乎我们 

2007
01:13:13,330 --> 01:13:16,240
试图解决实际问题和

2008
01:13:14,950 --> 01:13:18,580
最近的问题一直在建立

2009
01:13:16,240 --> 01:13:20,740
可以解决任何数量的软件

2010
01:13:18,580 --> 01:13:21,910
测量用户和人的问题 

2011
01:13:20,740 --> 01:13:23,860
显示结果或发现

2012
01:13:21,910 --> 01:13:25,690
相似之处和文件如此设想

2013
01:13:23,860 --> 01:13:27,130
现在的问题 实际上是 

2014
01:13:25,690 --> 01:13:29,410
建立像frosh IMS这样的东西

2015
01:13:27,130 --> 01:13:31,510
网站，让学生注册和 

2016
01:13:29,410 --> 01:13:33,640
然后看看谁回来了 

2017
01:13:31,510 --> 01:13:35,860
我缺乏相当懒惰的 一天 

2018
01:13:33,640 --> 01:13:37,960
技术诀窍只是通过电子邮件发送给 

2019
01:13:35,860 --> 01:13:40,030
注册到监考人或RA 

2020
01:13:37,960 --> 01:13:42,550
谁在管理 校内运动 

2021
01:13:40,030 --> 01:13:43,600
程序， 但我 说领导者开始推杆 

2022
01:13:42,550 --> 01:13:45,820
它在CSV文件中

2023
01:13:43,600 --> 01:13:47,620
假设现在版本三 十二年 

2024
01:13:45,820 --> 01:13:49,900
后来我想存储 在一个实际的 

2025
01:13:47,620 --> 01:13:52,000
数据库我 怎么能 真正做到这一点 

2026
01:13:49,900 --> 01:13:56,200
然后看到结果让我 进入 

2027
01:13:52,000 --> 01:13:59,170
IDE再次开放，例如 a 

2028
01:13:56,200 --> 01:14:01,510
新文件将继续 并致电 

2029
01:13:59,170 --> 01:14:03,850
演讲点 Pi，假设我只是想要 

2030
01:14:01,510 --> 01:14:06,460
通过编写一个简单的Python 程序 

2031
01:14:03,850 --> 01:14:07,960
从而从数据库中选择数据 

2032
01:14:06,460 --> 01:14:10,710
事实证明我 可以在这里做一些事情 

2033
01:14:07,960 --> 01:14:15,010
首先让我 继续前进 

2034
01:14:10,710 --> 01:14:16,960
让我们从cs50说我以前有 

2035
01:14:15,010 --> 01:14:18,940
完成像导入获取字符串和 

2036
01:14:16,960 --> 01:14:21,100
得到int 等等 ，事实证明 

2037
01:14:18,940 --> 01:14:22,930
Python的cs50 库也是 

2038
01:14:21,100 --> 01:14:25,480
支持续集，它会给予 

2039
01:14:22,930 --> 01:14:28,450
我们一个名为execute的函数 

2040
01:14:25,480 --> 01:14:30,910
让你执行任何续集命令但是 

2041
01:14:28,450 --> 01:14:33,820
在Python 代码中，而不是 拉 起来 

2042
01:14:30,910 --> 01:14:35,440
续集精简版3通过我自己的 手或去 

2043
01:14:33,820 --> 01:14:37,600
到图形用户界面PHP 

2044
01:14:35,440 --> 01:14:40,900
点亮的男人我可以写代码 谈话 

2045
01:14:37,600 --> 01:14:43,000
直接向IMS DB发送并消除 

2046
01:14:40,900 --> 01:14:45,460
所有的 这些工具完全公正 

2047
01:14:43,000 --> 01:14:47,140
现在写代码让我怎么做 我 

2048
01:14:45,460 --> 01:14:48,430
要声明一个 名为DB 的变量 

2049
01:14:47,140 --> 01:14:50,230
对于数据库，我可以称之为任何东西 

2050
01:14:48,430 --> 01:14:52,180
我想要 ，我会继续 打电话 

2051
01:14:50,230 --> 01:14:54,400
这个续集功能，我要过去了 

2052
01:14:52,180 --> 01:14:56,230
在一个有点时髦的字符串作为 

2053
01:14:54,400 --> 01:14:58,180
参数， 但它是一个标准的 约定 

2054
01:14:56,230 --> 01:15:00,310
说你有什么数据库技术

2055
01:14:58,180 --> 01:15:02,590
想用你 做结肠斜线 

2056
01:15:00,310 --> 01:15:04,690
斜线斜线所以它不是三个斜线 

2057
01:15:02,590 --> 01:15:09,610
URL中的通常两个， 我 要去 

2058
01:15:04,690 --> 01:15:11,980
指定frosh IMS dot DB 

2059
01:15:09,610 --> 01:15:13,810
现在这将给我一个Python变量 

2060
01:15:11,980 --> 01:15:16,360
所谓的数据库是有点像 

2061
01:15:13,810 --> 01:15:18,820
门户网站，如果您将进入该 数据库 

2062
01:15:16,360 --> 01:15:21,070
我可以发送的文件选择和插入 

2063
01:15:18,820 --> 01:15:23,110
和删除和更新 我怎么办 

2064
01:15:21,070 --> 01:15:25,150
如果在一天结束的时候我很好

2065
01:15:23,110 --> 01:15:29,590
想要执行相当于select 

2066
01:15:25,150 --> 01:15:31,960
来自注册人的明星我该怎么做 

2067
01:15:29,590 --> 01:15:34,179
以及我只是 在文本编辑器 右 

2068
01:15:31,960 --> 01:15:36,190
这是cs50 IDE我只是输入文字 

2069
01:15:34,179 --> 01:15:38,500
而且我在Python中输入文本 

2070
01:15:36,190 --> 01:15:40,810
文件，这 是 不是Python和确 

2071
01:15:38,500 --> 01:15:43,960
IDE有这个小红色X说你 

2072
01:15:40,810 --> 01:15:46,840
不能这样做，但我可以通过续集 

2073
01:15:43,960 --> 01:15:48,850
代码作为Python函数的输入

2074
01:15:46,840 --> 01:15:50,230
让这个功能与之交谈

2075
01:15:48,850 --> 01:15:52,420
数据库，这确实是 我们的 

2076
01:15:50,230 --> 01:15:53,560
从cs50图书馆来到这里我是 

2077
01:15:52,420 --> 01:15:56,949
要继续这样做，你知道什么 

2078
01:15:53,560 --> 01:16:01,500
访问数据库并执行 

2079
01:15:56,949 --> 01:16:04,630
下面的代码续集 报价，所享有 的是 

2080
01:16:01,500 --> 01:16:08,560
现在 关闭括号 是什么选择 

2081
01:16:04,630 --> 01:16:11,860
按惯例回归应该是什么 

2082
01:16:08,560 --> 01:16:13,840
我们刚刚在续集Lite 3中很好地回归

2083
01:16:11,860 --> 01:16:15,489
看到一种漂亮的基于文本的表 

2084
01:16:13,840 --> 01:16:16,900
右边有相似的线条和斜线 

2085
01:16:15,489 --> 01:16:18,850
看起来像一张桌子，但它只是文字 

2086
01:16:16,900 --> 01:16:21,340
PHP点亮了 我们 实际上看到了HTML 

2087
01:16:18,850 --> 01:16:22,840
表时我浏览数据库和我 

2088
01:16:21,340 --> 01:16:24,460
很久以前就提出过你的口头提议

2089
01:16:22,840 --> 01:16:26,920
知道如果我 要回来 这 一切 

2090
01:16:24,460 --> 01:16:32,290
代码中的 数据我喜欢什么数据类型 

2091
01:16:26,920 --> 01:16:34,060
它被交给我，因为 没有 玫瑰我想 

2092
01:16:32,290 --> 01:16:36,040
从桌子上站起来 告诉我 所有的 

2093
01:16:34,060 --> 01:16:38,889
已经注册了哪些数据的学生 

2094
01:16:36,040 --> 01:16:40,690
Python中的结构似乎只是一种行为 

2095
01:16:38,889 --> 01:16:42,460
list列出了从中排序的列表 

2096
01:16:40,690 --> 01:16:44,290
第一行到最后一行所以我们会调用它 

2097
01:16:42,460 --> 01:16:46,090
C 日当天的列表或数组 

2098
01:16:44,290 --> 01:16:47,380
所以你知道我会 假设 什么 

2099
01:16:46,090 --> 01:16:48,580
这是 正确的， 如果我读了 

2100
01:16:47,380 --> 01:16:50,380
文档我会看到它 

2101
01:16:48,580 --> 01:16:53,320
正确的cs50执行功能如果你 

2102
01:16:50,380 --> 01:16:55,150
select 返回到它的行列表 

2103
01:16:53,320 --> 01:16:56,949
如果没有匹配，则可能有0行 

2104
01:16:55,150 --> 01:16:58,780
但它可能有一千行如果 

2105
01:16:56,949 --> 01:17:00,310
我要参加很多比赛

2106
01:16:58,780 --> 01:17:02,560
存储这些结果无论他们是 在 

2107
01:17:00,310 --> 01:17:04,960
我行阵现在假设我要 

2108
01:17:02,560 --> 01:17:07,480
打印出谁已经注册的 我 

2109
01:17:04,960 --> 01:17:08,860
来自IMS网站的数据库

2110
01:17:07,480 --> 01:17:10,600
存在我假设学生有

2111
01:17:08,860 --> 01:17:12,460
现在在网上 注册 我只是 

2112
01:17:10,600 --> 01:17:14,020
监考人或实际上现在 的RA 

2113
01:17:12,460 --> 01:17:16,119
试图操纵 数据 并做 

2114
01:17:14,020 --> 01:17:18,820
有什么东西， 所以我 能做些 什么 

2115
01:17:16,119 --> 01:17:21,909
对于行中的行，我想做什么 

2116
01:17:18,820 --> 01:17:23,440
我继续， 然后 打印出 那个 

2117
01:17:21,909 --> 01:17:26,770
某某注册了 

2118
01:17:23,440 --> 01:17:28,750
某某注册 好我怎么插电 

2119
01:17:26,770 --> 01:17:31,480
在某某方面，有几种方法可以做到 

2120
01:17:28,750 --> 01:17:33,850
这样做， 让我们先看看 我 

2121
01:17:31,480 --> 01:17:35,920
可以使用我的占位符语法

2122
01:17:33,850 --> 01:17:38,250
打印然后我想打印出来 

2123
01:17:35,920 --> 01:17:41,170
行，但我想从那一行得到什么 

2124
01:17:38,250 --> 01:17:46,870
这列中的任何一行是什么 

2125
01:17:41,170 --> 01:17:48,880
数据库ID和名称以及宿舍和电话 

2126
01:17:46,870 --> 01:17:50,050
事实 证明这些 都是 

2127
01:17:48,880 --> 01:17:52,390
要交给 你的是 Python 

2128
01:17:50,050 --> 01:17:54,820
字典或字典 结构， 所以我可以 

2129
01:17:52,390 --> 01:17:56,140
在这里说行 引号不引用 名称 

2130
01:17:54,820 --> 01:17:58,570
我会用单引号 来制作更多 

2131
01:17:56,140 --> 01:18:02,710
清楚这里发生了什么，然后我 

2132
01:17:58,570 --> 01:18:04,360
需要做一个修复 我 如何 格式化f4 

2133
01:18:02,710 --> 01:18:06,130
字符串所以它看起来有点神秘 但是 

2134
01:18:04,360 --> 01:18:07,600
这只是 Python的东西，现在是唯一的 

2135
01:18:06,130 --> 01:18:09,790
新的东西是续集，但如果我们 

2136
01:18:07,600 --> 01:18:11,380
使用此时规定续集

2137
01:18:09,790 --> 01:18:14,380
执行函数只会给你一个 

2138
01:18:11,380 --> 01:18:16,180
行的列表中的每个部分是一个 

2139
01:18:14,380 --> 01:18:18,010
字典， 这样你就可以得到这个 

2140
01:18:16,180 --> 01:18:20,020
列或此列ID您的姓名或 

2141
01:18:18,010 --> 01:18:22,090
宿舍， 这似乎 是Niall一个不错的 

2142
01:18:20,020 --> 01:18:23,740
现在与本周的收敛 

2143
01:18:22,090 --> 01:18:25,480
过去几周 ，所以让 我先走 

2144
01:18:23,740 --> 01:18:27,220
并保存这个让我继续前进并 查看 

2145
01:18:25,480 --> 01:18:29,710
我的控制台所以我有一个终端窗口 

2146
01:18:27,220 --> 01:18:32,650
让我继续 运行 的 Python 

2147
01:18:29,710 --> 01:18:34,930
讲课， 如果我，请等一下 

2148
01:18:32,650 --> 01:18:38,830
我希望能看到我的手指

2149
01:18:34,930 --> 01:18:40,270
谁注册了我见过的惊人

2150
01:18:38,830 --> 01:18:42,070
谁现在注册了一行 

2151
01:18:40,270 --> 01:18:43,390
输出，我没想到的是 

2152
01:18:42,070 --> 01:18:45,040
就是这个，这就是 图书馆 

2153
01:18:43,390 --> 01:18:47,170
在教学上有所帮助它正在展示

2154
01:18:45,040 --> 01:18:49,000
我的每一个命令，我发送到 

2155
01:18:47,170 --> 01:18:50,860
数据库，但 你会看到 某某 

2156
01:18:49,000 --> 01:18:52,150
已注册， 所以这是一种 

2157
01:18:50,860 --> 01:18:53,980
有趣的是它有点愚蠢 

2158
01:18:52,150 --> 01:18:55,780
程序正确，因为大多数Proctor's 

2159
01:18:53,980 --> 01:18:57,550
不会像黑客一样疯狂 

2160
01:18:55,780 --> 01:18:58,900
通过使用终端窗口并 运行 

2161
01:18:57,550 --> 01:19:00,370
Python脚本他们可能打算 

2162
01:18:58,900 --> 01:19:02,200
想 通过网页做到这一点 

2163
01:19:00,370 --> 01:19:04,090
其实看到谁 注册 ，但如果我们 

2164
01:19:02,200 --> 01:19:06,280
有能力在Python代码中做 

2165
01:19:04,090 --> 01:19:08,470
这就像迭代我能做什么 

2166
01:19:06,280 --> 01:19:09,910
而不是 和，而不是 仅仅 打印到 

2167
01:19:08,470 --> 01:19:11,850
屏幕我可以打印出来 

2168
01:19:09,910 --> 01:19:14,470
上周和过去的问题集 我 

2169
01:19:11,850 --> 01:19:16,030
可以像每一个一样打印出HTML 

2170
01:19:14,470 --> 01:19:17,350
注册有种 感觉的学生

2171
01:19:16,030 --> 01:19:19,180
喜欢一个喜欢的机会 

2172
01:19:17,350 --> 01:19:21,250
无序列表或有序列表或 

2173
01:19:19,180 --> 01:19:23,590
表格或您现在可以生成的任何内容 

2174
01:19:21,250 --> 01:19:26,620
HTML 让我这样做让我 真的 

2175
01:19:23,590 --> 01:19:28,720
进入事先做出的例子 

2176
01:19:26,620 --> 01:19:31,420
如果我继续 前进并 打开 怎么 办？ 

2177
01:19:28,720 --> 01:19:33,340
这里的HTML布局是一个简单的布局 

2178
01:19:31,420 --> 01:19:35,350
用于使用烧瓶的Web 应用程序 

2179
01:19:33,340 --> 01:19:37,090
那些不熟悉的人主要是HTML 

2180
01:19:35,350 --> 01:19:39,010
再加上名为jinjo的技术

2181
01:19:37,090 --> 01:19:41,380
这是一种基于网络的技术 

2182
01:19:39,010 --> 01:19:43,030
动态生成网站的身体 

2183
01:19:41,380 --> 01:19:45,130
本页面显然 是 有什么的 

2184
01:19:43,030 --> 01:19:47,860
兴趣， 你 知道我打赌我 能做 什么 

2185
01:19:45,130 --> 01:19:49,570
在那里做一些逻辑， 所以让 我 

2186
01:19:47,860 --> 01:19:53,230
继续这样做让我继续前进 

2187
01:19:49,570 --> 01:19:56,409
创建让我们说一个新文件 让我们调用 

2188
01:19:53,230 --> 01:19:58,330
这个应用程序点我会去 

2189
01:19:56,409 --> 01:20:00,070
提前， 为了时间的缘故，做一点 

2190
01:19:58,330 --> 01:20:02,800
复制粘贴，以节省一些自己 

2191
01:20:00,070 --> 01:20:05,409
击键所以这里是一个 非常简单的网站 

2192
01:20:02,800 --> 01:20:07,380
应用程序，这将是我这样做，如果 

2193
01:20:05,409 --> 01:20:10,989
我在这里进入模板让我 开放 

2194
01:20:07,380 --> 01:20:13,780
index.html 让我继续这里 

2195
01:20:10,989 --> 01:20:15,520
这么长的故事就 在这里，我们在哪里 

2196
01:20:13,780 --> 01:20:17,920
如果我改为，那就这样 

2197
01:20:15,520 --> 01:20:19,900
使用代码 生成无序列表 

2198
01:20:17,920 --> 01:20:22,690
从上周开始，我使用了我的for循环 

2199
01:20:19,900 --> 01:20:24,550
这里面是我的网络应用程序而不是 

2200
01:20:22,690 --> 01:20:26,469
实际上只是一个简单的讲座顶部 

2201
01:20:24,550 --> 01:20:28,599
高档文件回忆起 我能做到的 

2202
01:20:26,469 --> 01:20:30,580
像这样的东西， 我可以有一个jinjo 

2203
01:20:28,599 --> 01:20:33,849
循环， 所以我可以说 像四个 

2204
01:20:30,580 --> 01:20:36,880
排成行，然后在 这里我可以 

2205
01:20:33,849 --> 01:20:39,550
哎呀 先发制人地说出类似n的东西 

2206
01:20:36,880 --> 01:20:41,440
4这是我们 最后的 奇怪语法 

2207
01:20:39,550 --> 01:20:43,690
一周然后在这里我可以 做一个 

2208
01:20:41,440 --> 01:20:47,800
列出项目然后如果我想显示谁 

2209
01:20:43,690 --> 01:20:49,510
注册我在这里输入什么东西 

2210
01:20:47,800 --> 01:20:54,719
如果每个都 在这些花 括号 之间 

2211
01:20:49,510 --> 01:20:56,920
row表示注册人行名称 

2212
01:20:54,719 --> 01:20:58,630
注册我可以做类似的事情 

2213
01:20:56,920 --> 01:21:00,699
这个相同的想法我只是包装它 

2214
01:20:58,630 --> 01:21:02,860
与 HTML 的 一 点点 让我走 

2215
01:21:00,699 --> 01:21:03,909
到我的应用程序点 PI文件，因为 

2216
01:21:02,860 --> 01:21:05,980
我要填补一些空白 

2217
01:21:03,909 --> 01:21:08,290
让我看看我怎样 才能做到这一点 

2218
01:21:05,980 --> 01:21:09,940
最终我想要返回结果 

2219
01:21:08,290 --> 01:21:12,610
呈现一个名为的模板

2220
01:21:09,940 --> 01:21:14,349
index.html 适合不熟悉的家庭 

2221
01:21:12,610 --> 01:21:16,869
只是一行代码表示go show 

2222
01:21:14,349 --> 01:21:18,880
该文件给 用户，但 我不想要 

2223
01:21:16,869 --> 01:21:20,409
只是按原样向他们显示文件 

2224
01:21:18,880 --> 01:21:23,139
让我们至少得到这个设置 我 

2225
01:21:20,409 --> 01:21:25,389
担心它可能 还不行 

2226
01:21:23,139 --> 01:21:26,920
因为我需要得到实际的 数据 

2227
01:21:25,389 --> 01:21:29,590
我怎样才能 得到所有行从我 

2228
01:21:26,920 --> 01:21:32,230
注册人，我可以做罗斯获得 DB 

2229
01:21:29,590 --> 01:21:35,530
点执行，我可以继续前进 

2230
01:21:32,230 --> 01:21:37,570
从 注册人和商店中 选择明星 

2231
01:21:35,530 --> 01:21:39,610
在那里这个文件叫做frosh 

2232
01:21:37,570 --> 01:21:41,739
我 之前 创建的IMDB 和 

2233
01:21:39,610 --> 01:21:43,300
其他一切都只是烧瓶的东西 

2234
01:21:41,739 --> 01:21:46,179
上周没有 其他新的唯一 

2235
01:21:43,300 --> 01:21:49,330
这是新的东西就是这条线在这里 这 

2236
01:21:46,179 --> 01:21:50,860
排在这里，现在这条线在这里 

2237
01:21:49,330 --> 01:21:53,349
我正在使用续集

2238
01:21:50,860 --> 01:21:54,909
一个Python呼叫的内部绕过它 作为 

2239
01:21:53,349 --> 01:21:58,860
一个名为 execute 的函数的参数

2240
01:21:54,909 --> 01:22:01,179
如何将 行 传递 给索引点HTML 

2241
01:21:58,860 --> 01:22:02,500
是的，行等于行是

2242
01:22:01,179 --> 01:22:04,420
我们采用的惯例你可以称之为

2243
01:22:02,500 --> 01:22:05,949
你想要的任何东西x等于y，但这是 

2244
01:22:04,420 --> 01:22:07,449
更简单，所以这是 

2245
01:22:05,949 --> 01:22:08,980
说嘿数据库让我全部

2246
01:22:07,449 --> 01:22:11,079
来自我的注册人的行然后呈现 

2247
01:22:08,980 --> 01:22:13,599
模板以HTML编制索引并传入 

2248
01:22:11,079 --> 01:22:19,329
这些行，现在如果我屏住呼吸 

2249
01:22:13,599 --> 01:22:21,369
如果我 ，运行烧瓶 运行没有语法 错误 

2250
01:22:19,329 --> 01:22:25,059
继续在这里公开参观 

2251
01:22:21,369 --> 01:22:27,670
该选项卡我 看到了一个内部服务器 

2252
01:22:25,059 --> 01:22:30,010
错误，所以教育时刻的家庭

2253
01:22:27,670 --> 01:22:32,469
让我们回到浏览器窗口 

2254
01:22:30,010 --> 01:22:35,050
在这里，看看发生了什么确定模板 

2255
01:22:32,469 --> 01:22:37,449
语法错误所以非常愚蠢的错误， 它 

2256
01:22:35,050 --> 01:22:39,190
看起来我期待一个方括号 

2257
01:22:37,449 --> 01:22:41,679
而不是一个可修复的花括号 

2258
01:22:39,190 --> 01:22:42,849
让我进入 index.html哦，我 

2259
01:22:41,679 --> 01:22:44,889
没想完 我的想法 

2260
01:22:42,849 --> 01:22:46,599
所以这是一些令人沮丧的事情

2261
01:22:44,889 --> 01:22:48,070
为那些 正在看的人编程

2262
01:22:46,599 --> 01:22:51,730
这是 第 一次 让我保存 

2263
01:22:48,070 --> 01:22:55,300
让我回到 这里的浏览器 

2264
01:22:51,730 --> 01:22:57,610
我们现在就重新加载 我的天啊哇哦 

2265
01:22:55,300 --> 01:22:59,500
有一个网页， 您可以通过它看到 

2266
01:22:57,610 --> 01:23:01,270
谁已经注册，但你知道我们是什么 

2267
01:22:59,500 --> 01:23:03,070
可以让这个更强大的召回 

2268
01:23:01,270 --> 01:23:04,449
我们一直在玩HTTP对于 一些 

2269
01:23:03,070 --> 01:23:06,130
时间，如果这是 我 的 URL 

2270
01:23:04,449 --> 01:23:07,480
访问我们玩过的召回 

2271
01:23:06,130 --> 01:23:09,099
与重新实现的搜索一样 

2272
01:23:07,480 --> 01:23:10,900
功能很好，如果我想 

2273
01:23:09,099 --> 01:23:13,260
支持搜索，以便我可以 

2274
01:23:10,900 --> 01:23:16,090
访问Q等于然后搜索

2275
01:23:13,260 --> 01:23:17,290
命名 人 说布赖恩，看看有多少 

2276
01:23:16,090 --> 01:23:19,030
Brian已经注册了

2277
01:23:17,290 --> 01:23:20,800
我们可以添加像这样的东西的支持

2278
01:23:19,030 --> 01:23:24,280
好吧也许让我回到原点 

2279
01:23:20,800 --> 01:23:26,500
IDE进入应用程序PI并让我走了 

2280
01:23:24,280 --> 01:23:30,820
提前 说出这样的问题 

2281
01:23:26,500 --> 01:23:32,949
等于请求dot args得 Q以查看是否 

2282
01:23:30,820 --> 01:23:36,360
什么都在那里，然后让 

2283
01:23:32,949 --> 01:23:40,900
我继续 做这个选择明星 

2284
01:23:36,360 --> 01:23:44,290
注册人让我看到Q在哪里 

2285
01:23:40,900 --> 01:23:46,119
什么名字等于Q但我需要一个

2286
01:23:44,290 --> 01:23:47,920
占位符所以也许我应该这样做 

2287
01:23:46,119 --> 01:23:50,829
我一做到这一点就需要 做什么 

2288
01:23:47,920 --> 01:23:52,780
f为格式 字符串，所以我可以 

2289
01:23:50,829 --> 01:23:55,360
在飞行中创造续集 

2290
01:23:52,780 --> 01:23:57,579
插入Q值的命令

2291
01:23:55,360 --> 01:23:59,710
那些花括号来 表达之间

2292
01:23:57,579 --> 01:24:02,530
的选择逻辑的所有的 

2293
01:23:59,710 --> 01:24:02,920
名字等于Brian 或者的注册人

2294
01:24:02,530 --> 01:24:05,199
版本 

2295
01:24:02,920 --> 01:24:07,750
或者我输入的名字让我离开 

2296
01:24:05,199 --> 01:24:10,600
回到 浏览器这里 让 我过去 

2297
01:24:07,750 --> 01:24:12,940
并做 现在这样的问题 

2298
01:24:10,600 --> 01:24:17,469
标记Q等于Brian交叉我的手指 

2299
01:24:12,940 --> 01:24:24,370
蒂姆之前没关系 ，我做了什么 

2300
01:24:17,469 --> 01:24:27,730
错在这里我做了什么错在这里这 

2301
01:24:24,370 --> 01:24:31,540
是微妙的，我们正在 为它 看到 它 

2302
01:24:27,730 --> 01:24:33,730
第一次它认为有一个专栏 

2303
01:24:31,540 --> 01:24:35,679
叫Brian， 但为什么会 这么想呢 

2304
01:24:33,730 --> 01:24:38,800
以及我已经有效完成的工作 

2305
01:24:35,679 --> 01:24:41,380
在这个布莱恩不是续集中的关键词 

2306
01:24:38,800 --> 01:24:43,510
因为它是一个真正的字符串 

2307
01:24:41,380 --> 01:24:45,850
我正在与我真正需要的东西进行比较

2308
01:24:43,510 --> 01:24:47,530
要做的就是这个续集 

2309
01:24:45,850 --> 01:24:49,300
精简版会觉得 它像 

2310
01:24:47,530 --> 01:24:51,460
列的名称或我预先的东西 

2311
01:24:49,300 --> 01:24:53,140
创建， 所以我们必须解决这个问题 

2312
01:24:51,460 --> 01:24:55,810
但是没关系，我可以把报价 

2313
01:24:53,140 --> 01:24:58,690
但我应该把Q放在那里

2314
01:24:55,810 --> 01:25:02,020
在报价中让我们保存这个回去 

2315
01:24:58,690 --> 01:25:04,330
浏览器加载 和我们走 

2316
01:25:02,020 --> 01:25:06,310
现在我们有 Brian和的 功能 

2317
01:25:04,330 --> 01:25:08,080
所以用这个基本的构建块是什么

2318
01:25:06,310 --> 01:25:09,460
我们已经在续集中做得很好，我们有 

2319
01:25:08,080 --> 01:25:11,020
我们可以使用的几个命令

2320
01:25:09,460 --> 01:25:13,570
创造一个坦率地得到的表 

2321
01:25:11,020 --> 01:25:15,219
通过打字输出单调乏味我自己 倾向于 

2322
01:25:13,570 --> 01:25:16,630
使用和推荐PHP litem和just 

2323
01:25:15,219 --> 01:25:18,880
创建你的表并让它继续下去 

2324
01:25:16,630 --> 01:25:20,380
但是你可以手动使用 

2325
01:25:18,880 --> 01:25:23,679
续集Lite通过你的PHP文件

2326
01:25:20,380 --> 01:25:25,420
插入或更新， 删除或选择 

2327
01:25:23,679 --> 01:25:27,130
一旦信息实际上 是 在 

2328
01:25:25,420 --> 01:25:28,870
数据库，这是非常强大 但 

2329
01:25:27,130 --> 01:25:31,480
一旦你这样做，你现在可以使用 它 

2330
01:25:28,870 --> 01:25:33,460
新语言续集的新语法相同

2331
01:25:31,480 --> 01:25:35,890
将其作为带有字符串的输入传递

2332
01:25:33,460 --> 01:25:38,170
到我们的执行功能，现在开始 

2333
01:25:35,890 --> 01:25:40,480
从您的网站中提取您想要的任何数据 

2334
01:25:38,170 --> 01:25:41,890
数据库上周将是CSV文件 

2335
01:25:40,480 --> 01:25:43,750
如果你想这样做，你必须 这样做 

2336
01:25:41,890 --> 01:25:45,550
打开CSV文件使用for循环 

2337
01:25:43,750 --> 01:25:47,620
迭代它查看每一列 

2338
01:25:45,550 --> 01:25:49,090
在行中为您的数据然后传入和

2339
01:25:47,620 --> 01:25:50,920
这没关系，这是正确的 

2340
01:25:49,090 --> 01:25:52,540
糟糕，但这很乏味， 而你却是 

2341
01:25:50,920 --> 01:25:54,280
一次又一次地重新发明轮子 

2342
01:25:52,540 --> 01:25:56,440
而且没有内置过滤器

2343
01:25:54,280 --> 01:25:59,050
现在有本身的续集 ，所以你 

2344
01:25:56,440 --> 01:26:00,940
有一个更复杂的工具在你的 

2345
01:25:59,050 --> 01:26:05,230
工具包 可以说与哪个解决 

2346
01:26:00,940 --> 01:26:08,360
任何问题同样的问题 

2347
01:26:05,230 --> 01:26:11,159
那么这个技术 

2348
01:26:08,360 --> 01:26:13,739
好吧，让我们看看更大的 

2349
01:26:11,159 --> 01:26:15,000
数据库，看看我们可以去哪里

2350
01:26:13,739 --> 01:26:16,860
如果你继续上课，那就这样吧 

2351
01:26:15,000 --> 01:26:18,300
网站你会看到一个更大的数据库 

2352
01:26:16,860 --> 01:26:20,219
这实际上有多个 

2353
01:26:18,300 --> 01:26:21,780
格式续集Lite我们将在一个 

2354
01:26:20,219 --> 01:26:23,040
此刻也是谷歌电子表格 

2355
01:26:21,780 --> 01:26:24,719
因为坦率地说它更令人愉快 

2356
01:26:23,040 --> 01:26:27,360
喜欢看你的行和列 

2357
01:26:24,719 --> 01:26:29,760
一个GUI而不是必然的 

2358
01:26:27,360 --> 01:26:31,469
文件本身所以这恰好 是 免费的 

2359
01:26:29,760 --> 01:26:33,659
和开源示例 数据库一样 

2360
01:26:31,469 --> 01:26:36,150
几年前有些人拿走了他的实际

2361
01:26:33,659 --> 01:26:36,630
iTunes数据库他所有的音乐 

2362
01:26:36,150 --> 01:26:38,310
买

2363
01:26:36,630 --> 01:26:40,949
他写了一个喜欢分析的程序

2364
01:26:38,310 --> 01:26:42,659
苹果文件格式在iTunes中提取 

2365
01:26:40,949 --> 01:26:44,640
所有似乎 存储的数据

2366
01:26:42,659 --> 01:26:46,080
关于他我认为是故事而且是公正的 

2367
01:26:44,640 --> 01:26:48,090
将其 作为样本 公开发布 

2368
01:26:46,080 --> 01:26:50,280
数据库中的学生和教师 

2369
01:26:48,090 --> 01:26:51,770
只是用来操纵数据， 但是什么 

2370
01:26:50,280 --> 01:26:54,300
有趣的 是，这个数据库 

2371
01:26:51,770 --> 01:26:56,100
展示了其他一些原则 

2372
01:26:54,300 --> 01:27:00,659
我们真的没有涉及过 

2373
01:26:56,100 --> 01:27:02,699
例如，如果我 再次 存储 和 

2374
01:27:00,659 --> 01:27:05,159
所有这些学生都是 

2375
01:27:02,699 --> 01:27:08,010
注册frosh IMS 你是做什么的 

2376
01:27:05,159 --> 01:27:09,330
开始在某些领域看到我 

2377
01:27:08,010 --> 01:27:11,610
有点懒，我没有打扰 

2378
01:27:09,330 --> 01:27:13,080
输入每个人的宿舍但是假设 

2379
01:27:11,610 --> 01:27:14,880
数百名学生拥有 

2380
01:27:13,080 --> 01:27:16,260
注册了很多他们的阵容 

2381
01:27:14,880 --> 01:27:18,239
将来自马修斯的一些人 

2382
01:27:16,260 --> 01:27:19,860
Pennypacker一些来自加拿大的一些来自 

2383
01:27:18,239 --> 01:27:21,900
焊缝及其他建筑物的串

2384
01:27:19,860 --> 01:27:23,760
校园 开始变得有点儿 

2385
01:27:21,900 --> 01:27:26,010
当你 看到马修斯 时，这很荒谬 

2386
01:27:23,760 --> 01:27:27,840
Matthews Matthews Matthews Matthews喜欢

2387
01:27:26,010 --> 01:27:29,460
如果有的话， 一百 次 或更多 次 

2388
01:27:27,840 --> 01:27:31,170
一百六十名新生有很多 

2389
01:27:29,460 --> 01:27:35,550
马修斯的孩子们很多 

2390
01:27:31,170 --> 01:27:37,170
用于存储em ATT的字节， 而不是 

2391
01:27:35,550 --> 01:27:38,610
知道它并不 重要 

2392
01:27:37,170 --> 01:27:40,290
拼写了很多字节 

2393
01:27:38,610 --> 01:27:43,140
实际上再次存储在您的数据库中 

2394
01:27:40,290 --> 01:27:44,520
一次又一次地感觉就像那里 

2395
01:27:43,140 --> 01:27:46,350
要 分解出 的机会 

2396
01:27:44,520 --> 01:27:47,790
共同点和人类的共同点 

2397
01:27:46,350 --> 01:27:49,800
一旦他们认识到数据库

2398
01:27:47,790 --> 01:27:51,540
数据中的重复 模式相同 

2399
01:27:49,800 --> 01:27:53,880
一而再，再而再混账串

2400
01:27:51,540 --> 01:27:58,170
你 现在 知道什么而不是使用 m8 

2401
01:27:53,880 --> 01:28:04,350
重要的是 8字节的 WS 或 

2402
01:27:58,170 --> 01:28:06,630
p en 和y pa CK e R是 11然后我们 

2403
01:28:04,350 --> 01:28:07,830
有很多字节被再次使用

2404
01:28:06,630 --> 01:28:08,610
一次 又一次地存储所有这些 

2405
01:28:07,830 --> 01:28:10,320
宿舍，你知道吗 

2406
01:28:08,610 --> 01:28:12,870
什么比11个字节或8个字节更好

2407
01:28:10,320 --> 01:28:15,570
让我们使用 INT 或让我们使用它 

2408
01:28:12,870 --> 01:28:17,580
一个小的int 2个字节或4个字节 

2409
01:28:15,570 --> 01:28:19,989
代表宿舍，而不是存储 

2410
01:28:17,580 --> 01:28:21,940
马修斯让我们只存储数字10 

2411
01:28:19,989 --> 01:28:24,400
而不是Pennypacker让我们只是 

2412
01:28:21,940 --> 01:28:27,520
使用一些存储数字11 

2413
01:28:24,400 --> 01:28:29,530
字节但更少，因此节省 

2414
01:28:27,520 --> 01:28:32,020
从长远来看，这是多少字节

2415
01:28:29,530 --> 01:28:33,910
数据库演示就是这样 

2416
01:28:32,020 --> 01:28:36,550
当然，当涉及 到的原则

2417
01:28:33,910 --> 01:28:38,770
音乐，艺术家 有多张专辑 

2418
01:28:36,550 --> 01:28:40,420
而且艺术家有多首歌曲 

2419
01:28:38,770 --> 01:28:42,040
在 音乐剧中可能有点傻 

2420
01:28:40,420 --> 01:28:43,810
用于存储相册名称的数据库

2421
01:28:42,040 --> 01:28:46,090
一而再， 再而连连 

2422
01:28:43,810 --> 01:28:47,950
所有10或 12或20首曲目或歌曲 

2423
01:28:46,090 --> 01:28:50,469
那个特别的专辑是什么呢 

2424
01:28:47,950 --> 01:28:52,390
我在这里做过这个通知的人 

2425
01:28:50,469 --> 01:28:54,250
一大堆 床单 或数据库 

2426
01:28:52,390 --> 01:28:56,140
说这些都是表格和通知 

2427
01:28:54,250 --> 01:28:57,820
这些表有列和 

2428
01:28:56,140 --> 01:29:01,390
请注意这些列是专辑ID 

2429
01:28:57,820 --> 01:29:03,310
在标题中的专辑表专辑ID 但是 

2430
01:29:01,390 --> 01:29:07,090
注意他非常聪明地做了什么

2431
01:29:03,310 --> 01:29:08,560
这个领域的艺术家ID艺术家或歌手 

2432
01:29:07,090 --> 01:29:10,780
他们的名字上有很多歌

2433
01:29:08,560 --> 01:29:12,700
最后，所以他分配了 每一个 

2434
01:29:10,780 --> 01:29:14,710
他们独特的价值还是Apple在iTunes中所做的

2435
01:29:12,700 --> 01:29:17,620
在引擎盖下面， 我怎么知道 

2436
01:29:14,710 --> 01:29:19,300
这个艺术家的名字是什么？ 

2437
01:29:17,620 --> 01:29:20,590
想出这个 我的意思不是那个 

2438
01:29:19,300 --> 01:29:24,370
有趣的 我们人类知道 的 

2439
01:29:20,590 --> 01:29:27,730
艺术家身份证号码 二，这 就是什么 

2440
01:29:24,370 --> 01:29:29,440
是的我们需要 另一张桌子 

2441
01:29:27,730 --> 01:29:31,270
这边的 艺术家 就 这么说吧 

2442
01:29:29,440 --> 01:29:32,830
我 继续前进 ，看 那里，所以如果我想 

2443
01:29:31,270 --> 01:29:34,900
看看让我们看看有 摇滚乐 

2444
01:29:32,830 --> 01:29:37,719
艺术家一号让我们去找 艺术家 

2445
01:29:34,900 --> 01:29:40,360
表并且结果 是频段的 交流/直流 

2446
01:29:37,719 --> 01:29:42,310
两个创建， 现在我们已经添加了一个步骤 

2447
01:29:40,360 --> 01:29:44,020
这可能是我们的成本 

2448
01:29:42,310 --> 01:29:45,880
一点点时间，但它会节省 一个 

2449
01:29:44,020 --> 01:29:47,950
如果我不存储 ，从长远来看空间

2450
01:29:45,880 --> 01:29:49,870
虽然ac / dc不是，但是很长的艺术家名字

2451
01:29:47,950 --> 01:29:51,520
非常长，一次又一次

2452
01:29:49,870 --> 01:29:53,410
现在哪个更好， 这是一个 交易 

2453
01:29:51,520 --> 01:29:55,180
你更浪费了吗？ 

2454
01:29:53,410 --> 01:29:58,120
空间和存储在一起 或 

2455
01:29:55,180 --> 01:29:59,770
你喜欢以节省空间和 公正 

2456
01:29:58,120 --> 01:30:01,300
花更多的时间加入 

2457
01:29:59,770 --> 01:30:03,640
数据重新组合在一起， 但它会是 

2458
01:30:01,300 --> 01:30:05,469
如果我现在想要制作，真的很烦人 

2459
01:30:03,640 --> 01:30:07,480
一个网站，显示 我的名字 

2460
01:30:05,469 --> 01:30:09,370
我在数据库中的歌曲和 

2461
01:30:07,480 --> 01:30:10,989
他们的艺术家更别说 专辑 

2462
01:30:09,370 --> 01:30:12,520
更多的是标题 

2463
01:30:10,989 --> 01:30:14,380
轨道等等就像那样 

2464
01:30:12,520 --> 01:30:17,140
三个查询就像选择一样 

2465
01:30:14,380 --> 01:30:19,840
专辑选择艺术家选择 的 

2466
01:30:17,140 --> 01:30:22,120
标题但 没有续集你可以 

2467
01:30:19,840 --> 01:30:24,700
完全崩溃， 因为通知 

2468
01:30:22,120 --> 01:30:26,950
在这张表中， 艺术家有一个 

2469
01:30:24,700 --> 01:30:28,870
名为艺术家ID的列，即数字 

2470
01:30:26,950 --> 01:30:31,030
并注意，如果你种 这个 图片 

2471
01:30:28,870 --> 01:30:32,800
就像指尖在这里让我们一样 

2472
01:30:31,030 --> 01:30:33,699
提出比喻代表

2473
01:30:32,800 --> 01:30:36,340
艺术家ID 

2474
01:30:33,699 --> 01:30:38,920
如果我进入专辑现在注意到 我们 

2475
01:30:36,340 --> 01:30:41,590
有专辑ID和标题， 但我们也有 

2476
01:30:38,920 --> 01:30:45,280
艺术家ID，如果你想象这些 

2477
01:30:41,590 --> 01:30:48,130
两个表共享这个常见的 这个 

2478
01:30:45,280 --> 01:30:50,500
如果我们有缝合的话，常见的列怎么样 

2479
01:30:48,130 --> 01:30:52,090
他们在一起排队等候 

2480
01:30:50,500 --> 01:30:53,770
左边的另一个 在那里 

2481
01:30:52,090 --> 01:30:56,230
重建所有信息 

2482
01:30:53,770 --> 01:30:58,090
并根据需要复制它， 以便 我 

2483
01:30:56,230 --> 01:31:00,340
回到专辑和标题 

2484
01:30:58,090 --> 01:31:03,219
而艺术家我怎么能表达 

2485
01:31:00,340 --> 01:31:05,890
那么让我继续 进入cs50 IDE 

2486
01:31:03,219 --> 01:31:08,199
我有这份文件的副本让我 

2487
01:31:05,890 --> 01:31:12,699
从早先关闭我的所有标签 然后去 

2488
01:31:08,199 --> 01:31:17,320
进入这个名为讲义 dB和 文件的文件 

2489
01:31:12,699 --> 01:31:19,270
PHP中的演讲DB点亮了男人会看到 

2490
01:31:17,320 --> 01:31:20,890
所有这些表和我字面意思

2491
01:31:19,270 --> 01:31:22,570
刚把它导入续集 灯 

2492
01:31:20,890 --> 01:31:24,489
你会看到所有这些相同的表格 

2493
01:31:22,570 --> 01:31:26,020
像以前一样浏览相册 ， 我们 只是 

2494
01:31:24,489 --> 01:31:27,670
查看相同数据的不同格式 

2495
01:31:26,020 --> 01:31:28,660
它与谷歌的数据相同 

2496
01:31:27,670 --> 01:31:30,699
电子表格更多

2497
01:31:28,660 --> 01:31:34,469
用户友好，让我继续 前进 

2498
01:31:30,699 --> 01:31:40,540
我当然可以 从中选择明星 

2499
01:31:34,469 --> 01:31:43,000
专辑，我们的艺术家ID等于 一个 

2500
01:31:40,540 --> 01:31:45,010
取回所有cdc的专辑 和 

2501
01:31:43,000 --> 01:31:47,080
确实在这里， 我有两个他们有 

2502
01:31:45,010 --> 01:31:48,820
那些即将摇滚的人我们向你致敬 

2503
01:31:47,080 --> 01:31:51,070
让他们有两个摇滚乐吧 

2504
01:31:48,820 --> 01:31:54,850
注意我回来的行 只包含 

2505
01:31:51,070 --> 01:31:56,170
什么信息相册ID标题 一个 

2506
01:31:54,850 --> 01:31:58,239
艺术家ID 

2507
01:31:56,170 --> 01:32:00,310
我只知道这是一个人类哦 

2508
01:31:58,239 --> 01:32:02,350
她 是 CD C的专辑，但如果我想要的话 

2509
01:32:00,310 --> 01:32:04,330
好好知道 我看到那个艺术家ID 

2510
01:32:02,350 --> 01:32:06,370
是一个 很好，让我开放 

2511
01:32:04,330 --> 01:32:11,080
像这里的另一个标签，现在让我 

2512
01:32:06,370 --> 01:32:14,410
从艺术家 中选择艺术家ID的明星

2513
01:32:11,080 --> 01:32:15,820
等于一个，如果我想学习 

2514
01:32:14,410 --> 01:32:18,550
那个 艺术家的 事情 让我走了 

2515
01:32:15,820 --> 01:32:20,710
提前和缩小点击go and okay now 

2516
01:32:18,550 --> 01:32:23,739
我得到了交流/直流，现在我很好 

2517
01:32:20,710 --> 01:32:25,510
有两个结果这两组 行 

2518
01:32:23,739 --> 01:32:27,340
像我现在只是 创造 一样愚蠢 

2519
01:32:25,510 --> 01:32:29,800
由于不得不 返回自己的工作

2520
01:32:27,340 --> 01:32:32,350
值我可以调用DB执行两次但是 

2521
01:32:29,800 --> 01:32:34,660
它有一个更好的方式来制作续集 

2522
01:32:32,350 --> 01:32:36,460
允许您只使用连接表

2523
01:32:34,660 --> 01:32:37,750
续集本身所以我要继续 前进 

2524
01:32:36,460 --> 01:32:43,410
这样做我会继续 选择 

2525
01:32:37,750 --> 01:32:47,559
专辑中的明星， 也来自艺术家 

2526
01:32:43,410 --> 01:32:49,719
专辑 艺术家ID 

2527
01:32:47,559 --> 01:32:53,679
让我滚动到右边等于

2528
01:32:49,719 --> 01:32:56,170
艺术家点艺术家ID所以注意我 

2529
01:32:53,679 --> 01:32:59,800
说从两张桌子中选择一切

2530
01:32:56,170 --> 01:33:02,920
但只有专辑表才能这样做

2531
01:32:59,800 --> 01:33:05,710
艺术家ID列具有相同的值 

2532
01:33:02,920 --> 01:33:07,179
艺术家表格 艺术家ID列 

2533
01:33:05,710 --> 01:33:08,619
这就是缝合 

2534
01:33:07,179 --> 01:33:11,050
比喻如果我的手指在一起 

2535
01:33:08,619 --> 01:33:14,710
如果我去，寻找那个共同的专栏 

2536
01:33:11,050 --> 01:33:16,090
提前点击 哇看看我的情况 

2537
01:33:14,710 --> 01:33:18,670
只是建造它的很多的 

2538
01:33:16,090 --> 01:33:21,730
信息， 但我有专辑ID和 

2539
01:33:18,670 --> 01:33:24,429
标题我还有艺术家ID，但我有 

2540
01:33:21,730 --> 01:33:26,440
那个艺术家的名字就这样 

2541
01:33:24,429 --> 01:33:28,780
如果你现在让你的思绪徘徊吧 

2542
01:33:26,440 --> 01:33:30,219
回到PHP的Python代码哦 

2543
01:33:28,780 --> 01:33:32,079
现在可以得到一大堆行 

2544
01:33:30,219 --> 01:33:34,000
包含我关心的一切 

2545
01:33:32,079 --> 01:33:36,309
一次我不需要选择 查询 我 

2546
01:33:34,000 --> 01:33:38,199
我可以用这种方式加入这些表格

2547
01:33:36,309 --> 01:33:39,730
结果非常故意使用加入

2548
01:33:38,199 --> 01:33:41,949
有另一种方式 来表达 

2549
01:33:39,730 --> 01:33:43,960
同样的事情，而不是使用该逗号 

2550
01:33:41,949 --> 01:33:49,380
语法我做了你也可以看到这个 

2551
01:33:43,960 --> 01:33:56,320
从艺术家加入专辑中选择明星

2552
01:33:49,380 --> 01:33:59,619
艺术家 点艺术家ID等于让我 

2553
01:33:56,320 --> 01:34:01,539
滚动专辑点艺术家ID 这是 

2554
01:33:59,619 --> 01:34:02,679
会有完全相同的效果， 但 你 

2555
01:34:01,539 --> 01:34:04,030
可能只是发现 它读了一点 

2556
01:34:02,679 --> 01:34:06,849
更直观地选择 

2557
01:34:04,030 --> 01:34:08,710
从加入的结果来看 

2558
01:34:06,849 --> 01:34:11,230
这两个表你想如何加入 

2559
01:34:08,710 --> 01:34:13,929
他们很好地加入他们的平等 

2560
01:34:11,230 --> 01:34:15,880
这只是另一种 表达 方式 

2561
01:34:13,929 --> 01:34:18,099
同样的想法， 如果我点击 去，我会回来 

2562
01:34:15,880 --> 01:34:19,239
最终的相同信息

2563
01:34:18,099 --> 01:34:21,550
加入我们是否有能力 

2564
01:34:19,239 --> 01:34:23,500
一方面它重新组装数据

2565
01:34:21,550 --> 01:34:25,900
只是做好规范化的好习惯 

2566
01:34:23,500 --> 01:34:27,550
数据库标识 具有批次的 列 

2567
01:34:25,900 --> 01:34:29,770
和很多很多冗余的 ，只有 

2568
01:34:27,550 --> 01:34:31,989
例如，存储该信息 一次 

2569
01:34:29,770 --> 01:34:34,119
如果你支持很多人，那就是cs50 

2570
01:34:31,989 --> 01:34:36,460
不同的用户每次 malin 或 

2571
01:34:34,119 --> 01:34:37,869
Brian或Veronica购买股票的感觉 

2572
01:34:36,460 --> 01:34:40,630
存储可能有点傻 

2573
01:34:37,869 --> 01:34:42,429
Malin或Brian或Veronica以及 

2574
01:34:40,630 --> 01:34:44,679
Netflix的符号和 数量 

2575
01:34:42,429 --> 01:34:45,849
分享我们其中一个买，因为男性和 

2576
01:34:44,679 --> 01:34:46,989
可以出现男性和男性和 男性的情节 

2577
01:34:45,849 --> 01:34:48,699
整个数据库以及如果 

2578
01:34:46,989 --> 01:34:50,199
我更改了我的 用户名 或我的名字或 

2579
01:34:48,699 --> 01:34:51,639
有人结婚， 因此 

2580
01:34:50,199 --> 01:34:54,190
变化就像你为什么创造那样 

2581
01:34:51,639 --> 01:34:55,869
为自己而烦恼而不是给予 

2582
01:34:54,190 --> 01:34:58,719
Brian和Veronica 以及我和大家 

2583
01:34:55,869 --> 01:35:01,120
否则一个唯一的ID ，当他们购买 

2584
01:34:58,719 --> 01:35:04,060
什么东西只是存储 他们 

2585
01:35:01,120 --> 01:35:05,470
或ID 或客户ID或您想要的 

2586
01:35:04,060 --> 01:35:08,260
去想 它只是 喜欢专辑 

2587
01:35:05,470 --> 01:35:09,670
ID 和艺术家ID 等标准化 

2588
01:35:08,260 --> 01:35:11,740
数据库就是要找到那些 

2589
01:35:09,670 --> 01:35:13,120
共性和将数据移入 

2590
01:35:11,740 --> 01:35:15,250
它自己的桌子 ，如果你关心 

2591
01:35:13,120 --> 01:35:17,350
重新加入它只是使用续集 

2592
01:35:15,250 --> 01:35:20,290
重建那个 数据 视图 ， 以便 

2593
01:35:17,350 --> 01:35:22,780
这么说我们还可以做什么 

2594
01:35:20,290 --> 01:35:24,490
事实证明，存在 

2595
01:35:22,780 --> 01:35:26,290
续集不仅仅是主 键，而且还有 

2596
01:35:24,490 --> 01:35:27,700
某些数据库中的唯一约束

2597
01:35:26,290 --> 01:35:29,110
在哪里可以指定 这不是我的 

2598
01:35:27,700 --> 01:35:31,120
主键，但我希望它是独一无二的 

2599
01:35:29,110 --> 01:35:33,280
你连接指定的东西 

2600
01:35:31,120 --> 01:35:34,930
应该被索引，所以事实证明 

2601
01:35:33,280 --> 01:35:36,190
如果你只知道你的领域有一个领域 

2602
01:35:34,930 --> 01:35:38,830
要能够数据库

2603
01:35:36,190 --> 01:35:40,900
搜索非常有效，你可以索引

2604
01:35:38,830 --> 01:35:42,160
它提前，你会看到或 能够 

2605
01:35:40,900 --> 01:35:43,900
如果你喜欢最后的话，这样做 

2606
01:35:42,160 --> 01:35:45,640
项目甚至 是下一个问题 

2607
01:35:43,900 --> 01:35:48,280
设置， 如果你喜欢，但这是什么 

2608
01:35:45,640 --> 01:35:52,300
如果我想去，就是这样的查询 

2609
01:35:48,280 --> 01:35:55,780
提前并搜索 例如let's 

2610
01:35:52,300 --> 01:35:58,480
说什么会是一个很好的例子 摇滚 

2611
01:35:55,780 --> 01:36:01,090
如果我愿意，我对摇滚感兴趣 

2612
01:35:58,480 --> 01:36:03,270
我可以说，进入我的续集标签

2613
01:36:01,090 --> 01:36:07,990
像这样的东西选择明星 

2614
01:36:03,270 --> 01:36:11,050
名字不等于但在哪里的专辑

2615
01:36:07,990 --> 01:36:13,180
名字就像，然后我会说摇滚 

2616
01:36:11,050 --> 01:36:14,770
但如果我想要任意数量的角色 

2617
01:36:13,180 --> 01:36:17,080
可以在我可以使用的那个词之前来 

2618
01:36:14,770 --> 01:36:18,730
a％和任意 数量的字符 

2619
01:36:17,080 --> 01:36:20,350
在我可以使用 ％之后这些就像 

2620
01:36:18,730 --> 01:36:23,380
你会想到大多数语言的通配符 

2621
01:36:20,350 --> 01:36:24,940
在续集中使用明星你使用％标志 但是 

2622
01:36:23,380 --> 01:36:28,480
它意味着同样的 事情 ，如果我去 

2623
01:36:24,940 --> 01:36:31,690
提前说现在我回来了 

2624
01:36:28,480 --> 01:36:32,800
我想错了演讲专辑哦标题 

2625
01:36:31,690 --> 01:36:37,060
是我想要的让我再试一次

2626
01:36:32,800 --> 01:36:39,460
抱歉 摇滚的标题让我走了 

2627
01:36:37,060 --> 01:36:41,980
提前点击去吧瞧这里 

2628
01:36:39,460 --> 01:36:44,320
数据库中的所有专辑 的 那 

2629
01:36:41,980 --> 01:36:47,050
现在有一个单词rock in 

2630
01:36:44,320 --> 01:36:49,330
除此之外还有很多其他内容 

2631
01:36:47,050 --> 01:36:50,560
其中的专辑，坦白说它很小 

2632
01:36:49,330 --> 01:36:52,300
尽管它有数百行 

2633
01:36:50,560 --> 01:36:54,160
也许几千行没有我们

2634
01:36:52,300 --> 01:36:56,170
人类真的会注意到它有多慢 

2635
01:36:54,160 --> 01:36:58,120
线性搜索，但如果你开始 有 

2636
01:36:56,170 --> 01:37:00,490
数千行几万的

2637
01:36:58,120 --> 01:37:02,170
行数百万行没有 

2638
01:37:00,490 --> 01:37:04,120
index意味着搜索某些东西

2639
01:37:02,170 --> 01:37:05,980
就像摇滚一样，从顶部开始 

2640
01:37:04,120 --> 01:37:08,350
搜索 每一次缝补场一路 

2641
01:37:05,980 --> 01:37:09,970
如果你改为n的底部大O. 

2642
01:37:08,350 --> 01:37:11,800
告诉数据库我知道我会 

2643
01:37:09,970 --> 01:37:14,080
请仔细搜索这个专栏 

2644
01:37:11,800 --> 01:37:14,980
为我索引它 来了 秘密 

2645
01:37:14,080 --> 01:37:17,050
酱续集

2646
01:37:14,980 --> 01:37:18,880
Oracle Microsoft Access等等 

2647
01:37:17,050 --> 01:37:20,739
他们将使用自己的知识分子 

2648
01:37:18,880 --> 01:37:22,900
财产建立了一些奇特的数据 

2649
01:37:20,739 --> 01:37:25,960
构造树或哈希表或 

2650
01:37:22,900 --> 01:37:30,070
无论在 内存中存储数据 

2651
01:37:25,960 --> 01:37:31,780
你恍恍惚惚地以那种格式恍惚

2652
01:37:30,070 --> 01:37:33,340
所以当你提出问题时 

2653
01:37:31,780 --> 01:37:36,430
喜欢向我展示像 摇滚一样的所有专辑 

2654
01:37:33,340 --> 01:37:38,680
他们可以 更快地 回答你 

2655
01:37:36,430 --> 01:37:40,060
时间比线性，这也是 什么 

2656
01:37:38,680 --> 01:37:43,630
你得到续集， 你没有 得到 

2657
01:37:40,060 --> 01:37:45,100
使用CSVs CSVs本质上只是线性的 

2658
01:37:43,630 --> 01:37:47,050
所以我们可以做得更好，但你

2659
01:37:45,100 --> 01:37:48,700
程序员必须帮助数据库和 

2660
01:37:47,050 --> 01:37:50,680
实际上不只是给它那些提示 

2661
01:37:48,700 --> 01:37:51,790
类型，但也提示这样和 

2662
01:37:50,680 --> 01:37:53,260
除此之外，还有一个概念 

2663
01:37:51,790 --> 01:37:55,360
外键如果你真的想要 

2664
01:37:53,260 --> 01:37:57,340
锁定下来的东西，你可以指定 ，如果 

2665
01:37:55,360 --> 01:37:59,800
你曾经在另一个人看到过专辑ID 

2666
01:37:57,340 --> 01:38:02,020
如果它是 主键， 则表示它 

2667
01:37:59,800 --> 01:38:03,910
专辑表的定义任何其他 

2668
01:38:02,020 --> 01:38:05,350
表它将被 称为外键 

2669
01:38:03,910 --> 01:38:08,170
因为它并不属于那里 

2670
01:38:05,350 --> 01:38:09,700
但它在其他地方引用了一个专栏 

2671
01:38:08,170 --> 01:38:11,800
所以有更多的技术 和 

2672
01:38:09,700 --> 01:38:13,239
词汇，欢迎你潜入 

2673
01:38:11,800 --> 01:38:14,650
你们中的许多人都会更深刻， 更有可能 

2674
01:38:13,239 --> 01:38:16,480
最终项目本质上是缺乏的

2675
01:38:14,650 --> 01:38:17,650
他们中的某些特征甚至是 

2676
01:38:16,480 --> 01:38:20,260
我们看到过 像自动递增的那些 

2677
01:38:17,650 --> 01:38:22,090
而不是 作为 续集甚至 无效 

2678
01:38:20,260 --> 01:38:23,890
有功能和数据科学家 

2679
01:38:22,090 --> 01:38:25,360
和统计学家一样，它非常有用 

2680
01:38:23,890 --> 01:38:27,100
能够做数学和总结 

2681
01:38:25,360 --> 01:38:29,080
数据就在续集中，没有 

2682
01:38:27,100 --> 01:38:31,060
编写Python代码或R 或任何东西 

2683
01:38:29,080 --> 01:38:32,920
其他内置于续集白和其他 

2684
01:38:31,060 --> 01:38:34,510
光和其他数据库或功能 

2685
01:38:32,920 --> 01:38:36,640
像这样平均计数的东西

2686
01:38:34,510 --> 01:38:38,650
获得最小/最大总和等等 所有 

2687
01:38:36,640 --> 01:38:40,810
你可以 免费获得很多 

2688
01:38:38,650 --> 01:38:42,870
数据库所需的 全部 内容 

2689
01:38:40,810 --> 01:38:46,000
Python 是这样的一条线 

2690
01:38:42,870 --> 01:38:48,910
但是 - 但是 - 但是有一些 

2691
01:38:46,000 --> 01:38:50,680
问题，让我们结束看看 

2692
01:38:48,910 --> 01:38:52,510
在两个基本问题和威胁

2693
01:38:50,680 --> 01:38:55,110
这 往往被低估了 

2694
01:38:52,510 --> 01:38:57,220
事实上，我们必须解决一个非常严重的问题 

2695
01:38:55,110 --> 01:38:59,530
我引入我的漏洞

2696
01:38:57,220 --> 01:39:03,520
非常自己的代码， 但首先是 这样 

2697
01:38:59,530 --> 01:39:06,040
在 您或您的 调查中称为竞争条件 

2698
01:39:03,520 --> 01:39:07,600
而是让我们看看 我们的想法 

2699
01:39:06,040 --> 01:39:10,150
回到学期 开始 

2700
01:39:07,600 --> 01:39:11,950
大多数 人都报名参加了github 

2701
01:39:10,150 --> 01:39:13,630
第一次 和 你在一起 

2702
01:39:11,950 --> 01:39:14,980
去了github.com 斜线报名 

2703
01:39:13,630 --> 01:39:16,300
那些不熟悉的github 是一个网站 

2704
01:39:14,980 --> 01:39:17,680
你可以在哪里保存和存储 

2705
01:39:16,300 --> 01:39:18,940
您编写的编程代码和 

2706
01:39:17,680 --> 01:39:21,100
想与他人合作 ， 并 

2707
01:39:18,940 --> 01:39:24,010
你选择了一个用户名让我继续 

2708
01:39:21,100 --> 01:39:25,540
并 尝试选择像 J 这样的用户名 

2709
01:39:24,010 --> 01:39:27,670
哈佛为约翰哈佛

2710
01:39:25,540 --> 01:39:28,900
注意到该网站立即 说 

2711
01:39:27,670 --> 01:39:30,400
用户名是 

2712
01:39:28,900 --> 01:39:31,780
没关系， 你可以 

2713
01:39:30,400 --> 01:39:33,970
可能猜猜这是怎么做的也许 是 

2714
01:39:31,780 --> 01:39:35,890
使用Ajax交谈的 小JavaScript 

2715
01:39:33,970 --> 01:39:37,900
服务器获得响应更改

2716
01:39:35,890 --> 01:39:39,340
HTML 或CSS或其他任何 可能的 

2717
01:39:37,900 --> 01:39:42,100
花一些时间将所有这些连接起来 

2718
01:39:39,340 --> 01:39:45,460
但这 可能是正在发生的事情 

2719
01:39:42,100 --> 01:39:48,490
让我尝试像一个很长的随机 

2720
01:39:45,460 --> 01:39:53,350
未采取 用户名 

2721
01:39:48,490 --> 01:39:54,400
嘿它可用但可能不是 

2722
01:39:53,350 --> 01:39:55,420
一件好事，我正在传播这个 

2723
01:39:54,400 --> 01:39:56,950
互联网， 因为如果我等了很长时间 

2724
01:39:55,420 --> 01:39:58,300
我敢打赌有人可以玩耍

2725
01:39:56,950 --> 01:40:00,940
原因只是注册这个，更不用说了 

2726
01:39:58,300 --> 01:40:03,250
这个 房间里的 任何人， 但你 刚刚告诉过 

2727
01:40:00,940 --> 01:40:05,290
我这是可用的 好那么好 ，我 

2728
01:40:03,250 --> 01:40:07,030
真的很兴奋我已经让 我的 用户名了 

2729
01:40:05,290 --> 01:40:08,860
我继续前进， 输入 我的电子邮件地址 

2730
01:40:07,030 --> 01:40:10,450
邮件和哈佛大学 ID是我的密码 

2731
01:40:08,860 --> 01:40:12,070
一二三四五需要几 

2732
01:40:10,450 --> 01:40:15,010
那里的时刻验证了我的帐户等等 

2733
01:40:12,070 --> 01:40:17,170
我点击提交，然后点击提交

2734
01:40:15,010 --> 01:40:20,040
我被告知暂时对不起 

2735
01:40:17,170 --> 01:40:22,120
用户名可能会发生 

2736
01:40:20,040 --> 01:40:23,770
是的，我的意思是，如果你们有人想要 

2737
01:40:22,120 --> 01:40:25,540
我搞成这个样子 ， 现在你会 

2738
01:40:23,770 --> 01:40:26,770
已注册该用户名和 

2739
01:40:25,540 --> 01:40:29,470
击打我， 以便当我 

2740
01:40:26,770 --> 01:40:31,690
点击加入我得到一个错误 

2741
01:40:29,470 --> 01:40:33,700
两种竞争条件的定义

2742
01:40:31,690 --> 01:40:35,440
人或两个用户或两台计算机或 

2743
01:40:33,700 --> 01:40:36,910
两个线程， 如果我们真的 回滚 

2744
01:40:35,440 --> 01:40:39,700
我们在讨论中对线程的讨论是 

2745
01:40:36,910 --> 01:40:42,280
试图粗略地做同样的事情

2746
01:40:39,700 --> 01:40:45,160
同时 ，如果这两 件事情 

2747
01:40:42,280 --> 01:40:46,660
螺纹或人类检查的状态 

2748
01:40:45,160 --> 01:40:48,970
变量，这是 一种 奇特的说法 

2749
01:40:46,660 --> 01:40:51,130
是他们都可以获得的用户名

2750
01:40:48,970 --> 01:40:53,080
回答 但后来有些人 

2751
01:40:51,130 --> 01:40:55,420
几秒钟后他们就成了一个 

2752
01:40:53,080 --> 01:40:57,400
根据 那里的 信息 作出决定 

2753
01:40:55,420 --> 01:40:59,020
是一个分秒的时间窗口

2754
01:40:57,400 --> 01:41:00,430
甚至几秒或几分钟的地方 

2755
01:40:59,020 --> 01:41:02,530
那个 变量的状态当然可以 

2756
01:41:00,430 --> 01:41:04,030
改变所以，如果你 现在 真的 

2757
01:41:02,530 --> 01:41:05,920
你的笔记本电脑类型很长 

2758
01:41:04,030 --> 01:41:08,770
我们所有人都可能是用户名 

2759
01:41:05,920 --> 01:41:10,270
告诉它像绿灯一样可用但是 

2760
01:41:08,770 --> 01:41:12,370
我们中只有一个 人真的 会得到 

2761
01:41:10,270 --> 01:41:13,900
它和那是因为一场比赛 

2762
01:41:12,370 --> 01:41:15,190
从字面上看，我们所有人都可以 

2763
01:41:13,900 --> 01:41:17,650
可能会竞相报名参加该 

2764
01:41:15,190 --> 01:41:19,840
价值，这是国家可以改变的时候

2765
01:41:17,650 --> 01:41:21,460
发生事情之间这是一件坏事 

2766
01:41:19,840 --> 01:41:24,250
因为它会产生你的数据 

2767
01:41:21,460 --> 01:41:26,350
容易受到某人的改变

2768
01:41:24,250 --> 01:41:28,210
不一定打算或如果 

2769
01:41:26,350 --> 01:41:29,920
数据库并不聪明 你可能 

2770
01:41:28,210 --> 01:41:31,750
做特别糟糕的事情ATMs或者 

2771
01:41:29,920 --> 01:41:34,630
这个典型的例子 ，如果你有一个 

2772
01:41:31,750 --> 01:41:36,160
恶意攻击者试图 登录 

2773
01:41:34,630 --> 01:41:37,570
比如一 两个银行账户 

2774
01:41:36,160 --> 01:41:39,070
物理机一次 ，现在有 

2775
01:41:37,570 --> 01:41:41,200
两张牌 两张两张 

2776
01:41:39,070 --> 01:41:42,280
笔记本电脑你能想象 他们 两人 

2777
01:41:41,200 --> 01:41:44,470
试图扣除像

2778
01:41:42,280 --> 01:41:46,960
来自同一账户的美元

2779
01:41:44,470 --> 01:41:49,090
因为 想象一个执行不力 

2780
01:41:46,960 --> 01:41:50,770
银行 网站 检查他们的数量 

2781
01:41:49,090 --> 01:41:52,960
斯大林的用户账户余额 

2782
01:41:50,770 --> 01:41:53,710
登录你有 100美元 的答案 吗？ 

2783
01:41:52,960 --> 01:41:56,230
是的 

2784
01:41:53,710 --> 01:41:58,270
也许两个网站都会说是的 

2785
01:41:56,230 --> 01:42:01,060
您可以扣除100美元，然后 输入 

2786
01:41:58,270 --> 01:42:02,320
瓦拉 你扣除100美元的用户得到它 

2787
01:42:01,060 --> 01:42:04,600
不知何故，因为它转移到一些 

2788
01:42:02,320 --> 01:42:06,640
其他账户， 但银行认为 

2789
01:42:04,600 --> 01:42:08,410
只有这样做， 一旦鸭子百 

2790
01:42:06,640 --> 01:42:10,750
但是你刚刚带走了200 

2791
01:42:08,410 --> 01:42:12,430
因为你有一个由 基于 的决定 

2792
01:42:10,750 --> 01:42:14,740
两个不同的答案相同 

2793
01:42:12,430 --> 01:42:16,990
线程或两个不同的程序或两个 

2794
01:42:14,740 --> 01:42:18,400
不同的电脑故事 很 长 

2795
01:42:16,990 --> 01:42:21,130
这 甚至可以在 现实世界中 发生 

2796
01:42:18,400 --> 01:42:24,190
一个例子我 顶 我的 顾问年 

2797
01:42:21,130 --> 01:42:25,540
以前这是假设你 和你的 

2798
01:42:24,190 --> 01:42:26,650
一个小宿舍冰箱和室友

2799
01:42:25,540 --> 01:42:30,550
你当然习惯了 

2800
01:42:26,650 --> 01:42:32,560
喝了很多牛奶等等 

2801
01:42:30,550 --> 01:42:34,210
冰箱已经用完了牛奶，你 来了 

2802
01:42:32,560 --> 01:42:35,530
回家 后阶级的第一个室友 

2803
01:42:34,210 --> 01:42:37,360
你意识到我真的 需要喝一杯 

2804
01:42:35,530 --> 01:42:38,950
牛奶 ，所以你检查冰箱 

2805
01:42:37,360 --> 01:42:40,330
什么都没有， 所以你关闭了 

2806
01:42:38,950 --> 01:42:42,820
冰箱，你走进 广场去 

2807
01:42:40,330 --> 01:42:44,410
到CVS 并 排队购买一些 

2808
01:42:42,820 --> 01:42:46,420
牛奶和你的另一个室友 

2809
01:42:44,410 --> 01:42:48,520
回家也 真的需要喝一杯 

2810
01:42:46,420 --> 01:42:51,190
他们检查牛奶的状态 

2811
01:42:48,520 --> 01:42:52,900
变量啊 没有牛奶关闭冰箱 

2812
01:42:51,190 --> 01:42:54,430
然后走路去喜欢 汤米的 

2813
01:42:52,900 --> 01:42:56,350
方便或附近的其他地方

2814
01:42:54,430 --> 01:42:58,540
并准备一些 你的 牛奶 

2815
01:42:56,350 --> 01:43:00,700
当然，那么这两个回家并最终

2816
01:42:58,540 --> 01:43:02,650
现在会发生什么该死的，现在你 有 

2817
01:43:00,700 --> 01:43:04,720
牛奶的两倍，你 知道 如果一个 

2818
01:43:02,650 --> 01:43:06,370
牛奶快速变质，所以现在这是 一个 

2819
01:43:04,720 --> 01:43:07,810
问题你有 一个非常糟糕的 问题 

2820
01:43:06,370 --> 01:43:10,090
牛肉的数量 是你可能的两倍

2821
01:43:07,810 --> 01:43:13,750
喝，但是它的起源是 什么 

2822
01:43:10,090 --> 01:43:17,050
问题从根本上说你已经离开 了 

2823
01:43:13,750 --> 01:43:20,380
什么， 但你需要它，但为什么我 

2824
01:43:17,050 --> 01:43:22,210
最终有两个没有右旗 

2825
01:43:20,380 --> 01:43:23,770
没有迹象表明没有共享

2826
01:43:22,210 --> 01:43:25,030
国家你们都检查了它的价值 

2827
01:43:23,770 --> 01:43:26,650
变量做出了决定 

2828
01:43:25,030 --> 01:43:28,510
独立就可以了，但状态 

2829
01:43:26,650 --> 01:43:30,190
该变量对 你们中的 一个改变

2830
01:43:28,510 --> 01:43:32,380
因为当你们其中一人回家的时候

2831
01:43:30,190 --> 01:43:34,150
后来人该死的 喜欢牛奶了 

2832
01:43:32,380 --> 01:43:35,830
已经补充了，你怎么样

2833
01:43:34,150 --> 01:43:37,810
在现实世界中解决这个问题怎么可能 

2834
01:43:35,830 --> 01:43:43,300
你避免了这个问题， 你刚 赢了 

2835
01:43:37,810 --> 01:43:45,550
永远不要为你的室友Mac做差事

2836
01:43:43,300 --> 01:43:47,770
是的牛奶购物清单 

2837
01:43:45,550 --> 01:43:49,180
被捕发展总是留言 

2838
01:43:47,770 --> 01:43:50,650
对，你可以通过法律传达

2839
01:43:49,180 --> 01:43:53,050
那些信息你可以更多 

2840
01:43:50,650 --> 01:43:55,240
大大地锁定冰箱

2841
01:43:53,050 --> 01:43:55,750
挂锁 的东西，所以你的室友 

2842
01:43:55,240 --> 01:43:57,400
能够

2843
01:43:55,750 --> 01:44:00,070
检查冰箱的状态 

2844
01:43:57,400 --> 01:44:01,450
当你走了， 因此没有做 

2845
01:44:00,070 --> 01:44:03,010
我们容易受到这种影响而且我用这个词 

2846
01:44:01,450 --> 01:44:04,930
故意锁定，因为在数据库中 

2847
01:44:03,010 --> 01:44:07,090
这就是他们解决这个问题的方法 

2848
01:44:04,930 --> 01:44:08,380
数据库中的功能称为锁或 

2849
01:44:07,090 --> 01:44:10,510
这个的发烧友版本被称为 

2850
01:44:08,380 --> 01:44:12,970
您可以保证的交易

2851
01:44:10,510 --> 01:44:15,370
一种名为de Missa tee的东西 

2852
01:44:12,970 --> 01:44:17,050
Adam Missa tee意味着你可以做多个 

2853
01:44:15,370 --> 01:44:19,120
事情背靠背没有 

2854
01:44:17,050 --> 01:44:22,060
在 的 情况下 被打断 所以 

2855
01:44:19,120 --> 01:44:23,680
银行也 使用是可能的续集 

2856
01:44:22,060 --> 01:44:25,570
我们 不会用更 微妙的语法 

2857
01:44:23,680 --> 01:44:26,980
潜入今天来解决这个问题

2858
01:44:25,570 --> 01:44:29,290
说你知道从下面开始的内容 

2859
01:44:26,980 --> 01:44:31,420
交易检查银行的状态

2860
01:44:29,290 --> 01:44:33,700
帐户扣除这笔 钱和 

2861
01:44:31,420 --> 01:44:36,550
现在提交结果，而我 

2862
01:44:33,700 --> 01:44:39,250
这样做可以 锁定其他所有人 

2863
01:44:36,550 --> 01:44:41,650
让任何 其他客户或任何其他用户 

2864
01:44:39,250 --> 01:44:44,170
完成那些触及的信息 

2865
01:44:41,650 --> 01:44:45,850
相同的数据，直到我完成长篇故事 

2866
01:44:44,170 --> 01:44:47,590
总之，你付出的代价 也许就是你 

2867
01:44:45,850 --> 01:44:49,090
字面上阻止你的室友 

2868
01:44:47,590 --> 01:44:50,710
进入冰箱 ，这很烦人 

2869
01:44:49,090 --> 01:44:52,510
或者你在阻止其他顾客 

2870
01:44:50,710 --> 01:44:54,220
从做交易这么有希望的 

2871
01:44:52,510 --> 01:44:56,410
电脑速度很快， 你很快 

2872
01:44:54,220 --> 01:44:59,440
在购物但你至少得到保证

2873
01:44:56,410 --> 01:45:01,150
你有原子性 没有操作可以 

2874
01:44:59,440 --> 01:45:03,790
插入你的序列 

2875
01:45:01,150 --> 01:45:06,160
你的室友或 一些人的行动 

2876
01:45:03,790 --> 01:45:07,570
其他计算机或威胁，所以这是一个 

2877
01:45:06,160 --> 01:45:10,120
我们 只是 数据库的问题

2878
01:45:07,570 --> 01:45:12,040
要穿过裙子和github可能 

2879
01:45:10,120 --> 01:45:13,300
如何很好地只是 不关心解决这个问题

2880
01:45:12,040 --> 01:45:14,710
可能我不知道会发生什么

2881
01:45:13,300 --> 01:45:16,900
如果 我们中的多个人试着我就会发生

2882
01:45:14,710 --> 01:45:18,550
猜测他们只会给n 减一 

2883
01:45:16,900 --> 01:45:20,380
我们的一条错误 消息说抱歉 

2884
01:45:18,550 --> 01:45:21,610
用户名不再可用 

2885
01:45:20,380 --> 01:45:23,380
关于这个，如果你曾经买过航空公司 

2886
01:45:21,610 --> 01:45:25,090
门票这是一个解决的问题 

2887
01:45:23,380 --> 01:45:26,680
如果，行业真的很烦人 

2888
01:45:25,090 --> 01:45:28,930
你只花了一个小时 的压力 

2889
01:45:26,680 --> 01:45:30,730
寻找一张好机票的价格

2890
01:45:28,930 --> 01:45:32,080
你 加入后 开始 退房 

2891
01:45:30,730 --> 01:45:33,400
五分钟到你的购物 车 

2892
01:45:32,080 --> 01:45:35,650
稍后您的姓名和电子邮件地址 

2893
01:45:33,400 --> 01:45:37,870
和信用卡号码 门票消失了 

2894
01:45:35,650 --> 01:45:39,400
那么他们经常给航空公司做些什么呢

2895
01:45:37,870 --> 01:45:40,780
你喜欢五分钟的 窗户和一些 

2896
01:45:39,400 --> 01:45:42,520
发烧友的网站向您展示 

2897
01:45:40,780 --> 01:45:44,170
时钟说我们保证这个

2898
01:45:42,520 --> 01:45:46,570
接下来的五分钟酒店可能会这样做 

2899
01:45:44,170 --> 01:45:48,730
到他们锁冰箱的地方 

2900
01:45:46,570 --> 01:45:50,440
你通过某种方式改变数据库 

2901
01:45:48,730 --> 01:45:52,480
说mmm没人能 买到这张票 

2902
01:45:50,440 --> 01:45:55,030
或者这个房间接下来的五分钟 

2903
01:45:52,480 --> 01:45:57,340
很像纸币或挂锁所以 

2904
01:45:55,030 --> 01:45:59,800
那些东西都在我们身边 

2905
01:45:57,340 --> 01:46:02,340
但是让我们看看最后一个例子 那 

2906
01:45:59,800 --> 01:46:05,680
最糟糕的威胁就是这个 

2907
01:46:02,340 --> 01:46:08,740
以前我允许自己搜索 

2908
01:46:05,680 --> 01:46:09,250
因此，Q等于Brian或Q等于David 

2909
01:46:08,740 --> 01:46:11,110
要么

2910
01:46:09,250 --> 01:46:12,520
或类似的 东西，我做了 什么 

2911
01:46:11,110 --> 01:46:15,220
信息很好，如果我们回到 

2912
01:46:12,520 --> 01:46:16,540
IDE并实际查看该文件 

2913
01:46:15,220 --> 01:46:19,960
申请PI 

2914
01:46:16,540 --> 01:46:23,410
我只是用F字符串格式化它

2915
01:46:19,960 --> 01:46:25,660
在这个续集字符串里面但是如果 

2916
01:46:23,410 --> 01:46:27,460
我的用户有点恶意 

2917
01:46:25,660 --> 01:46:29,380
假设 有人不 希望 

2918
01:46:27,460 --> 01:46:31,630
只是搜索布莱恩，但你知道什么 

2919
01:46:29,380 --> 01:46:37,750
假设他们做了类似我的查询的事情 

2920
01:46:31,630 --> 01:46:41,380
从注册人中删除我们很抱歉 

2921
01:46:37,750 --> 01:46:44,170
布莱恩的名字等于布莱恩的样子

2922
01:46:41,380 --> 01:46:47,170
现在这个 目前 无效 

2923
01:46:44,170 --> 01:46:49,150
因为这个字符串，而我当然 

2924
01:46:47,170 --> 01:46:52,240
允许键入它将获得 

2925
01:46:49,150 --> 01:46:54,190
插入 我的代码，但在错误 

2926
01:46:52,240 --> 01:46:55,630
逻辑上就像我要找的那样 

2927
01:46:54,190 --> 01:46:56,830
某人的名字叫做删除 

2928
01:46:55,630 --> 01:46:58,270
名称等于Brian的注册人

2929
01:46:56,830 --> 01:47:01,690
这只是荒谬的， 它会回归 

2930
01:46:58,270 --> 01:47:06,700
零结果，但如果我做了什么 

2931
01:47:01,690 --> 01:47:08,200
像这样我说Brian或删除 

2932
01:47:06,700 --> 01:47:10,150
来自我的注册人

2933
01:47:08,200 --> 01:47:12,730
完成本以为 程序员 

2934
01:47:10,150 --> 01:47:13,840
有，然后开始我自己的新思想或 

2935
01:47:12,730 --> 01:47:16,150
另一种方法是使用 

2936
01:47:13,840 --> 01:47:18,820
特殊 语法分号之类的东西 

2937
01:47:16,150 --> 01:47:21,820
这个长话短说，我可以设想一个 

2938
01:47:18,820 --> 01:47:23,350
完成人类的恶意输入

2939
01:47:21,820 --> 01:47:25,540
程序员思考并返回零 

2940
01:47:23,350 --> 01:47:28,510
行但顺便说一句也偷偷摸摸一个 

2941
01:47:25,540 --> 01:47:29,950
额外的流氓查询进入数据库

2942
01:47:28,510 --> 01:47:33,220
这就是所谓的 有续集 

2943
01:47:29,950 --> 01:47:37,540
注射攻击，如果你天真地和 

2944
01:47:33,220 --> 01:47:40,180
像我一样非常非常困扰 

2945
01:47:37,540 --> 01:47:41,950
永远不要做，你会 

2946
01:47:40,180 --> 01:47:45,070
这个攻击 很容易受到 攻击 

2947
01:47:41,950 --> 01:47:46,960
因为你是盲目插入的 

2948
01:47:45,070 --> 01:47:48,490
用户 输入您所在的字符串 

2949
01:47:46,960 --> 01:47:50,980
然后传递到数据库， 这是一个 

2950
01:47:48,490 --> 01:47:53,560
许多应用程序的基本缺陷

2951
01:47:50,980 --> 01:47:55,840
你需要很多语言 

2952
01:47:53,560 --> 01:47:57,460
如果不信任你的用户则无关紧要

2953
01:47:55,840 --> 01:47:59,290
它只是校园里的学生 或者 是校园里的学生 

2954
01:47:57,460 --> 01:48:01,720
只为你和你的朋友永远不会 

2955
01:47:59,290 --> 01:48:03,100
永远信任用户输入， 因为它们 

2956
01:48:01,720 --> 01:48:04,180
谁家会想念式的东西， 

2957
01:48:03,100 --> 01:48:06,280
什么东西会出错或你是 

2958
01:48:04,180 --> 01:48:07,420
要去有 像 一个坏苹果 试图 

2959
01:48:06,280 --> 01:48:09,430
入侵你的网站 或你 的网站 

2960
01:48:07,420 --> 01:48:11,800
通过尝试这些类型 的 应用程序 

2961
01:48:09,430 --> 01:48:13,780
命令，你必须总是写 

2962
01:48:11,800 --> 01:48:16,060
防守代码所以如何做到这一点

2963
01:48:13,780 --> 01:48:17,710
事实证明，有很多方法

2964
01:48:16,060 --> 01:48:19,840
什么是危险的东西 

2965
01:48:17,710 --> 01:48:21,610
就像我输入的那样是它的 

2966
01:48:19,840 --> 01:48:22,969
例如分号，它是

2967
01:48:21,610 --> 01:48:25,430
引号过 

2968
01:48:22,969 --> 01:48:27,920
其他地方， 所以最安全的事情 是 

2969
01:48:25,430 --> 01:48:29,810
无论用户输入 什么 类型逃脱 

2970
01:48:27,920 --> 01:48:31,040
你可以使用我们看到的特殊语法的东西

2971
01:48:29,810 --> 01:48:32,750
这在看到一般放一个

2972
01:48:31,040 --> 01:48:34,670
在某事前面的反斜杠意味着 

2973
01:48:32,750 --> 01:48:36,920
没有让它有默认值 

2974
01:48:34,670 --> 01:48:38,300
行为，而不是特殊对待它， 

2975
01:48:36,920 --> 01:48:40,460
你可以在Python中使用特殊代码

2976
01:48:38,300 --> 01:48:42,140
只是说 删除任何坏人物 

2977
01:48:40,460 --> 01:48:44,150
或坦率地替换你的东西

2978
01:48:42,140 --> 01:48:45,739
可能去过你所在的网站 

2979
01:48:44,150 --> 01:48:47,780
被告知抱歉你不能使用 它 

2980
01:48:45,739 --> 01:48:49,280
密码中的字符或对不起 您 

2981
01:48:47,780 --> 01:48:51,230
不能在 你的 用户名中 使用它 

2982
01:48:49,280 --> 01:48:53,030
只是愚蠢的 是懒惰的方法 

2983
01:48:51,230 --> 01:48:55,430
对此没有理由阻止 

2984
01:48:53,030 --> 01:48:57,140
用户可以输入任何字符 

2985
01:48:55,430 --> 01:48:59,060
他们的键盘可能是他们的密码 

2986
01:48:57,140 --> 01:49:00,620
甚至他们的用户名 也是 一种 

2987
01:48:59,060 --> 01:49:02,480
懒散的 防守方式

2988
01:49:00,620 --> 01:49:05,000
说我 不 信任任何 百分号 

2989
01:49:02,480 --> 01:49:07,699
任何分号 - 是任何撇号 

2990
01:49:05,000 --> 01:49:09,350
而只是逃避事情，但它是愚蠢的

2991
01:49:07,699 --> 01:49:11,900
我们所有人都在这个房间里写下我们的 

2992
01:49:09,350 --> 01:49:13,370
自己的代码用于scaping用户输入 或 

2993
01:49:11,900 --> 01:49:15,340
擦洗它被称为或 

2994
01:49:13,370 --> 01:49:17,960
消毒它，因为它被称为相同的东西

2995
01:49:15,340 --> 01:49:19,280
为什么我们现在不使用图书馆 

2996
01:49:17,960 --> 01:49:20,600
那里有许多赋予 图书馆的库 

2997
01:49:19,280 --> 01:49:23,390
我们使用目前 的一个 

2998
01:49:20,600 --> 01:49:26,030
是CS50 S和执行功能 不 

2999
01:49:23,390 --> 01:49:28,160
这对我们而不是 使用f字符串 

3000
01:49:26,030 --> 01:49:30,500
你不应该像这样使用它

3001
01:49:28,160 --> 01:49:32,390
如果你愿意，应该这样做

3002
01:49:30,500 --> 01:49:34,250
插上 一个占位符值续集 

3003
01:49:32,390 --> 01:49:36,050
查询你字面上使用标准 

3004
01:49:34,250 --> 01:49:37,730
我们采用的惯例到哪里 

3005
01:49:36,050 --> 01:49:39,530
你只需输入一个变量 名称 

3006
01:49:37,730 --> 01:49:41,390
在它前面有一个冒号，它 可以 

3007
01:49:39,530 --> 01:49:43,010
它 可以 是 任何东西 Q它可以是X它 

3008
01:49:41,390 --> 01:49:44,989
没关系，但你想插上 

3009
01:49:43,010 --> 01:49:47,210
在某些价值，所以我会打电话给它 

3010
01:49:44,989 --> 01:49:49,820
按惯例命名然后关闭你的 

3011
01:49:47,210 --> 01:49:51,890
引用并完成你的 想法然后 

3012
01:49:49,820 --> 01:49:56,840
你继续并传递 实际 

3013
01:49:51,890 --> 01:49:59,330
值名称等于Q，现在 你有 

3014
01:49:56,840 --> 01:50:02,030
动态构造续集字符串

3015
01:49:59,330 --> 01:50:04,160
使用不是蟒蛇的占位符 

3016
01:50:02,030 --> 01:50:06,350
自己的大括号占位符这是一个 

3017
01:50:04,160 --> 01:50:08,960
你说的特别续集大会 

3018
01:50:06,350 --> 01:50:12,890
在这里插入值将插入什么值 

3019
01:50:08,960 --> 01:50:14,630
在这个名字值 Q无论人类 

3020
01:50:12,890 --> 01:50:16,880
键入并执行我们的操作

3021
01:50:14,630 --> 01:50:18,560
功能你会做的是所有 的 

3022
01:50:16,880 --> 01:50:20,900
花哨的反向削减和所有的 

3023
01:50:18,560 --> 01:50:22,760
逃避并保护你免受伤害 

3024
01:50:20,900 --> 01:50:23,120
用户数据， 这 是多么真实的 简单 

3025
01:50:22,760 --> 01:50:24,710
它是

3026
01:50:23,120 --> 01:50:27,350
不必是CS50库，这是 

3027
01:50:24,710 --> 01:50:29,600
在所有语言中都很常见但也是如此 

3028
01:50:27,350 --> 01:50:31,429
很少有人知道 它并使用它 

3029
01:50:29,600 --> 01:50:32,750
所以有一半时间你会读到 一些 

3030
01:50:31,429 --> 01:50:34,760
数据库被黑客入侵或您的数据 

3031
01:50:32,750 --> 01:50:36,449
被盗 是因为 愚蠢 

3032
01:50:34,760 --> 01:50:39,030
疏忽 

3033
01:50:36,449 --> 01:50:40,889
所以只需 使用库并逃脱 

3034
01:50:39,030 --> 01:50:42,659
用户输入我们 现在可以看到更多 

3035
01:50:40,889 --> 01:50:45,090
具体都在的本科生

3036
01:50:42,659 --> 01:50:46,860
房间肯定登录到其他

3037
01:50:45,090 --> 01:50:47,940
耶鲁的网站或哈佛的网站

3038
01:50:46,860 --> 01:50:49,679
看起来像这样的东西

3039
01:50:47,940 --> 01:50:51,389
在这里，系统会提示您输入登录 名 

3040
01:50:49,679 --> 01:50:53,699
和你的密码或你的哈佛钥匙或 

3041
01:50:51,389 --> 01:50:55,559
好像 这 是如何 生效的 

3042
01:50:53,699 --> 01:50:56,400
如果 我输入 我的真实条款 

3043
01:50:55,559 --> 01:50:58,619
电邮地址 

3044
01:50:56,400 --> 01:51:01,380
但是这样奇怪的语法就是这样 的 

3045
01:50:58,619 --> 01:51:03,780
看一个示例报价或报价 

3046
01:51:01,380 --> 01:51:05,550
unquote one等于引用一个通知它 

3047
01:51:03,780 --> 01:51:06,900
没有平衡， 就像它有点 失踪了 

3048
01:51:05,550 --> 01:51:09,030
报价在这里缺少一个报价 超过 

3049
01:51:06,900 --> 01:51:10,800
在这里，因为推测是 这样的 

3050
01:51:09,030 --> 01:51:12,900
也许哈佛很容易受到这种影响 

3051
01:51:10,800 --> 01:51:15,300
不要以为他们 不过 是 假设 

3052
01:51:12,900 --> 01:51:17,159
代码运行哈佛密钥和 

3053
01:51:15,300 --> 01:51:19,349
哈佛的登录页面看起来有点儿

3054
01:51:17,159 --> 01:51:20,579
这样的事情，这是不好的 

3055
01:51:19,349 --> 01:51:22,679
这很危险， 因为它们只是 

3056
01:51:20,579 --> 01:51:24,030
使用 F字符串 或格式化字符串 

3057
01:51:22,679 --> 01:51:28,440
只是 要 盲目地塞东西 

3058
01:51:24,030 --> 01:51:29,880
在那里，但如果你改为使用等等 

3059
01:51:28,440 --> 01:51:31,590
如果你让人类输入 

3060
01:51:29,880 --> 01:51:33,119
一些神秘的东西就像 注意到什么 

3061
01:51:31,590 --> 01:51:35,340
在逻辑上发生了用户名 

3062
01:51:33,119 --> 01:51:38,219
在示例电子邮件提供商 comm中等于我 

3063
01:51:35,340 --> 01:51:42,570
和密码等于引用unquote 所以 

3064
01:51:38,219 --> 01:51:44,280
没有或1 等于 1而y1等于1 

3065
01:51:42,570 --> 01:51:46,139
我会注意到， 如果 我 回去注意到 

3066
01:51:44,280 --> 01:51:48,090
这里有一个引用和引用

3067
01:51:46,139 --> 01:51:49,860
以及我没有完成 我的原因

3068
01:51:48,090 --> 01:51:51,780
第二个引用这里或我的第二个引用

3069
01:51:49,860 --> 01:51:53,969
这是因为我假设是一个坏人 

3070
01:51:51,780 --> 01:51:56,489
我认为哈佛就是这样的家伙

3071
01:51:53,969 --> 01:51:58,409
盲目地将我的输入插入单个 

3072
01:51:56,489 --> 01:52:00,119
因此我可以自己引用

3073
01:51:58,409 --> 01:52:02,070
无意识地完成他们的思考但是 

3074
01:52:00,119 --> 01:52:03,389
注意逻辑发生了什么选择所有 

3075
01:52:02,070 --> 01:52:05,729
用户来自数据库所在的位置 

3076
01:52:03,389 --> 01:52:08,489
用户名 是我的示例电子邮件 提供商 

3077
01:52:05,729 --> 01:52:11,479
通讯密码是什么 或一个 

3078
01:52:08,489 --> 01:52:14,940
当一个人等于一个时，等于一个 

3079
01:52:11,479 --> 01:52:16,829
像往常一样，这将永远回归 

3080
01:52:14,940 --> 01:52:19,949
据推测，数据库中的用户

3081
01:52:16,829 --> 01:52:22,709
因此，让我以其中一个登录 

3082
01:52:19,949 --> 01:52:25,409
用户如此简单易于 防守 

3083
01:52:22,709 --> 01:52:27,690
反对这 只是使用占位符语法 

3084
01:52:25,409 --> 01:52:29,729
并且不信任和消毒用户输入 

3085
01:52:27,690 --> 01:52:31,979
cs50 库 中续集的语法 

3086
01:52:29,729 --> 01:52:33,449
很简单 ，那个结肠，但 在 

3087
01:52:31,979 --> 01:52:36,300
其他图书馆 可能就是这样 

3088
01:52:33,449 --> 01:52:38,130
同样如此，现在 你们都是家庭和 

3089
01:52:36,300 --> 01:52:40,229
学生们 一同成名 

3090
01:52:38,130 --> 01:52:42,239
小班人的世界 谁 

3091
01:52:40,229 --> 01:52:43,800
了解特别令人讨厌的幽默 

3092
01:52:42,239 --> 01:52:45,119
你可能会注意到这个模因已经消失了 

3093
01:52:43,800 --> 01:52:47,699
现在 在互联网上 多年 

3094
01:52:45,119 --> 01:52:50,130
有人恶意或 

3095
01:52:47,699 --> 01:52:55,429
幽默地决定画画 

3096
01:52:50,130 --> 01:53:02,400
在那里车牌让我们提升 

3097
01:52:55,429 --> 01:53:03,900
为什么有人会做这个扫描仪是的 

3098
01:53:02,400 --> 01:53:05,639
像收费站是一种 消失 

3099
01:53:03,900 --> 01:53:07,170
至少在美国他们反而拥有 

3100
01:53:05,639 --> 01:53:08,369
如相机或读卡器是 

3101
01:53:07,170 --> 01:53:10,980
扫描你的车前部和 

3102
01:53:08,369 --> 01:53:12,719
试图光学护理做OCR光学 

3103
01:53:10,980 --> 01:53:14,639
许可证上的字符识别

3104
01:53:12,719 --> 01:53:16,469
板块和 这里的推测可能是 

3105
01:53:14,639 --> 01:53:18,060
在一些自治市，有一些不好的

3106
01:53:16,469 --> 01:53:20,219
他们只是盲目地编写代码 

3107
01:53:18,060 --> 01:53:22,170
将您的车牌插入他们的代码中 

3108
01:53:20,219 --> 01:53:24,869
希望你完成了这个想法 

3109
01:53:22,170 --> 01:53:26,239
无论如何，我们都是零六六六 

3110
01:53:24,869 --> 01:53:30,150
是车牌的 一部分 但是 

3111
01:53:26,239 --> 01:53:31,619
分号丢弃数据库表点 

3112
01:53:30,150 --> 01:53:34,020
点，我们 甚至看 ， 由于下跌 

3113
01:53:31,619 --> 01:53:36,690
非常极端，它确实删除了一个

3114
01:53:34,020 --> 01:53:40,710
数据库本身， 但这是一个很好的方式 

3115
01:53:36,690 --> 01:53:44,280
从整个 下车钩 

3116
01:53:40,710 --> 01:53:45,570
价格和大多数规范或许xkcd是 

3117
01:53:44,280 --> 01:53:47,520
这是一个非常受欢迎的卡通片

3118
01:53:45,570 --> 01:53:50,239
特别是极客，你会

3119
01:53:47,520 --> 01:53:54,079
也许现在也明白这个笑话 

3120
01:53:50,239 --> 01:53:54,079
在 CS圈子中 

3121
01:54:03,579 --> 01:54:07,489
你可以发出听到笑声的声音 

3122
01:54:05,869 --> 01:54:09,229
它的方式通过这样的 ，如果 

3123
01:54:07,489 --> 01:54:12,469
你别忘 了 别忘了 

3124
01:54:09,229 --> 01:54:13,969
与pset或final的小破旧表 

3125
01:54:12,469 --> 01:54:15,499
你真的会实施cs50融资吗？ 

3126
01:54:13,969 --> 01:54:16,639
并且合并所有这些想法谢谢你 

3127
01:54:15,499 --> 01:54:20,889
对我们所有的家人来说都是如此

3128
01:54:16,639 --> 01:54:20,889
加入， 下次 我们会见到你 

