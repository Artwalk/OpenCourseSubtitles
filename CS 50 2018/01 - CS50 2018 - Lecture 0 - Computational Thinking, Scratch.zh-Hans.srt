1
00:00:00,000 --> 00:00:49,610
[介绍] 

2
00:00:49,610 --> 00:00:52,910
大卫·马兰：这是哈佛大学CS50的介绍

3
00:00:52,910 --> 00:00:55,310
对计算机科学的知识型企业

4
00:00:55,310 --> 00:00:56,810
和编程艺术。 

5
00:00:56,810 --> 00:00:59,480
我的名字是大卫马兰，如果你是其中之一

6
00:00:59,480 --> 00:01:03,300
在房间里谁在思考，为什么我在一门计算机科学， 

7
00:01:03,300 --> 00:01:05,750
意识到我也觉得完全一样。 

8
00:01:05,750 --> 00:01:07,460
事实上，我一年级的时候，我并不完全

9
00:01:07,460 --> 00:01:10,820
鼓起勇气更普遍地学习这门课程或计算机科学， 

10
00:01:10,820 --> 00:01:13,530
那很大程度上是因为我被它吓倒了。 

11
00:01:13,530 --> 00:01:14,680
我有点紧张。 

12
00:01:14,680 --> 00:01:16,590
我感觉很舒服。 

13
00:01:16,590 --> 00:01:19,860
而且我在一天结束时真的不知道它究竟是什么。 

14
00:01:19,860 --> 00:01:22,280
但要意识到，如果你也感受到一点点， 

15
00:01:22,280 --> 00:01:24,140
或者即使你是那些更舒服的人之一

16
00:01:24,140 --> 00:01:26,270
涉足计算机科学或编程， 

17
00:01:26,270 --> 00:01:29,180
意识到我们可以填写这么多空白

18
00:01:29,180 --> 00:01:31,510
所以最终，在学期结束时，每个人

19
00:01:31,510 --> 00:01:34,280
会觉得自己在同一页上。 

20
00:01:34,280 --> 00:01:38,870
在那之前，请放心，68％的人坐在你的左边

21
00:01:38,870 --> 00:01:40,940
以及你的权利，背后和前方

22
00:01:40,940 --> 00:01:45,230
从来没有参加过CS课程，这很可能是

23
00:01:45,230 --> 00:01:47,000
适合你的人口统计。 

24
00:01:47,000 --> 00:01:50,330
但也要意识到这种惊人的支持

25
00:01:50,330 --> 00:01:53,820
这么多办公时间，部分和材料以及更远的结构， 

26
00:01:53,820 --> 00:01:56,120
意识到在这门课程中最重要的是什么

27
00:01:56,120 --> 00:01:59,180
与你的同学相比，你的最终结果并非如此

28
00:01:59,180 --> 00:02:03,530
在第10周，我们的最后一周，但你最终相对于自己

29
00:02:03,530 --> 00:02:04,400
在零周。 

30
00:02:04,400 --> 00:02:06,050
事实上，这就是我们现在所处的位置。 

31
00:02:06,050 --> 00:02:08,810
事实证明，计算机科学家从零开始计算。 

32
00:02:08,810 --> 00:02:11,690
在接下来的11周内，我们将带你去

33
00:02:11,690 --> 00:02:14,060
从那些不太舒服或可能

34
00:02:14,060 --> 00:02:16,120
在不太舒适和更多之间的某个地方

35
00:02:16,120 --> 00:02:20,510
比那更舒服，更自信，更有能力。 

36
00:02:20,510 --> 00:02:23,990
但要实现这一目标，我们需要了解计算机科学究竟是什么。 

37
00:02:23,990 --> 00:02:26,870
在我踏入一个房间之前，这是我不明白的事情

38
00:02:26,870 --> 00:02:27,530
像这样。 

39
00:02:27,530 --> 00:02:31,160
而且我敢说我们可以将计算机科学提炼成这张照片。 

40
00:02:31,160 --> 00:02:33,290
计算机科学是关于解决问题的。 

41
00:02:33,290 --> 00:02:36,440
而且我知道高中课程通常会做一些油漆

42
00:02:36,440 --> 00:02:38,270
一个误导性的图片，它只是关于

43
00:02:38,270 --> 00:02:40,910
它完全是关于编程和人们的头脑

44
00:02:40,910 --> 00:02:44,270
在计算机实验室工作，在代码上相当反社会

45
00:02:44,270 --> 00:02:47,270
但实际情况是解决问题，而且经常是

46
00:02:47,270 --> 00:02:51,140
通过亲自或通过利用代码协同解决问题， 

47
00:02:51,140 --> 00:02:53,240
其他人过去写过的程序。 

48
00:02:53,240 --> 00:02:54,980
解决问题意味着什么？ 

49
00:02:54,980 --> 00:02:56,440
好吧，你需要输入。 

50
00:02:56,440 --> 00:02:58,280
所以你正试图解决这个问题。 

51
00:02:58,280 --> 00:02:59,150
这是输入。 

52
00:02:59,150 --> 00:02:59,990
你想要输出。 

53
00:02:59,990 --> 00:03:01,800
你想要解决这个问题的方法。 

54
00:03:01,800 --> 00:03:03,830
还有一种计算机科学的秘诀

55
00:03:03,830 --> 00:03:06,140
将成为这个众所周知的黑匣子中的一切

56
00:03:06,140 --> 00:03:08,440
在接下来的几周中间， 

57
00:03:08,440 --> 00:03:12,090
在那里你开始明白你可以用它做什么。 

58
00:03:12,090 --> 00:03:15,050
但是为了开始解决问题，我们就是这样

59
00:03:15,050 --> 00:03:18,290
需要作为一个群体来决定我们将如何代表这些问题

60
00:03:18,290 --> 00:03:19,780
什么可能是一个问题。 

61
00:03:19,780 --> 00:03:21,350
嗯，在这个房间里，有很多人。 

62
00:03:21,350 --> 00:03:24,650
如果我们想参加或计算这个房间的人数， 

63
00:03:24,650 --> 00:03:28,040
我可能需要开始跟踪我看到的人数。 

64
00:03:28,040 --> 00:03:30,700
但是，我如何表示我看到的人数？ 

65
00:03:30,700 --> 00:03:34,070
好吧，我可以做一些旧学校，我可以拿出一支粉笔

66
00:03:34,070 --> 00:03:35,320
好吧，或者说，好吧。 

67
00:03:35,320 --> 00:03:38,260
我看到1,2,3,4,5。 

68
00:03:38,260 --> 00:03:40,220
我可以做那样的小风格惯例

69
00:03:40,220 --> 00:03:42,290
节省空间，提醒自己。 

70
00:03:42,290 --> 00:03:45,840
6,7,8,9,10等。 

71
00:03:45,840 --> 00:03:48,860
或者，我当然可以自己动手做。 

72
00:03:48,860 --> 00:03:52,730
所以1,2,3,4,5等等。 

73
00:03:52,730 --> 00:03:57,350
但显然，我可以依靠一方面多高？ 

74
00:03:57,350 --> 00:04:00,110
所以5你会想，但那只是因为我们没有真的

75
00:04:00,110 --> 00:04:01,760
对这个问题认真思考。 

76
00:04:01,760 --> 00:04:04,850
事实证明，只用这五个手指，更不用说这五个了， 

77
00:04:04,850 --> 00:04:08,360
实际上我可以算得更高，因为毕竟系统

78
00:04:08,360 --> 00:04:10,310
我正在使用主板上的哈希标记或只是

79
00:04:10,310 --> 00:04:13,550
现在用我的手指只是保持我的手指放下并放置

80
00:04:13,550 --> 00:04:16,190
他们最多代表那些，真的。 

81
00:04:16,190 --> 00:04:19,160
但是，如果我真的考虑到我的手指顺序怎么办？ 

82
00:04:19,160 --> 00:04:22,860
可以这么说，它就是那种置换它们的手指

83
00:04:22,860 --> 00:04:24,860
代表房间里的人数， 

84
00:04:24,860 --> 00:04:27,660
而不仅仅是手指上下移动。 

85
00:04:27,660 --> 00:04:29,480
换句话说，这可以保持为零。 

86
00:04:29,480 --> 00:04:31,130
这可能仍然是一个。 

87
00:04:31,130 --> 00:04:34,250
但是如果两个不仅仅是这个，那么显而易见呢？ 

88
00:04:34,250 --> 00:04:36,140
但如果就是这样呢？ 

89
00:04:36,140 --> 00:04:38,660
所以只举一个，我的第二根手指。 

90
00:04:38,660 --> 00:04:41,180
那么，三，这是什么呢？ 

91
00:04:41,180 --> 00:04:44,420
所以我们有0,1,2,3。 

92
00:04:44,420 --> 00:04:47,150
这将导致我们四人进攻。 

93
00:04:47,150 --> 00:04:51,140
但如果我们开始跳到五，我现在可能

94
00:04:51,140 --> 00:04:52,790
将这个手指和这个手指放在一起。 

95
00:04:52,790 --> 00:04:56,120
如果我想现在代表六个，我可以做到这一点。 

96
00:04:56,120 --> 00:04:56,910
现在七点。 

97
00:04:56,910 --> 00:04:59,870
换句话说，我已经表达了更多的模式

98
00:04:59,870 --> 00:05:01,910
如果我们继续这样做，我想我其实可以

99
00:05:01,910 --> 00:05:06,740
可能代表32种不同的模式，因此也很痛苦

100
00:05:06,740 --> 00:05:09,380
32个不同的人，独自在我手上。 

101
00:05:09,380 --> 00:05:11,690
如果我从0开始计数，或者31个人。 

102
00:05:11,690 --> 00:05:13,750
那是什么 - 什么是关系

103
00:05:13,750 --> 00:05:14,960
我们怎么到这里来的？ 

104
00:05:14,960 --> 00:05:17,810
好吧，事实证明计算机有点简单， 

105
00:05:17,810 --> 00:05:19,400
就像我们的手在这里。 

106
00:05:19,400 --> 00:05:21,940
在一天结束时，您的计算机已插入墙上

107
00:05:21,940 --> 00:05:24,980
或者它有一个电池，所以它有或没有电。 

108
00:05:24,980 --> 00:05:27,140
在一天结束时，这是物质资源

109
00:05:27,140 --> 00:05:30,030
今天推动这些东西，我们的手机和所有技术。 

110
00:05:30,030 --> 00:05:33,650
所以，如果有电或不电，这种地图很好

111
00:05:33,650 --> 00:05:35,810
没有手指或是手指。 

112
00:05:35,810 --> 00:05:39,350
事实上，你可能知道，计算机只会说什么语言？ 

113
00:05:39,350 --> 00:05:40,980
什么字母，可以这么说？ 

114
00:05:40,980 --> 00:05:41,480
是啊。 

115
00:05:41,480 --> 00:05:41,990
二进制。 

116
00:05:41,990 --> 00:05:42,890
毕意二。 

117
00:05:42,890 --> 00:05:46,160
事实上，这指的是在计算机中的二进制中， 

118
00:05:46,160 --> 00:05:48,050
你只有两位数 - 

119
00:05:48,050 --> 00:05:49,200
零和一。 

120
00:05:49,200 --> 00:05:53,440
当然，我们人类有0,1,2,3,4,5,6,7,8,9， 

121
00:05:53,440 --> 00:05:55,570
然后我们可以将这些结合起来计算得更高。 

122
00:05:55,570 --> 00:05:57,950
但是计算机只有0,1，那就是它。 

123
00:05:57,950 --> 00:05:59,910
因为在一天结束时，确实存在

124
00:05:59,910 --> 00:06:04,290
电源关闭与零电源或电源接通之间的直接映射

125
00:06:04,290 --> 00:06:07,770
它是一个，或一些电子或从你的电池流出的任何东西

126
00:06:07,770 --> 00:06:08,980
或从墙上。 

127
00:06:08,980 --> 00:06:12,240
所以这就是为什么计算机往往只说二进制， 

128
00:06:12,240 --> 00:06:14,760
因为在一天结束时，它只是干净地映射

129
00:06:14,760 --> 00:06:18,360
首先是为他们提供动力的是什么。 

130
00:06:18,360 --> 00:06:19,920
但这实际上有用吗？ 

131
00:06:19,920 --> 00:06:23,280
如果计算机只有0和1，那么他们怎么做有用的东西呢？ 

132
00:06:23,280 --> 00:06:28,030
好吧，想想我们的人类世界，你可能会有这种符号模式。 

133
00:06:28,030 --> 00:06:31,050
这是十进制，dec表示10，因为你有0到9。 

134
00:06:31,050 --> 00:06:33,270
当然，这是123。 

135
00:06:33,270 --> 00:06:33,960
但为什么？ 

136
00:06:33,960 --> 00:06:36,330
如果你在很长一段时间没有想到这个， 

137
00:06:36,330 --> 00:06:40,200
这实际上只是一个三个符号的模式，一个，两个和三个形状， 

138
00:06:40,200 --> 00:06:41,520
或字形，在屏幕上。 

139
00:06:41,520 --> 00:06:44,850
但是，自从小学毕业以来，我们人类已经开始归于意义

140
00:06:44,850 --> 00:06:46,310
对这些数字中的每一个，对吗？ 

141
00:06:46,310 --> 00:06:49,710
如果你回想一下，这就是列，这是十列， 

142
00:06:49,710 --> 00:06:53,300
这是数百列，等等，我们可以继续前进。 

143
00:06:53,300 --> 00:06:57,450
那么为什么这种模式 - 一，二，三 - 意味着123？ 

144
00:06:57,450 --> 00:06:59,620
嗯，这是因为我们所有人都是直观的

145
00:06:59,620 --> 00:07:04,860
如今我们正在快速地做100次1加10次

146
00:07:04,860 --> 00:07:11,430
2加1次3，当然给我们100加20加3， 

147
00:07:11,430 --> 00:07:15,210
然后我们在数学上知道的数字为123。 

148
00:07:15,210 --> 00:07:18,510
但是我们这么快就这么做了，你不再考虑这个了。 

149
00:07:18,510 --> 00:07:21,040
嗯，计算机的工作方式基本相同。 

150
00:07:21,040 --> 00:07:22,410
他们没有那么多的数字 - 

151
00:07:22,410 --> 00:07:24,030
0到9--正如我们所做的那样。 

152
00:07:24,030 --> 00:07:26,080
它们只有零和一个。 

153
00:07:26,080 --> 00:07:28,290
因此，如果他们要存储价值，那么你就是

154
00:07:28,290 --> 00:07:29,790
只会在屏幕上看到零和一个， 

155
00:07:29,790 --> 00:07:31,950
但那些零和一个只是意味着不同的东西。 

156
00:07:31,950 --> 00:07:34,530
而不是一个地方，数十，数百， 

157
00:07:34,530 --> 00:07:39,210
他们会有一个地方，一个两个地方，四个地方， 

158
00:07:39,210 --> 00:07:41,410
然后是八和十六岁以上。 

159
00:07:41,410 --> 00:07:42,060
现在，为什么？ 

160
00:07:42,060 --> 00:07:46,250
嗯，一个，10个和100个，结果是那些是10的幂。 

161
00:07:46,250 --> 00:07:48,580
10到0在技术上是1。 

162
00:07:48,580 --> 00:07:50,340
10比1只是10。 

163
00:07:50,340 --> 00:07:51,750
10到2是100。 

164
00:07:51,750 --> 00:07:55,140
这就是为什么你有几十，几千，等等。 

165
00:07:55,140 --> 00:07:57,720
计算机显然使用2的幂。 

166
00:07:57,720 --> 00:07:58,440
不奇怪。 

167
00:07:58,440 --> 00:07:59,580
二进制 - 两个。 

168
00:07:59,580 --> 00:08:04,410
所以如果你只有一个，两个和四个作为你的占位符， 

169
00:08:04,410 --> 00:08:08,190
如果一台电脑存放这些数字 - 

170
00:08:08,190 --> 00:08:12,990
0,0,0--计算机可能存储的数量到目前为止

171
00:08:12,990 --> 00:08:14,680
人类明白吗？ 

172
00:08:14,680 --> 00:08:16,560
嗯，这就是计算机如何存储零。 

173
00:08:16,560 --> 00:08:19,800
如果一台计算机正在存储0,0,0，只是

174
00:08:19,800 --> 00:08:22,590
就像我们的人类世界一样，那也是0，但这在技术上也是如此

175
00:08:22,590 --> 00:08:26,940
因为它是4倍0加2倍0加1倍零，这显然是

176
00:08:26,940 --> 00:08:27,600
零。 

177
00:08:27,600 --> 00:08:30,870
同时，如果一台电脑实际存放不仅仅是， 

178
00:08:30,870 --> 00:08:35,790
比如，0,0,0，而是将此值存储为二进制， 

179
00:08:35,790 --> 00:08:38,190
这个映射到十进制是什么？ 

180
00:08:38,190 --> 00:08:39,120
这就是一个。 

181
00:08:39,120 --> 00:08:46,640
而现在，为什么，如果我们在这里将这个0和1改为这个值，这两个呢？ 

182
00:08:46,640 --> 00:08:49,030
好吧，数学上，出于完全相同的原因。 

183
00:08:49,030 --> 00:08:52,290
所以早些时候，我有五个手指，但如果你只考虑我的前三个， 

184
00:08:52,290 --> 00:08:56,310
当我这样举起一根手指时，我代表了两个。 

185
00:08:56,310 --> 00:08:59,550
如果我想要代表三个，请记住我把第二个手指放了。 

186
00:08:59,550 --> 00:09:02,760
因此可以很好地代表三个原因

187
00:09:02,760 --> 00:09:07,110
是因为我用我的人手做的所有事情都在用二进制计算。 

188
00:09:07,110 --> 00:09:09,160
我可以继续数数越来越多。 

189
00:09:09,160 --> 00:09:14,110
所以，如果我有五个手指或五个位，位意味着二进制数字， 

190
00:09:14,110 --> 00:09:16,200
事实证明，如果我们做数学计算，我可以数数， 

191
00:09:16,200 --> 00:09:19,200
从零开始高达31。 

192
00:09:19,200 --> 00:09:22,530
实际上很难做到这一点，但我们可以做到。 

193
00:09:22,530 --> 00:09:24,280
那为什么这有用呢？ 

194
00:09:24,280 --> 00:09:26,150
在一天结束时，一台电脑，因此， 

195
00:09:26,150 --> 00:09:30,750
可以表示从0到1到2到3到任意数量的任意数量的值， 

196
00:09:30,750 --> 00:09:31,910
远远高于此。 

197
00:09:31,910 --> 00:09:34,740
它需要的只是足够的比特，足够的零和一些。 

198
00:09:34,740 --> 00:09:35,940
那些比特是什么？ 

199
00:09:35,940 --> 00:09:40,050
好吧，我们所有人现在都在我们的手机光源中，例如。 

200
00:09:40,050 --> 00:09:43,050
所以我现在可以说这个物理设备 - 

201
00:09:43,050 --> 00:09:44,490
可能有点难以说清楚 - 

202
00:09:44,490 --> 00:09:47,440
它确实有一个手电筒，目前在技术上是关闭的。 

203
00:09:47,440 --> 00:09:51,200
但是，如果我打开这个手电筒，从而使用一些电力， 

204
00:09:51,200 --> 00:09:52,860
现在，我正在存储一个。 

205
00:09:52,860 --> 00:09:53,940
所以手机开机了。 

206
00:09:53,940 --> 00:09:54,870
现在，它已经关闭了。 

207
00:09:54,870 --> 00:09:55,620
现在，它已经开启了。 

208
00:09:55,620 --> 00:09:56,600
如果我看到 - 

209
00:09:56,600 --> 00:09:58,270
我可以快速借用某人的电话吗？ 

210
00:09:58,270 --> 00:09:59,140
我可以？ 

211
00:09:59,140 --> 00:09:59,640
好。 

212
00:09:59,640 --> 00:10:00,700
和手电筒。 

213
00:10:00,700 --> 00:10:02,560
我该如何开启手电筒？ 

214
00:10:02,560 --> 00:10:03,060
哦。 

215
00:10:03,060 --> 00:10:03,560
摇一摇。 

216
00:10:06,900 --> 00:10:07,560
没关系。 

217
00:10:07,560 --> 00:10:08,060
好。 

218
00:10:08,060 --> 00:10:09,340
谢谢。 

219
00:10:09,340 --> 00:10:09,840
哦。 

220
00:10:09,840 --> 00:10:10,260
谢谢。 

221
00:10:10,260 --> 00:10:10,710
好。 

222
00:10:10,710 --> 00:10:11,410
所以这很棒。 

223
00:10:11,410 --> 00:10:13,560
现在，我可以数得更高。 

224
00:10:13,560 --> 00:10:17,790
现在，这代表了如果我有两个灯泡或两个开关的数字

225
00:10:17,790 --> 00:10:19,180
在此刻？ 

226
00:10:19,180 --> 00:10:19,680
是啊。 

227
00:10:19,680 --> 00:10:20,170
三。 

228
00:10:20,170 --> 00:10:22,050
因为我有一个，我有一个，我

229
00:10:22,050 --> 00:10:24,150
有两个，当然最终将达到三个。 

230
00:10:24,150 --> 00:10:27,090
如果我以某种方式拿起第三部手机，我可能算得更高。 

231
00:10:27,090 --> 00:10:29,570
从技术上讲，如果我有三个灯泡 - 

232
00:10:29,570 --> 00:10:32,350
一，一，一 - 这个价值是多少？ 

233
00:10:32,350 --> 00:10:32,850
七。 

234
00:10:32,850 --> 00:10:36,010
因为它是四加一加二加一，等等。 

235
00:10:36,010 --> 00:10:38,020
非常感谢您的自发性。 

236
00:10:38,020 --> 00:10:42,780
那为什么这不会对我们造成限制呢？ 

237
00:10:42,780 --> 00:10:45,120
我可以按照我想要的十进制计算。 

238
00:10:45,120 --> 00:10:48,540
我现在可以用我想要的二进制数来计算，只要我有足够的位数。 

239
00:10:48,540 --> 00:10:52,310
但是，我如何实际代表其他信息呢？ 

240
00:10:52,310 --> 00:10:57,250
好吧，如果我想代表一个类似字母的东西，我该如何到达那里？ 

241
00:10:57,250 --> 00:11:01,540
如果计算机中只有电，并且他们使用二进制计数， 

242
00:11:01,540 --> 00:11:04,300
然而不知何故，它们比仅仅做数学更有用 - 

243
00:11:04,300 --> 00:11:08,050
他们可以收到短信和电子邮件，网站和视频等 - 

244
00:11:08,050 --> 00:11:11,140
我们如何从零和一到字母？ 

245
00:11:11,140 --> 00:11:12,400
好吧，我们 - 是的。 

246
00:11:15,120 --> 00:11:15,620
抱歉。 

247
00:11:15,620 --> 00:11:18,140
有点大声。 

248
00:11:18,140 --> 00:11:18,650
是啊。 

249
00:11:18,650 --> 00:11:20,630
我们只需要将数字与字母联系起来。 

250
00:11:20,630 --> 00:11:23,510
换句话说，这个房间里的所有人都需要在某个时候做出决定

251
00:11:23,510 --> 00:11:24,410
那，你知道吗？ 

252
00:11:24,410 --> 00:11:27,200
如果我们想要代表大写字母A， 

253
00:11:27,200 --> 00:11:29,180
我们只需要决定一个比特模式， 

254
00:11:29,180 --> 00:11:31,730
手指的图案，这将代表A. 

255
00:11:31,730 --> 00:11:34,670
几年前，人类只是单方面地证明了这一点

256
00:11:34,670 --> 00:11:39,840
决定65应为代表大写字母A的十进制数。 

257
00:11:39,840 --> 00:11:43,700
您可能猜测大写字母B由十进制数表示？ 

258
00:11:43,700 --> 00:11:44,420
66。 

259
00:11:44,420 --> 00:11:46,500
然后C是67，依此类推。 

260
00:11:46,500 --> 00:11:50,630
并且有一个类似128或甚至256个可能值的映射

261
00:11:50,630 --> 00:11:52,880
对于您在典型键盘上可能看到的所有按键

262
00:11:52,880 --> 00:11:54,680
为了代表信件。 

263
00:11:54,680 --> 00:11:58,260
现在，计算机如何区分来自字母的数字？ 

264
00:11:58,260 --> 00:11:59,680
嗯，只取决于上下文。 

265
00:11:59,680 --> 00:12:01,880
如果你在Mac上使用像计算器程序一样

266
00:12:01,880 --> 00:12:05,600
或PC或iPhone或Android，以及计算机，设备， 

267
00:12:05,600 --> 00:12:09,050
我只是要了解上下文，让我解释这种零模式

268
00:12:09,050 --> 00:12:11,330
和一些作为数学的实际数字。 

269
00:12:11,330 --> 00:12:14,880
但是，如果您在手机上使用短信应用或短信应用， 

270
00:12:14,880 --> 00:12:17,060
你真的会在文本的背景下， 

271
00:12:17,060 --> 00:12:20,380
所以你的手机将解释相同的零和一个模式， 

272
00:12:20,380 --> 00:12:23,780
或灯泡关闭，或在一天结束时，晶体管， 

273
00:12:23,780 --> 00:12:27,450
无论是开还是关的小件硬件和电脑 - 

274
00:12:27,450 --> 00:12:30,470
它会将这些模式解释为只是代表一个字母。 

275
00:12:30,470 --> 00:12:34,220
如果您在文本消息应用程序或Microsoft Word的上下文中

276
00:12:34,220 --> 00:12:38,180
或Google Docs等，它完全取决于上下文。 

277
00:12:38,180 --> 00:12:41,780
我们人类想出的系统叫做ASCII，美国标准代码

278
00:12:41,780 --> 00:12:43,100
用于信息交换。 

279
00:12:43,100 --> 00:12:46,760
这个名字并不有趣，但事实是我们几年前都同意了

280
00:12:46,760 --> 00:12:50,210
65是A等等是重要的。 

281
00:12:50,210 --> 00:12:52,800
例如，如果我们在这里查看此映射

282
00:12:52,800 --> 00:12:56,340
只是前几个字母，这是什么意思？ 

283
00:12:56,340 --> 00:13:00,920
如果我现在要收到短信，我就有了这种能力

284
00:13:00,920 --> 00:13:04,190
可以这么说，看看引擎盖下面是零和一个模式

285
00:13:04,190 --> 00:13:06,890
有人刚发短信给我，那个模式， 

286
00:13:06,890 --> 00:13:12,230
如果我把它转换成十进制，技术上说，让我们说，72和73-- 

287
00:13:12,230 --> 00:13:13,970
所以我得到了一大堆零和一些。 

288
00:13:13,970 --> 00:13:17,480
我做了一些数学计算，我意识到，好吧，我刚收到72和73， 

289
00:13:17,480 --> 00:13:20,690
但这是短信，所以这不仅仅是我朋友寄给我的数字。 

290
00:13:20,690 --> 00:13:21,690
这是一条消息。 

291
00:13:21,690 --> 00:13:27,840
如果他或她发送72然后发送73，我的朋友可能发送了什么消息？ 

292
00:13:27,840 --> 00:13:28,370
是啊。 

293
00:13:28,370 --> 00:13:28,860
你好。 

294
00:13:28,860 --> 00:13:31,280
HI。因为如果你在那里向前撇去， 

295
00:13:31,280 --> 00:13:36,720
恰好是在ASCII中72和73，H和I之间的映射。 

296
00:13:36,720 --> 00:13:40,240
从技术上讲，如果你愿意的话，消息有第三个字节。 

297
00:13:40,240 --> 00:13:43,090
如果你想知道的话，一个字节只有8位。 

298
00:13:43,090 --> 00:13:45,260
不用单比特来说话很方便， 

299
00:13:45,260 --> 00:13:48,440
你不能计算很高，但有一个字节，或八位， 

300
00:13:48,440 --> 00:13:49,700
你可以算得更高。 

301
00:13:49,700 --> 00:13:53,600
事实证明，如果我收到第三个字节，另一个是八个字节

302
00:13:53,600 --> 00:13:55,520
零和一起 - 

303
00:13:55,520 --> 00:13:56,150
33。 

304
00:13:56,150 --> 00:13:59,490
我们怎么知道现在这个消息是什么？ 

305
00:13:59,490 --> 00:13:59,990
是啊。 

306
00:13:59,990 --> 00:14:01,640
事实证明你不会知道另一个

307
00:14:01,640 --> 00:14:04,430
而不是通过猜测或谷歌搜索或只是进入这种知识。 

308
00:14:04,430 --> 00:14:05,360
现在是“HI！” 

309
00:14:05,360 --> 00:14:09,020
带着感叹号，因为33就是这样，如果你查一查， 

310
00:14:09,020 --> 00:14:12,180
也要映射到感叹号。 

311
00:14:12,180 --> 00:14:14,360
现在，如果我们真的看了这个的二进制， 

312
00:14:14,360 --> 00:14:16,610
你会真正看到这种零和一种模式。 

313
00:14:16,610 --> 00:14:18,920
这就是你用二进制表示72的方法。 

314
00:14:18,920 --> 00:14:20,690
这是你代表73。 

315
00:14:20,690 --> 00:14:22,820
这就是你如何代表33。 

316
00:14:22,820 --> 00:14:26,810
请注意我只使用了一个，两个，三个，四个，五个，六个位， 

317
00:14:26,810 --> 00:14:30,200
即使我在技术上倾向于以8为单位接收东西， 

318
00:14:30,200 --> 00:14:31,220
单位字节。 

319
00:14:31,220 --> 00:14:37,770
但是为什么我不打扰在这里写另一个00和另一个0呢？ 

320
00:14:37,770 --> 00:14:40,660
你写这些东西的时候有用吗？ 

321
00:14:40,660 --> 00:14:41,160
没有。 

322
00:14:41,160 --> 00:14:41,670
并不是的。 

323
00:14:41,670 --> 00:14:46,010
就像在英语中一样，在我们的人类世界中，如果你要写一，二，三， 

324
00:14:46,010 --> 00:14:47,280
那是123。 

325
00:14:47,280 --> 00:14:50,850
如果你要写0,1,2,3，那仍然是123。 

326
00:14:50,850 --> 00:14:53,670
所以即使我们倾向于将它们分成8个簇， 

327
00:14:53,670 --> 00:14:56,660
我们不一定要在谈论它们时写出那些。 

328
00:14:56,660 --> 00:14:57,540
那我们做了什么？ 

329
00:14:57,540 --> 00:15:00,160
好吧，让我介绍一个现在称为抽象的更高档的词。 

330
00:15:00,160 --> 00:15:03,480
抽象只是计算机科学中常用的术语，我们很快就会出现

331
00:15:03,480 --> 00:15:07,530
在程序设计中看到一些低级别 - 比如字面上的低级别 - 

332
00:15:07,530 --> 00:15:11,700
实现细节，甚至是细节，并理解它们

333
00:15:11,700 --> 00:15:15,450
在某些时候，但在概念上决定这不是一个有用的水平

334
00:15:15,450 --> 00:15:16,750
思考问题。 

335
00:15:16,750 --> 00:15:20,280
我真的不想在0和1的思维世界中解决问题。 

336
00:15:20,280 --> 00:15:23,910
我更倾向于用十进制来考虑最小的东西，或者更好的是， 

337
00:15:23,910 --> 00:15:26,640
如果我实际上是在接收文本，甚至是

338
00:15:26,640 --> 00:15:28,110
其他一些代表。 

339
00:15:28,110 --> 00:15:32,040
所以抽象是关于采用相当低级别的细节

340
00:15:32,040 --> 00:15:35,980
并简化它们，以便我们可以进行更有用的对话

341
00:15:35,980 --> 00:15:39,300
再也不用担心电力的来源了。 

342
00:15:39,300 --> 00:15:42,730
我们可以只规定我的电脑可以代表0和1。 

343
00:15:42,730 --> 00:15:44,230
因此，它可以代表数字。 

344
00:15:44,230 --> 00:15:47,010
因此，它也可以表示ASCII或字母。 

345
00:15:47,010 --> 00:15:50,850
我们可以继续前进并开始解决更多有趣的问题。 

346
00:15:50,850 --> 00:15:56,700
但似乎我们无法解决所有问题，因为在我的键盘上

347
00:15:56,700 --> 00:16:00,300
在这里，这个美国键盘在这里，有一大堆符号， 

348
00:16:00,300 --> 00:16:03,810
如果我们实际上击中了班次和选项，那么总共可能是100或200 

349
00:16:03,810 --> 00:16:04,560
那个。 

350
00:16:04,560 --> 00:16:07,170
但你看不到的是一些非常常见的角色。 

351
00:16:07,170 --> 00:16:09,010
特别是在非常国际的观众中， 

352
00:16:09,010 --> 00:16:12,490
我甚至不能在这个键盘上键入什么？ 

353
00:16:12,490 --> 00:16:13,410
什么样的符号？ 

354
00:16:13,410 --> 00:16:15,000
是啊。 

355
00:16:15,000 --> 00:16:16,190
任何带有重音的东西。 

356
00:16:16,190 --> 00:16:18,240
如果你有元音或其他字母的重音。 

357
00:16:18,240 --> 00:16:19,740
还有什么？ 

358
00:16:19,740 --> 00:16:20,810
对不起。 

359
00:16:20,810 --> 00:16:22,560
变音字母或字母上方的其他字符。 

360
00:16:22,560 --> 00:16:23,060
是啊。 

361
00:16:25,200 --> 00:16:26,170
像英镑符号？ 

362
00:16:26,170 --> 00:16:26,670
哦。 

363
00:16:26,670 --> 00:16:27,710
像英国英镑符号。 

364
00:16:27,710 --> 00:16:28,210
当然。 

365
00:16:28,210 --> 00:16:29,340
和其他国家一样。 

366
00:16:29,340 --> 00:16:30,790
任意数量的亚洲语言。 

367
00:16:30,790 --> 00:16:33,410
这个键盘上没有描绘太多符号， 

368
00:16:33,410 --> 00:16:36,630
但不知何故，我们所有人都使用国际键盘或手机

369
00:16:36,630 --> 00:16:38,410
可以肯定地表达自己。 

370
00:16:38,410 --> 00:16:42,180
但那是因为现在手机和电脑不只是使用ASCII。 

371
00:16:42,180 --> 00:16:45,030
ASCII字面上总共使用了8位。 

372
00:16:45,030 --> 00:16:47,290
技术上七，但最终，真的八。 

373
00:16:47,290 --> 00:16:49,380
有八位，如果你真的做数学 - 

374
00:16:49,380 --> 00:16:51,750
如果你有八位或八指，你

375
00:16:51,750 --> 00:16:56,130
只能以256种可能的方式对它们进行置换

376
00:16:56,130 --> 00:17:01,620
是说您只能使用带数字的ASCII表示256个字符

377
00:17:01,620 --> 00:17:03,930
在引擎盖下面，这还不足以代表

378
00:17:03,930 --> 00:17:06,220
许多不同的符号，如这里列举的那些。 

379
00:17:06,220 --> 00:17:08,850
尽管如此，您无法代表任何口音

380
00:17:08,850 --> 00:17:11,400
您可以在Mac和PC上输入

381
00:17:11,400 --> 00:17:13,740
不能输入这些非常流行的东西。 

382
00:17:13,740 --> 00:17:17,520
即使它们是图片，它们实际上只是人物。 

383
00:17:17,520 --> 00:17:22,020
因为事实证明，几年前世界决定八位是不够的。 

384
00:17:22,020 --> 00:17:25,020
让我们开始使用你实际使用的名为Unicode的东西

385
00:17:25,020 --> 00:17:28,200
一个或两个，三个甚至四个字节。 

386
00:17:28,200 --> 00:17:33,450
所以八位或16位，24位，甚至32位来表示字符。 

387
00:17:33,450 --> 00:17:35,940
现在，我们有能力代表成千上万甚至是

388
00:17:35,940 --> 00:17:37,440
数百万字符。 

389
00:17:37,440 --> 00:17:42,540
坦率地说，daresay，这是大量可用性的结果

390
00:17:42,540 --> 00:17:45,340
这就是为什么现在有这么多东西的原因。 

391
00:17:45,340 --> 00:17:48,540
他们只是继续做更多，因为有这么多不同的数字

392
00:17:48,540 --> 00:17:49,320
我们可以使用。 

393
00:17:49,320 --> 00:17:52,950
所以Unicode通常是它的特定版本，称为UTF-8， 

394
00:17:52,950 --> 00:17:54,210
我们不久就会看到它。 

395
00:17:54,210 --> 00:17:56,060
但是，让我在这里提出这个问题。 

396
00:17:56,060 --> 00:18:01,710
这是一个充满欢乐的哭泣的脸，我想这就是所谓的。 

397
00:18:01,710 --> 00:18:03,830
事实证明，根据Apple或iOS， 

398
00:18:03,830 --> 00:18:06,420
这是至少iPhone人最流行的表情符号

399
00:18:06,420 --> 00:18:07,710
正在互相发送。 

400
00:18:07,710 --> 00:18:10,710
所以，当你收到这个时，如果我们能真正把它带出去的话

401
00:18:10,710 --> 00:18:14,860
对此，您实际从朋友那里得到了什么样的位？ 

402
00:18:14,860 --> 00:18:17,580
他或她显然想表达一些情感， 

403
00:18:17,580 --> 00:18:24,030
但实际上，你朋友送你的是什么 - 十进制数128,514。 

404
00:18:24,030 --> 00:18:26,670
或者真的，如果你看看零和即将到来的

405
00:18:26,670 --> 00:18:29,220
通过互联网或电波给你，你

406
00:18:29,220 --> 00:18:33,540
得到这种零和一种模式，这很难或很难

407
00:18:33,540 --> 00:18:36,060
描述性的，但所有的手机或电脑

408
00:18:36,060 --> 00:18:38,040
正在做的是看到这种位模式， 

409
00:18:38,040 --> 00:18:40,530
哦，像一个小的备忘单，查找它，然后说，哦。 

410
00:18:40,530 --> 00:18:44,220
每当我在发短信等文本的上下文中看到这种位模式时， 

411
00:18:44,220 --> 00:18:47,490
我应该把它显示为那张照片。 

412
00:18:47,490 --> 00:18:50,550
现在，那张照片有很多黄色和其他颜色

413
00:18:50,550 --> 00:18:53,050
在它，但我们怎么去那里？ 

414
00:18:53,050 --> 00:18:55,410
好吧，事实证明，这种数字模式 - 

415
00:18:55,410 --> 00:19:00,040
72,73,33--刚才可以肯定，那意味着什么？ 

416
00:19:00,040 --> 00:19:00,540
你好。 

417
00:19:00,540 --> 00:19:04,650
在诸如Microsoft Word，Google Docs，短信等文本程序的上下文中， 

418
00:19:04,650 --> 00:19:05,940
这意味着你好。 

419
00:19:05,940 --> 00:19:09,900
但是，如果你看到相同的字节模式 - 

420
00:19:09,900 --> 00:19:11,820
再一次，我们可以绘制零和一， 

421
00:19:11,820 --> 00:19:13,820
但它不再有趣了，所以我们要走了

422
00:19:13,820 --> 00:19:15,540
抽象小数级别。 

423
00:19:15,540 --> 00:19:17,450
如果你有相同的零和一个模式

424
00:19:17,450 --> 00:19:21,060
或类似Photoshop或浏览器的上下文中的数字

425
00:19:21,060 --> 00:19:24,900
或某种照片程序，好吧，它可能更有意义

426
00:19:24,900 --> 00:19:28,660
把它解释为文本，而不是图像，某种颜色。 

427
00:19:28,660 --> 00:19:31,120
好吧，事实证明世界上还有另一个系统 - 

428
00:19:31,120 --> 00:19:32,820
你可能以前见过这个缩写词 - 

429
00:19:32,820 --> 00:19:35,560
称为RGB--红色，绿色，蓝色。 

430
00:19:35,560 --> 00:19:38,980
这只是人类标准化岁月的一种方式

431
00:19:38,980 --> 00:19:39,940
以前你知道吗？ 

432
00:19:39,940 --> 00:19:42,910
如果我们想在某人的屏幕上表示一个点，否则就知道了

433
00:19:42,910 --> 00:19:44,950
作为一个像素，屏幕上的一个小方块

434
00:19:44,950 --> 00:19:47,880
这些天你的手机，笔记本电脑，甚至是电视， 

435
00:19:47,880 --> 00:19:49,900
我们将使用三个字节 - 

436
00:19:49,900 --> 00:19:54,010
一个字节，用于指定该特定像素中应有多少红色， 

437
00:19:54,010 --> 00:19:57,940
再多一个字节来指定绿色应与红色组合多少才能形成

438
00:19:57,940 --> 00:20:00,400
那个像素，再一个字节，第三个， 

439
00:20:00,400 --> 00:20:03,550
表示与其他两种颜色结合的蓝色多少

440
00:20:03,550 --> 00:20:05,620
一起做一个新的颜色。 

441
00:20:05,620 --> 00:20:09,230
所以它有点像组合涂料，除了在这种情况下， 

442
00:20:09,230 --> 00:20:13,810
为了获得特定的颜色，它更像是一波光

443
00:20:13,810 --> 00:20:16,510
红色，绿色和蓝色作为您的调色板。 

444
00:20:16,510 --> 00:20:20,180
所以，如果我们看到这种红色，绿色，蓝色的图案，并说， 

445
00:20:20,180 --> 00:20:20,770
你知道吗？ 

446
00:20:20,770 --> 00:20:25,780
给我72红色，73绿色，33蓝色。 

447
00:20:25,780 --> 00:20:30,490
如果我之前提到的总可能范围是0到256， 

448
00:20:30,490 --> 00:20:35,770
如果从零开始计算机科学计数，或技术上0到255， 

449
00:20:35,770 --> 00:20:38,590
这就像中等量的红色，中等量的绿色， 

450
00:20:38,590 --> 00:20:42,140
如果范围从0到255，则只需要一点点蓝色。 

451
00:20:42,140 --> 00:20:44,100
所以，如果你把这三件事结合起来

452
00:20:44,100 --> 00:20:46,790
你想知道你得到什么颜色 - 

453
00:20:46,790 --> 00:20:47,770
是的。 

454
00:20:47,770 --> 00:20:50,840
所以它看起来像是一种淡黄色。 

455
00:20:50,840 --> 00:20:54,360
因此，如果计算机在屏幕上存储单个点

456
00:20:54,360 --> 00:20:57,720
恰好是黄色，计算机实际存储的是什么

457
00:20:57,720 --> 00:21:00,640
这不是物理上的点，而是三点的模式

458
00:21:00,640 --> 00:21:03,600
字节 - 计算机应该多少红，多少绿，多少蓝

459
00:21:03,600 --> 00:21:05,560
在这个特定的点上显示。 

460
00:21:05,560 --> 00:21:10,230
因此，如果我们看到这种欢乐的哭泣面孔，我们会增强或放大

461
00:21:10,230 --> 00:21:14,320
在这里，你可以看到它开始像素化，可以这么说， 

462
00:21:14,320 --> 00:21:15,660
你开始看到点的地方。 

463
00:21:15,660 --> 00:21:17,970
如果我再多一点，现在你真的可以

464
00:21:17,970 --> 00:21:20,170
开始看到屏幕上的点。 

465
00:21:20,170 --> 00:21:22,230
如果我走得更远，你实际上可以

466
00:21:22,230 --> 00:21:26,250
看到组成这个图像的小小方块，其中大部分都是

467
00:21:26,250 --> 00:21:29,430
在缩放级别是黄色，但一堆是黑色， 

468
00:21:29,430 --> 00:21:33,310
一堆是浅黑色或深黄色。 

469
00:21:33,310 --> 00:21:35,790
这就是最终构成这个形象的原因。 

470
00:21:35,790 --> 00:21:39,990
所以这就是说你是否计算了屏幕上的所有像素

471
00:21:39,990 --> 00:21:43,260
然后将它乘以一，二，三个字节，即

472
00:21:43,260 --> 00:21:46,950
如果您听过这些条款，那么多少字节或千字节或兆字节， 

473
00:21:46,950 --> 00:21:51,670
将被存储在您的计算机上只是为了表示图像。 

474
00:21:51,670 --> 00:21:56,130
所以我们已经从电力转到了这里，可以说是零和一个， 

475
00:21:56,130 --> 00:21:58,050
到十进制，现在到颜色。 

476
00:21:58,050 --> 00:22:00,300
嗯，有了颜色，你可以得到图像。 

477
00:22:00,300 --> 00:22:01,540
什么后图像？ 

478
00:22:01,540 --> 00:22:05,280
好吧，我们这些天都以数字方式观看了视频或电影。 

479
00:22:05,280 --> 00:22:07,530
那么，什么是电影或视频文件？ 

480
00:22:07,530 --> 00:22:09,220
怎么可能实现？ 

481
00:22:11,770 --> 00:22:13,380
说得有点大声。 

482
00:22:13,380 --> 00:22:13,880
是啊。 

483
00:22:13,880 --> 00:22:15,120
这是一组图像。 

484
00:22:15,120 --> 00:22:16,910
如果你曾经听说过每秒帧数 - 

485
00:22:16,910 --> 00:22:20,750
像电影往往是每秒24帧或每秒30帧 - 

486
00:22:20,750 --> 00:22:23,510
这只是意味着一部典型的电影，每一秒

487
00:22:23,510 --> 00:22:26,810
每秒显示24或30张图像

488
00:22:26,810 --> 00:22:29,240
他们实际上飞得太快了

489
00:22:29,240 --> 00:22:31,970
不要注意到你只是在观看一系列静态图像。 

490
00:22:31,970 --> 00:22:35,270
就像小时候一样，如果你曾经有过那些纸质翻书的话

491
00:22:35,270 --> 00:22:38,060
大量的图纸，当你翻阅页面时， 

492
00:22:38,060 --> 00:22:40,770
你看东西在移动，但那只是因为你的眼睛是公正的

493
00:22:40,770 --> 00:22:45,230
看到一些快照在纸上移动的东西很快。 

494
00:22:45,230 --> 00:22:47,010
这实际上是一个视频文件。 

495
00:22:47,010 --> 00:22:49,850
所以如果你有一部iPhone并且你曾经玩过这些animojis， 

496
00:22:49,850 --> 00:22:53,180
可以这么说，所有这些都是小视频文件

497
00:22:53,180 --> 00:22:55,700
由很多很多图像组成

498
00:22:55,700 --> 00:23:00,060
您已保存在手机上或发送给其他人的短信。 

499
00:23:00,060 --> 00:23:03,150
如果我们只是想，现在，我们正处于视频点，但那没关系。 

500
00:23:03,150 --> 00:23:04,700
视频只是一堆图像。 

501
00:23:04,700 --> 00:23:06,380
图像只是一堆颜色。 

502
00:23:06,380 --> 00:23:07,940
颜色只是比特模式。 

503
00:23:07,940 --> 00:23:09,650
在一天结束时，比特只是

504
00:23:09,650 --> 00:23:12,800
电流进入我的机器或晶体管的结果

505
00:23:12,800 --> 00:23:14,570
打开和关闭开关。 

506
00:23:14,570 --> 00:23:18,170
就像我们突然想要掌握这整个故事一样，但我们都没有

507
00:23:18,170 --> 00:23:21,710
曾经需要在视频环境中真正考虑二进制

508
00:23:21,710 --> 00:23:25,400
因为视频只是一堆图像的抽象， 

509
00:23:25,400 --> 00:23:29,430
和图像只是顶部像素束的抽象，依此类推。 

510
00:23:29,430 --> 00:23:31,550
所以我们可以继续绘制这种层次结构

511
00:23:31,550 --> 00:23:34,010
只是让我们在更有用的层面上讨论事情， 

512
00:23:34,010 --> 00:23:35,930
我们进行这次谈话的原因是

513
00:23:35,930 --> 00:23:38,480
只是因为我们需要一种表达方式

514
00:23:38,480 --> 00:23:41,440
输入和输出问题。 

515
00:23:41,440 --> 00:23:46,400
让我暂停一下，看看是否有任何问题。 

516
00:23:46,400 --> 00:23:48,830
什么都没有？ 

517
00:23:48,830 --> 00:23:49,460
没有？ 

518
00:23:49,460 --> 00:23:49,960
行。 

519
00:23:49,960 --> 00:23:52,480
那黑盒子里面有什么？ 

520
00:23:52,480 --> 00:23:56,080
嗯，事实证明这是真正有趣的工作开始的地方

521
00:23:56,080 --> 00:23:58,100
发生了，思想开始进入。 

522
00:23:58,100 --> 00:24:01,810
这是众所周知的算法，一步一步的指示

523
00:24:01,810 --> 00:24:03,160
解决一些问题。 

524
00:24:03,160 --> 00:24:05,410
你们中的一些人之前可能已经解决了这个问题， 

525
00:24:05,410 --> 00:24:07,480
无论是数字还是文字，但当然， 

526
00:24:07,480 --> 00:24:09,770
如果你这些天手机里有联系人

527
00:24:09,770 --> 00:24:11,650
你有很多朋友和家人， 

528
00:24:11,650 --> 00:24:14,040
可能性是按名字或姓氏按字母顺序排列。 

529
00:24:14,040 --> 00:24:16,540
这些天你已经自动完成了，但它确实是公正的

530
00:24:16,540 --> 00:24:18,300
一长串的名字和数字。 

531
00:24:18,300 --> 00:24:20,890
这与昔日的实施并没有什么不同

532
00:24:20,890 --> 00:24:24,640
同样的问题，这个设备在这里，一个电话簿。 

533
00:24:24,640 --> 00:24:28,120
迈克史密斯说，现在，这本电话簿上可能有我们的朋友。 

534
00:24:28,120 --> 00:24:30,490
其姓氏以S开头。当然，我可以

535
00:24:30,490 --> 00:24:32,800
如果想找到迈克史密斯，首先要看

536
00:24:32,800 --> 00:24:37,780
在第一页，第二页，第三页，第四页， 

537
00:24:37,780 --> 00:24:39,790
最终，希望找到迈克史密斯。 

538
00:24:39,790 --> 00:24:42,640
的确，就是这个算法，这个一步一步的过程， 

539
00:24:42,640 --> 00:24:45,710
找到像迈克史密斯这样的人是对的？ 

540
00:24:45,710 --> 00:24:46,210
是啊。 

541
00:24:46,210 --> 00:24:46,940
这是正确的。 

542
00:24:46,940 --> 00:24:48,970
它的愚蠢和缓慢也许是因为它

543
00:24:48,970 --> 00:24:51,430
要把这个大小的电话簿永远拿走， 

544
00:24:51,430 --> 00:24:54,390
但这是正确的，因为如果迈克在这里，我实际上会找到他。 

545
00:24:54,390 --> 00:24:55,520
但我可以做得更好。 

546
00:24:55,520 --> 00:24:57,140
我一次可以做两件事。 

547
00:24:57,140 --> 00:25:00,880
所以两个，四个，六个，八个，十个或不完美 - 

548
00:25:00,880 --> 00:25:02,560
10,12,14。 

549
00:25:02,560 --> 00:25:04,450
那更快吗？ 

550
00:25:04,450 --> 00:25:06,640
显然，它的速度是原来的两倍。 

551
00:25:06,640 --> 00:25:08,470
这是对的吗？ 

552
00:25:08,470 --> 00:25:08,970
没有。 

553
00:25:08,970 --> 00:25:10,640
为什么不正确？ 

554
00:25:10,640 --> 00:25:11,140
是啊。 

555
00:25:11,140 --> 00:25:12,260
我可能会想他，对吗？ 

556
00:25:12,260 --> 00:25:15,560
迈克偶然可能最终夹在两页之间

557
00:25:15,560 --> 00:25:18,380
我有一个不幸的经历，只是想念他。 

558
00:25:18,380 --> 00:25:19,430
现在，它可以修复吗？ 

559
00:25:19,430 --> 00:25:20,030
是啊。 

560
00:25:20,030 --> 00:25:24,440
我可能，一旦我像SN或T部分一样，例如 - 

561
00:25:24,440 --> 00:25:26,690
我可以说，显然，我为迈克走得太远了。 

562
00:25:26,690 --> 00:25:28,830
让我只翻回一页或几页。 

563
00:25:28,830 --> 00:25:30,030
所以它是可以修复的。 

564
00:25:30,030 --> 00:25:33,380
只要我通过快速飞过这两倍节省时间， 

565
00:25:33,380 --> 00:25:37,310
我至少可以在最后花费更多的步骤

566
00:25:37,310 --> 00:25:38,420
找到迈克史密斯？ 

567
00:25:38,420 --> 00:25:39,920
但我们都不会那样做。 

568
00:25:39,920 --> 00:25:42,440
我们的Apple设备和Android设备肯定

569
00:25:42,440 --> 00:25:44,330
今天不要为了效率而这样做。 

570
00:25:44,330 --> 00:25:48,210
赔率是我们大多数人会在这样的书中找到找人的东西吗？ 

571
00:25:48,210 --> 00:25:48,710
是啊。 

572
00:25:48,710 --> 00:25:51,740
向大致中间开放或者可能偏向最后

573
00:25:51,740 --> 00:25:53,090
因为S在中间之后。 

574
00:25:53,090 --> 00:25:55,340
但是你知道，我在这里的电话簿中间。 

575
00:25:55,340 --> 00:25:58,730
而现在，如果我知道Mike在S中，因此在这里， 

576
00:25:58,730 --> 00:26:01,260
我在哪里知道他不是？ 

577
00:26:01,260 --> 00:26:03,200
他不是在开始，我可以字面意思

578
00:26:03,200 --> 00:26:07,670
把这样的问题撕成两半，比喻地丢掉一半

579
00:26:07,670 --> 00:26:11,540
问题的消失，并留下基本相同的问题， 

580
00:26:11,540 --> 00:26:12,470
但它的一半大。 

581
00:26:12,470 --> 00:26:13,670
我喜欢 - 不管 - 

582
00:26:13,670 --> 00:26:17,300
1,000页到500页，我现在可以重复这个算法。 

583
00:26:17,300 --> 00:26:18,160
我低下头。 

584
00:26:18,160 --> 00:26:19,120
我有点太过分了。 

585
00:26:19,120 --> 00:26:20,450
我现在在T部分。 

586
00:26:20,450 --> 00:26:20,990
好。 

587
00:26:20,990 --> 00:26:25,010
我可以再将问题撕成两半，扔掉一半， 

588
00:26:25,010 --> 00:26:29,180
取出500页的字节，一个250页的字节输出，现在离开了我自己

589
00:26:29,180 --> 00:26:31,040
只有250页。 

590
00:26:31,040 --> 00:26:32,720
请注意我到达这里的速度有多快。 

591
00:26:32,720 --> 00:26:39,260
前两个算法让我从1,000到999到998，或1,000到998 

592
00:26:39,260 --> 00:26:40,910
到996。 

593
00:26:40,910 --> 00:26:43,760
但在这里，我从1,000到500到250。 

594
00:26:43,760 --> 00:26:45,660
感觉就像我们在这里弥补时间。 

595
00:26:45,660 --> 00:26:47,540
事实上，如果我不断重复这个过程， 

596
00:26:47,540 --> 00:26:50,390
希望，我只剩下这本书的一页

597
00:26:50,390 --> 00:26:55,100
迈克是否参加，此时我会打电话给他。 

598
00:26:55,100 --> 00:26:58,850
所以这是一个诚实地利用我们所有直觉的算法

599
00:26:58,850 --> 00:27:01,130
有很多编程将会是， 

600
00:27:01,130 --> 00:27:04,480
正在考虑这样的问题，弄清楚如何划分和征服

601
00:27:04,480 --> 00:27:06,500
它，然后以某种方式表达自己

602
00:27:06,500 --> 00:27:09,030
然后，计算机可以为您解决该问题。 

603
00:27:09,030 --> 00:27:12,530
只是为了描绘这个算法有多好，嗯， 

604
00:27:12,530 --> 00:27:15,890
如果这只是我们在垂直方向上的一个非常抽象的图表， 

605
00:27:15,890 --> 00:27:18,530
或y轴，解决问题需要多长时间， 

606
00:27:18,530 --> 00:27:21,260
在横轴上问题有多大 - 

607
00:27:21,260 --> 00:27:24,330
所以越走越远，问题中的页面越多， 

608
00:27:24,330 --> 00:27:25,670
电话簿中的页面越多。 

609
00:27:25,670 --> 00:27:28,070
你在这里越高，秒数或页数越多

610
00:27:28,070 --> 00:27:29,270
转过身来。 

611
00:27:29,270 --> 00:27:32,720
第一个算法就像一个线性斜率， 

612
00:27:32,720 --> 00:27:35,660
可以这么说，因为对于书中的每一页， 

613
00:27:35,660 --> 00:27:37,190
它可能需要我一秒钟。 

614
00:27:37,190 --> 00:27:38,670
马上。 

615
00:27:38,670 --> 00:27:41,700
这只是与页面的一对一关系。 

616
00:27:41,700 --> 00:27:43,820
第二种算法，如果我绘制它，在哪里

617
00:27:43,820 --> 00:27:45,530
我飞得快了两倍，是什么

618
00:27:45,530 --> 00:27:47,070
那条线看起来像？ 

619
00:27:51,430 --> 00:27:51,930
是啊。 

620
00:27:51,930 --> 00:27:53,550
它看起来比这个要低。 

621
00:27:53,550 --> 00:27:56,550
它仍然是一条直线，因为现在有两比一

622
00:27:56,550 --> 00:27:59,580
关系，但如果你有一本有这么多页面的电话簿， 

623
00:27:59,580 --> 00:28:02,910
在第一个算法中，花了很长时间，在这里， 

624
00:28:02,910 --> 00:28:07,410
好吧，在第二种算法中，它将需要一半的步数，加或减

625
00:28:07,410 --> 00:28:09,840
或两个，如果你需要实际翻倍一点。 

626
00:28:09,840 --> 00:28:12,660
但是第三种算法就是我们称之为对数的算法。 

627
00:28:12,660 --> 00:28:15,030
如果n是电话簿中的页数， 

628
00:28:15,030 --> 00:28:16,890
第一种算法，在最坏的情况下， 

629
00:28:16,890 --> 00:28:18,640
可能需要所有n页才能找到Mike Smith。 

630
00:28:18,640 --> 00:28:21,470
第二种算法将采取一半的步骤，因为我

631
00:28:21,470 --> 00:28:22,920
一次两个飞过它。 

632
00:28:22,920 --> 00:28:26,250
但第三种算法看起来和感觉都是这样的。 

633
00:28:26,250 --> 00:28:30,720
它将是弯曲的，并且如此缓慢地上升，上升和上升， 

634
00:28:30,720 --> 00:28:33,950
其中的含义是Verizon或电话公司

635
00:28:33,950 --> 00:28:35,790
将电话簿中的页数加倍

636
00:28:35,790 --> 00:28:39,090
明年因为剑桥和萨默维尔在电话中合并在一起

637
00:28:39,090 --> 00:28:41,230
我们现在有2,000页。 

638
00:28:41,230 --> 00:28:45,150
那么，我的第三个算法需要多少步骤？ 

639
00:28:45,150 --> 00:28:45,690
只有一个。 

640
00:28:45,690 --> 00:28:48,300
因为我可以从问题中拿出1000页

641
00:28:48,300 --> 00:28:52,140
用这个聪明的算法，而我的前两个算法将采取它

642
00:28:52,140 --> 00:28:54,150
一次一页或两页。 

643
00:28:54,150 --> 00:28:58,740
所以这就是说我们必须大大增加这个问题的规模

644
00:28:58,740 --> 00:29:03,450
只是因为秒数或页面转弯明显增加。 

645
00:29:03,450 --> 00:29:05,490
因此，当我们开始学习编程时， 

646
00:29:05,490 --> 00:29:08,670
再次，它将依次利用这种直觉

647
00:29:08,670 --> 00:29:13,260
实际上比我们更有效地解决问题和代码

648
00:29:13,260 --> 00:29:17,820
可能没有那种直觉。 

649
00:29:17,820 --> 00:29:19,560
所以让我们现在正式化。 

650
00:29:19,560 --> 00:29:22,920
因此，这是一种非常直观的分解和征服问题的方式。 

651
00:29:22,920 --> 00:29:24,750
走进中间是有道理的， 

652
00:29:24,750 --> 00:29:26,940
撕掉它，然后去另一半或另一半

653
00:29:26,940 --> 00:29:29,010
再把它撕掉，等等。 

654
00:29:29,010 --> 00:29:33,990
但是，计算机，甚至像Alexa和Google Home一样酷，所有这些都是， 

655
00:29:33,990 --> 00:29:36,120
你不能真正与他们作为另一个人交谈

656
00:29:36,120 --> 00:29:37,800
让他们正确地执行事情。 

657
00:29:37,800 --> 00:29:41,400
我很难让Siri在我的手机上设置计时器。 

658
00:29:41,400 --> 00:29:43,950
所以我们还没到那里，所以我们还处于这个时代

659
00:29:43,950 --> 00:29:46,830
我们必须在计算机上如此精确， 

660
00:29:46,830 --> 00:29:50,430
语音激活或其他方式，因此现在进入伪代码。 

661
00:29:50,430 --> 00:29:52,560
伪代码没有正式的定义。 

662
00:29:52,560 --> 00:29:57,000
这只是说使用英语语法或任何口语的一种方式

663
00:29:57,000 --> 00:30:00,210
并且只是简洁而正确地表达自己

664
00:30:00,210 --> 00:30:03,090
使计算机或机器人甚至是另一个人

665
00:30:03,090 --> 00:30:05,640
可以理解你想说的是什么。 

666
00:30:05,640 --> 00:30:08,340
所以在这里，我建议，是一种编写的算法

667
00:30:08,340 --> 00:30:11,650
在伪代码中，英语就像语法一样，这只是我的观点。 

668
00:30:11,650 --> 00:30:13,530
我可以用多种方式写出来。 

669
00:30:13,530 --> 00:30:16,680
为了讨论，我已经从零开始编号，只是为了讨论， 

670
00:30:16,680 --> 00:30:18,900
但这似乎捕获了我在那里所做的事情。 

671
00:30:18,900 --> 00:30:20,220
拿起电话簿。 

672
00:30:20,220 --> 00:30:21,840
打开电话中间。 

673
00:30:21,840 --> 00:30:22,710
看看名字。 

674
00:30:22,710 --> 00:30:25,260
如果史密斯是其中的名字，请致电迈克。 

675
00:30:25,260 --> 00:30:27,660
否则，如果迈克史密斯在书的前面， 

676
00:30:27,660 --> 00:30:31,050
走到左边，特别是书的左半部分的中间， 

677
00:30:31,050 --> 00:30:32,910
然后回到第二步。 

678
00:30:32,910 --> 00:30:35,650
因为的确，我只是一次又一次地做同样的事情， 

679
00:30:35,650 --> 00:30:38,350
我不是永远这样做的原因是因为我每次都这样做

680
00:30:38,350 --> 00:30:42,060
通过开放和撕裂重复自己，我正在缩小问题。 

681
00:30:42,060 --> 00:30:44,850
我只能缩小一些固定有限大小的问题

682
00:30:44,850 --> 00:30:47,220
这么多次，直到我只有一页，等等

683
00:30:47,220 --> 00:30:51,060
如果我继续这个逻辑向右或向左看，或者只是放弃， 

684
00:30:51,060 --> 00:30:53,460
如果我在最后一页上找不到迈克， 

685
00:30:53,460 --> 00:30:56,700
这似乎更准确地捕获了代码。 

686
00:30:56,700 --> 00:30:59,640
好吧，我们现在实际上摘录了一些概念

687
00:30:59,640 --> 00:31:01,980
然后开始将它们应用于实际代码。 

688
00:31:01,980 --> 00:31:05,730
我敢说，这里用黄色突出显示的是所有的动词或动作。 

689
00:31:05,730 --> 00:31:08,550
这些是函数，因为我们将开始调用它们， 

690
00:31:08,550 --> 00:31:09,330
在这个算法中。 

691
00:31:09,330 --> 00:31:12,480
功能只是一个特定的步骤，一个特定的动作

692
00:31:12,480 --> 00:31:15,600
你需要做某事。 

693
00:31:15,600 --> 00:31:19,800
所以黄色在这里 - 拿起，打开，看，打电话，打开，退出

694
00:31:19,800 --> 00:31:20,940
都是动作或动词。 

695
00:31:20,940 --> 00:31:23,400
从此以后，我们称之为功能。 

696
00:31:23,400 --> 00:31:27,450
同时，在这里以黄色突出显示 - 如果，否则如果，否则如果，否则。 

697
00:31:27,450 --> 00:31:29,320
这些都是开始提问的一种方式。 

698
00:31:29,320 --> 00:31:32,620
如果你有一些熟悉的话可能会被称为什么？ 

699
00:31:32,620 --> 00:31:33,120
是。 

700
00:31:33,120 --> 00:31:35,490
如果你以前看过任何编程语言，那么结果很多， 

701
00:31:35,490 --> 00:31:36,650
会称之为这些条件。 

702
00:31:36,650 --> 00:31:39,060
他们是道路上的分支机构或众所周知的叉子。 

703
00:31:39,060 --> 00:31:40,840
如果这是真的，那就这样吧。 

704
00:31:40,840 --> 00:31:44,160
否则，可能会采取另一种方式，或者可能是第三或第四方向

705
00:31:44,160 --> 00:31:45,030
共。 

706
00:31:45,030 --> 00:31:48,630
同时，如果我们真正看到这些突出的短语 - 

707
00:31:48,630 --> 00:31:51,420
如果史密斯是名人之间，或史密斯是早期的书

708
00:31:51,420 --> 00:31:52,710
或史密斯后来在书中 - 

709
00:31:52,710 --> 00:31:56,440
这些是我们为了做出这个决定而要求的具体问题。 

710
00:31:56,440 --> 00:31:59,130
这些被称为布尔表达式，以绅士的名字命名

711
00:31:59,130 --> 00:32:01,170
几年前以Boole的姓氏命名。 

712
00:32:01,170 --> 00:32:03,120
因此布尔表达式只是一个问题

713
00:32:03,120 --> 00:32:07,340
有一个是或否答案，一个真正的错误答案，一个零

714
00:32:07,340 --> 00:32:08,710
回答，如果你愿意的话。 

715
00:32:08,710 --> 00:32:11,340
这对于计算机真正擅长的是一个很好的映射。 

716
00:32:11,340 --> 00:32:13,420
所以在条件中，你有布尔表达式

717
00:32:13,420 --> 00:32:16,680
决定你想要走的路上哪个叉子。 

718
00:32:16,680 --> 00:32:18,510
最后，在这里以黄色突出显示

719
00:32:18,510 --> 00:32:21,210
在几个地方回到第2步。 

720
00:32:21,210 --> 00:32:23,940
这是诱导某种循环或循环

721
00:32:23,940 --> 00:32:27,750
这告诉计算机一次又一次地做某事。 

722
00:32:27,750 --> 00:32:31,620
简而言之，我们已经在概念上拥有这些构建块。 

723
00:32:31,620 --> 00:32:34,260
事实证明，我们现在可以开始翻译它们了

724
00:32:34,260 --> 00:32:36,220
一种实际的编程语言。 

725
00:32:36,220 --> 00:32:38,310
我们将在CS50中介绍的第一种语言

726
00:32:38,310 --> 00:32:39,830
是一个叫做Scratch的东西。 

727
00:32:39,830 --> 00:32:41,670
事实证明这不是基于文本的语言， 

728
00:32:41,670 --> 00:32:44,130
比如我的英文伪代码，但它是图形化的

729
00:32:44,130 --> 00:32:46,680
事物看起来像你可以拖放的拼图

730
00:32:46,680 --> 00:32:48,870
如果这样做有逻辑意义，它们会相互连接。 

731
00:32:48,870 --> 00:32:51,390
事实上，有些人可能会像孩子一样在当天玩这个

732
00:32:51,390 --> 00:32:54,030
甚至更近，因为它实际上是针对性的

733
00:32:54,030 --> 00:32:55,910
在学生喜欢放学后的课程

734
00:32:55,910 --> 00:33:00,170
只是想学习更多有条理，更算法或计算思维。 

735
00:33:00,170 --> 00:33:02,930
而且我们将用它来探索这些建筑

736
00:33:02,930 --> 00:33:04,940
块，但也有一些。 

737
00:33:04,940 --> 00:33:08,600
事实证明，我们将在CS50及更高版本中探索其他语言， 

738
00:33:08,600 --> 00:33:12,560
像C这样的语言我们实际上会在下周快速过渡到

739
00:33:12,560 --> 00:33:16,580
然后将我们本周在Scratch中所做的事情转换为下周的C语言。 

740
00:33:16,580 --> 00:33:18,590
在Python和JavaScript等语言中

741
00:33:18,590 --> 00:33:21,650
和SQL，我们也将探讨，我们还有其他功能 - 

742
00:33:21,650 --> 00:33:24,020
能够将数据存储在变量中，可以这么说

743
00:33:24,020 --> 00:33:27,830
使用线程，这意味着让计算机一次做多件事， 

744
00:33:27,830 --> 00:33:30,920
事件，意味着倾听发生的事情，比如点击

745
00:33:30,920 --> 00:33:33,920
在页面上或人类打字甚至说些什么。 

746
00:33:33,920 --> 00:33:36,050
我们将能够完成你所做的所有事情

747
00:33:36,050 --> 00:33:38,180
在你自己的手机中是理所当然的。 

748
00:33:38,180 --> 00:33:41,040
我们首先会通过这个人来做这件事。 

749
00:33:41,040 --> 00:33:44,060
所以这是Scratch，这个编程附带的默认猫

750
00:33:44,060 --> 00:33:45,890
来自麻省理工学院媒体实验室的语言。 

751
00:33:45,890 --> 00:33:48,990
通过Scratch，我们可以开始编程让他向上移动， 

752
00:33:48,990 --> 00:33:52,550
向下，向左，向右，说些什么，说出什么，以及其他命令

753
00:33:52,550 --> 00:33:53,580
全部一起。 

754
00:33:53,580 --> 00:33:56,720
事实上，让我继续前进并切换上下文

755
00:33:56,720 --> 00:33:59,200
告诉你我在Scratch写的第一件事。 

756
00:33:59,200 --> 00:34:01,370
那是在我读研究生的那天

757
00:34:01,370 --> 00:34:03,720
和Scratch刚刚由麻省理工学院发明。 

758
00:34:03,720 --> 00:34:05,540
让我继续吧。 

759
00:34:05,540 --> 00:34:08,710
我把它称为奥斯卡时间。 

760
00:34:08,710 --> 00:34:11,630
如果我们可以让一名志愿者上场片刻。 

761
00:34:11,630 --> 00:34:14,180
你必须在舞台上和互联网上感到很舒服。 

762
00:34:14,180 --> 00:34:15,590
穿白衬衫怎么样？ 

763
00:34:15,590 --> 00:34:16,550
我先看到了你的手。 

764
00:34:16,550 --> 00:34:18,020
下来吧。 

765
00:34:18,020 --> 00:34:19,460
所以这是奥斯卡时间。 

766
00:34:19,460 --> 00:34:21,740
它是用Scratch语言实现的。 

767
00:34:21,740 --> 00:34:25,850
在一天结束时，所有这一切都在这个程序的引擎盖下

768
00:34:25,850 --> 00:34:29,190
是函数和循环和条件以及这些概念中的一些其他概念。 

769
00:34:29,190 --> 00:34:29,690
你好。 

770
00:34:29,690 --> 00:34:30,080
你叫什么名字？ 

771
00:34:30,080 --> 00:34:30,870
AVIVA：英杰华。 

772
00:34:30,870 --> 00:34:31,280
大卫马兰：英杰华。 

773
00:34:31,280 --> 00:34:31,710
大卫。 

774
00:34:31,710 --> 00:34:32,410
很高兴见到你。 

775
00:34:32,410 --> 00:34:33,980
来吧，来吧

776
00:34:33,980 --> 00:34:37,070
过了一会儿，我要继续点击

777
00:34:37,070 --> 00:34:39,230
左上角的绿旗，哪个

778
00:34:39,230 --> 00:34:40,460
打算玩这个游戏。 

779
00:34:40,460 --> 00:34:42,330
我们会在屏幕上看到说明。 

780
00:34:42,330 --> 00:34:45,810
[音乐播放] 

781
00:34:45,810 --> 00:34:50,300
奥斯卡:(唱歌）哦，我喜欢垃圾。 

782
00:34:50,300 --> 00:34:54,500
任何肮脏或肮脏或尘土飞扬的东西。 

783
00:34:54,500 --> 00:34:58,670
任何衣衫褴褛，腐烂或生锈的东西。 

784
00:34:58,670 --> 00:35:02,710
是的，我喜欢垃圾。 

785
00:35:02,710 --> 00:35:05,300
如果你真的想看到一些无用的东西，那就看看吧。 

786
00:35:05,300 --> 00:35:09,400
我这里有一个破旧破旧的运动鞋。 

787
00:35:09,400 --> 00:35:13,340
它全是洞，鞋带被撕裂。 

788
00:35:13,340 --> 00:35:17,710
我出生那天送给母亲的礼物。 

789
00:35:17,710 --> 00:35:21,270
我喜欢它，因为它是垃圾。 

790
00:35:21,270 --> 00:35:25,650
哦，我喜欢垃圾。 

791
00:35:25,650 --> 00:35:29,880
任何肮脏或肮脏或尘土飞扬的东西。 

792
00:35:29,880 --> 00:35:34,190
任何衣衫褴褛，腐烂或生锈的东西。 

793
00:35:34,190 --> 00:35:37,290
是的，我喜欢垃圾。 

794
00:35:37,290 --> 00:35:40,610
这是一些更腐烂的东西。 

795
00:35:40,610 --> 00:35:43,370
我这里有一些13个月大的报纸。 

796
00:35:43,370 --> 00:35:44,330
大卫马兰：好的。 

797
00:35:44,330 --> 00:35:46,950
每个人都为Aviva的掌声鼓掌。 

798
00:35:46,950 --> 00:35:47,750
谢谢。 

799
00:35:47,750 --> 00:35:48,250
这里。 

800
00:35:48,250 --> 00:35:48,750
英杰。 

801
00:35:48,750 --> 00:35:51,230
[掌声] 

802
00:35:51,230 --> 00:35:53,180
一点点CS50压力球。 

803
00:35:53,180 --> 00:35:56,150
这足以说，如果你厌倦了这首歌， 

804
00:35:56,150 --> 00:35:59,900
考虑一下8小时后我在调试和构建时有多累

805
00:35:59,900 --> 00:36:00,590
这个计划。 

806
00:36:00,590 --> 00:36:02,090
但请考虑一下我们刚看到的内容。 

807
00:36:02,090 --> 00:36:05,610
这是这个互动游戏，东西是动画和音乐正在播放。 

808
00:36:05,610 --> 00:36:09,560
但是，如果你专注于分解，可以这么说，这个程序只是

809
00:36:09,560 --> 00:36:13,520
基本构建块，这只是一些较低层次的大抽象

810
00:36:13,520 --> 00:36:15,380
级别的功能。 

811
00:36:15,380 --> 00:36:16,580
像这样的垃圾桶在这里。 

812
00:36:16,580 --> 00:36:18,830
目前，它只是一张照片，有时， 

813
00:36:18,830 --> 00:36:21,580
一旦Aviva将东西扔进垃圾桶，盖子就会出现

814
00:36:21,580 --> 00:36:24,680
奥斯卡出来了，他说了些什么，然后又回去了。 

815
00:36:24,680 --> 00:36:26,720
但那个动画超级简单。 

816
00:36:26,720 --> 00:36:31,490
它只是一个显示1,2,3或更多图像的序列然后显示

817
00:36:31,490 --> 00:36:33,920
回去创造动画的幻觉。 

818
00:36:33,920 --> 00:36:36,290
与此同时，每当奥斯卡说出一些话， 

819
00:36:36,290 --> 00:36:39,320
那是在所谓的变量中跟踪她的得分。 

820
00:36:39,320 --> 00:36:42,900
在代数中，你有x和y和z，但在编程中，你有同样的想法， 

821
00:36:42,900 --> 00:36:45,530
但通常更具描述性地称呼它们更有用， 

822
00:36:45,530 --> 00:36:46,370
喜欢你的分数。 

823
00:36:46,370 --> 00:36:48,620
所以在这个游戏中可能有一个变量叫做

824
00:36:48,620 --> 00:36:51,290
得分只是跟踪多少次

825
00:36:51,290 --> 00:36:53,240
英杰华把东西丢进垃圾桶里。 

826
00:36:53,240 --> 00:36:57,650
与此同时，垃圾本身，鞋子和报纸 - 甚至更多

827
00:36:57,650 --> 00:37:00,470
事情最终会发生 - 从天而降

828
00:37:00,470 --> 00:37:03,680
在某种随机位置，这是因为我编写了游戏

829
00:37:03,680 --> 00:37:06,230
只是为了在这里或在这里开始垃圾

830
00:37:06,230 --> 00:37:08,950
随着比赛的进行，让比赛变得更具挑战性。 

831
00:37:08,950 --> 00:37:11,540
事实上，随着时间的推移，事情开始越来越快， 

832
00:37:11,540 --> 00:37:14,550
像一个典型的游戏，变得越来越困难。 

833
00:37:14,550 --> 00:37:16,830
那么我们如何得到类似的东西呢？ 

834
00:37:16,830 --> 00:37:19,130
好吧，让我继续开放Scratch本身

835
00:37:19,130 --> 00:37:21,240
并介绍环境。 

836
00:37:21,240 --> 00:37:24,200
所以在Scratch中，你基本上有三个一般领域。 

837
00:37:24,200 --> 00:37:26,660
它是基于网络的，因此您可以在任何计算机上执行此操作。 

838
00:37:26,660 --> 00:37:29,510
在这里的左侧，你有那些拼图

839
00:37:29,510 --> 00:37:30,920
我刚才提到的。 

840
00:37:30,920 --> 00:37:36,140
这些拼图都映射到函数或循环或条件

841
00:37:36,140 --> 00:37:38,140
或变量，我们之前看到的事情，我是

842
00:37:38,140 --> 00:37:41,180
能够将它们按顺序拖放到中间

843
00:37:41,180 --> 00:37:43,040
将它们互连并编写我的程序， 

844
00:37:43,040 --> 00:37:44,430
我们马上就会做的。 

845
00:37:44,430 --> 00:37:48,330
与此同时，Scratch生活在这个阶段，这个世界，他可以向上移动， 

846
00:37:48,330 --> 00:37:49,250
向下，向左，向右。 

847
00:37:49,250 --> 00:37:50,870
你可以改变Scratch的样子。 

848
00:37:50,870 --> 00:37:53,300
你可以添加其他字符，也称为精灵， 

849
00:37:53,300 --> 00:37:55,140
为了让一次发生多件事。 

850
00:37:55,140 --> 00:37:56,680
当然，你可以全屏显示它。 

851
00:37:56,680 --> 00:38:00,410
所以刚才的奥斯卡时间游戏实际上是一大堆精灵。 

852
00:38:00,410 --> 00:38:02,250
奥斯卡的垃圾桶就是其中之一。 

853
00:38:02,250 --> 00:38:04,640
每一块垃圾都是另一个精灵。 

854
00:38:04,640 --> 00:38:07,050
报纸是精灵，等等。 

855
00:38:07,050 --> 00:38:11,250
因此，它们中的每一个都是同时并行运行的独立程序。 

856
00:38:11,250 --> 00:38:13,110
所以，让我真正让他做点什么。 

857
00:38:13,110 --> 00:38:16,770
事实证明，如果我跳到事件， 

858
00:38:16,770 --> 00:38:18,770
我将看到一个最强大的块

859
00:38:18,770 --> 00:38:22,000
从开始，这是绿色标志点击时。 

860
00:38:22,000 --> 00:38:24,000
这就是我与Aviva开始游戏的方式， 

861
00:38:24,000 --> 00:38:27,260
通过点击Scratch世界这个绿色标志。 

862
00:38:27,260 --> 00:38:29,030
如果我想阻止它，就像我一样，你

863
00:38:29,030 --> 00:38:31,130
可以点击红色停止标志说停止。 

864
00:38:31,130 --> 00:38:34,730
同时，绿旗，我可以不断

865
00:38:34,730 --> 00:38:37,220
通过拖放这个拼图来听。 

866
00:38:37,220 --> 00:38:39,710
点击绿色标志后，我想做什么？ 

867
00:38:39,710 --> 00:38:41,470
好吧，让我去看看。 

868
00:38:41,470 --> 00:38:43,140
这些只是不同的类别。 

869
00:38:43,140 --> 00:38:45,180
我们可以滚动浏览所有不同的彩色块， 

870
00:38:45,180 --> 00:38:47,240
但他们几乎只是做他们说的话。 

871
00:38:47,240 --> 00:38:50,370
我会去看看，我知道那里有一个叫做的块

872
00:38:50,370 --> 00:38:53,990
比如说，我将继续选择最规范的计算机科学

873
00:38:53,990 --> 00:38:55,500
东西 - 你好世界 - 

874
00:38:55,500 --> 00:38:56,160
在这个盒子里。 

875
00:38:56,160 --> 00:38:58,550
所以注意功能本身实际上可以

876
00:38:58,550 --> 00:39:01,610
拿输入和输入这个功能，比方说， 

877
00:39:01,610 --> 00:39:03,080
将成为你好世界。 

878
00:39:03,080 --> 00:39:06,530
如果我现在去绿旗并点击它 - 

879
00:39:06,530 --> 00:39:07,530
你好，世界。 

880
00:39:07,530 --> 00:39:08,030
行。 

881
00:39:08,030 --> 00:39:11,000
所以不是那么困难。不是那么有趣。 

882
00:39:11,000 --> 00:39:14,810
但它确实完成了工作，所以我的计划确实就是这样。 

883
00:39:14,810 --> 00:39:17,060
那么，我怎么能让这个更有趣呢？ 

884
00:39:17,060 --> 00:39:19,730
只是说，你好世界并不是那么引人注目。 

885
00:39:19,730 --> 00:39:20,620
嗯，你知道吗？ 

886
00:39:20,620 --> 00:39:21,170
让我想想。 

887
00:39:21,170 --> 00:39:22,550
让我撤消这个。 

888
00:39:22,550 --> 00:39:24,380
让我向下滚动到感应。 

889
00:39:24,380 --> 00:39:25,880
请注意这一点。 

890
00:39:25,880 --> 00:39:28,490
函数也可以从人类输入

891
00:39:28,490 --> 00:39:32,270
并且函数可以将一个值（一个所谓的返回值）交还给您。 

892
00:39:32,270 --> 00:39:35,090
所以这个块在这里，问一些东西 - 默认情况下，它说， 

893
00:39:35,090 --> 00:39:36,500
你的名字和体重是多少 - 

894
00:39:36,500 --> 00:39:39,350
是Scratch内置的另一个功能，允许我这样做。 

895
00:39:39,350 --> 00:39:41,420
所以我要继续把它拖到这里

896
00:39:41,420 --> 00:39:43,950
我会说，你叫什么名字？ 

897
00:39:43,950 --> 00:39:46,990
现在请注意，此块下面是一个特殊块， 

898
00:39:46,990 --> 00:39:48,650
无论块返回什么。 

899
00:39:48,650 --> 00:39:51,560
所以答案就是人类要输入的内容。 

900
00:39:51,560 --> 00:39:56,060
如果我现在要说出人类所输入的内容，让我再去看看。 

901
00:39:56,060 --> 00:39:57,060
去说吧。 

902
00:39:57,060 --> 00:39:59,150
并注意到这些块是有点磁性的。 

903
00:39:59,150 --> 00:40:00,340
他们想要拼凑在一起。 

904
00:40:00,340 --> 00:40:02,130
所以我要继续前进，放手去那里。 

905
00:40:02,130 --> 00:40:05,160
如果我回到传感并抓住答案， 

906
00:40:05,160 --> 00:40:07,730
请注意，即使它的大小不一样， 

907
00:40:07,730 --> 00:40:09,740
它会成长，现在，我可以

908
00:40:09,740 --> 00:40:12,890
让我的程序询问用户他或她的名字是什么然后

909
00:40:12,890 --> 00:40:14,930
说出答案是什么。 

910
00:40:14,930 --> 00:40:18,020
所以让我继续前进并停止并再次点击播放。 

911
00:40:18,020 --> 00:40:21,020
注意它是在问我的名字，所以让我继续输入大卫。 

912
00:40:21,020 --> 00:40:22,020
输入。 

913
00:40:22,020 --> 00:40:22,520
好。 

914
00:40:22,520 --> 00:40:24,770
迎接某人有点奇怪的方式。 

915
00:40:24,770 --> 00:40:25,790
大卫。 

916
00:40:25,790 --> 00:40:28,490
所以清理它有点好。 

917
00:40:28,490 --> 00:40:29,330
所以你知道吗？ 

918
00:40:29,330 --> 00:40:31,380
我知道这只是因为之前已经戳过。 

919
00:40:31,380 --> 00:40:33,230
乍一看并非所有这些都是显而易见的。 

920
00:40:33,230 --> 00:40:36,320
但事实证明，在运营商，类别， 

921
00:40:36,320 --> 00:40:39,070
这里有这个东西 - 加入苹果和香蕉。 

922
00:40:39,070 --> 00:40:40,320
这只是默认值。 

923
00:40:40,320 --> 00:40:41,460
你可以改变它们。 

924
00:40:41,460 --> 00:40:42,710
因为我想做什么？ 

925
00:40:42,710 --> 00:40:47,720
我想打招呼，大卫，或者其他任何人，所以我有点想打个招呼，逗号， 

926
00:40:47,720 --> 00:40:49,710
然后，大卫 - 无论人类输入什么。 

927
00:40:49,710 --> 00:40:51,090
这就是加入让你做的事情。 

928
00:40:51,090 --> 00:40:54,880
它允许您以某种方式连接或连接两个短语

929
00:40:54,880 --> 00:40:56,140
由您或用户提供。 

930
00:40:56,140 --> 00:40:58,690
所以，让我把它拉出来，答案。 

931
00:40:58,690 --> 00:41:00,750
让我继续前进并抓住连接块。 

932
00:41:00,750 --> 00:41:02,650
请注意，它也会增长。 

933
00:41:02,650 --> 00:41:09,010
让我继续说，你好，逗号，空间，现在，把答案拖到那里。 

934
00:41:09,010 --> 00:41:11,770
注意这个嵌套。 

935
00:41:11,770 --> 00:41:12,520
就像数学一样。 

936
00:41:12,520 --> 00:41:14,360
这种功能嵌套。 

937
00:41:14,360 --> 00:41:18,700
我可以先把这两件事作为输入加入你好并回答

938
00:41:18,700 --> 00:41:20,710
然后传递给他们说另一个输入

939
00:41:20,710 --> 00:41:22,480
因为这些东西都是分层的。 

940
00:41:22,480 --> 00:41:26,420
所以现在，如果我停下来再玩一遍并说，大卫 - 

941
00:41:26,420 --> 00:41:27,250
你好，大卫。 

942
00:41:27,250 --> 00:41:30,700
现在，我们有一个更有趣的交互式程序的材料

943
00:41:30,700 --> 00:41:32,290
这不仅仅是硬编码。 

944
00:41:32,290 --> 00:41:38,080
当然，它几乎不像奥斯卡时代那样可听见。 

945
00:41:38,080 --> 00:41:39,380
所以让我继续这样做。 

946
00:41:39,380 --> 00:41:43,660
让我重新开始，像对待猫一样对待Scratch 

947
00:41:43,660 --> 00:41:45,570
然后开始叫喵喵的声音。 

948
00:41:45,570 --> 00:41:48,130
所以事实证明有一类称为声音的块， 

949
00:41:48,130 --> 00:41:50,740
在声音中，播放一些默认声音。 

950
00:41:50,740 --> 00:41:52,400
所以开始喵喵叫。 

951
00:41:52,400 --> 00:41:54,070
现在，事情会变得有点可爱。 

952
00:41:54,070 --> 00:41:55,480
[喵] 

953
00:41:55,980 --> 00:41:56,940
噢。 

954
00:41:56,940 --> 00:41:58,010
现在，又来了。 

955
00:41:58,010 --> 00:41:59,010
[喵] 

956
00:41:59,510 --> 00:42:03,200
我可以通过[MEOW]模拟一只猫站在这里一段时间

957
00:42:03,200 --> 00:42:04,610
并保持单击此按钮。 

958
00:42:04,610 --> 00:42:05,360
但你知道吗？ 

959
00:42:05,360 --> 00:42:07,890
让我喵喵几次，因为那更加现实。 

960
00:42:07,890 --> 00:42:09,580
所以让我抓住第二个和第三个。 

961
00:42:09,580 --> 00:42:11,570
而且你可以获得无限的块供应。 

962
00:42:11,570 --> 00:42:12,230
让我来玩。 

963
00:42:12,230 --> 00:42:13,620
[喵] 

964
00:42:16,490 --> 00:42:17,320
好像是个bug。 

965
00:42:17,320 --> 00:42:17,990
让我们再试一次。 

966
00:42:17,990 --> 00:42:18,780
玩。 

967
00:42:18,780 --> 00:42:20,140
[喵] 

968
00:42:21,050 --> 00:42:23,570
这是我的第一个错误或错误。 

969
00:42:23,570 --> 00:42:24,710
这看起来很正确。 

970
00:42:24,710 --> 00:42:28,700
它说绿色标志点击时，开始声音喵喵，开始声音喵喵， 

971
00:42:28,700 --> 00:42:30,020
开始喵喵叫。 

972
00:42:30,020 --> 00:42:33,490
为什么我只听一个喵？ 

973
00:42:33,490 --> 00:42:34,980
是啊。 

974
00:42:34,980 --> 00:42:37,960
它们在同一时间或同时接近同一时间

975
00:42:37,960 --> 00:42:41,050
声音有点绊倒，只是重叠， 

976
00:42:41,050 --> 00:42:41,550
对？ 

977
00:42:41,550 --> 00:42:43,720
字面上说，块开始声音喵喵。 

978
00:42:43,720 --> 00:42:45,120
但电脑真的很快。 

979
00:42:45,120 --> 00:42:48,030
如果你听说过gigahertz的表达式，那就是衡量单位。 

980
00:42:48,030 --> 00:42:52,300
如果您的计算机有一个千兆赫的CPU，中央处理单元或大脑， 

981
00:42:52,300 --> 00:42:55,660
这意味着它每秒可以完成十亿件事。 

982
00:42:55,660 --> 00:42:59,200
它当然可以超快速地启动三种声音。 

983
00:42:59,200 --> 00:43:02,200
如果他们真的一个接一个地发生

984
00:43:02,200 --> 00:43:05,290
在声音结束之前，你只是听到一个净效果。 

985
00:43:05,290 --> 00:43:06,680
那我们怎么解决这个问题呢？ 

986
00:43:06,680 --> 00:43:09,880
好吧，我实际上可以用这个块来解决这个问题 - 

987
00:43:09,880 --> 00:43:12,190
发出声音喵喵直到完成。 

988
00:43:12,190 --> 00:43:15,550
播放声音喵喵直到完成。 

989
00:43:15,550 --> 00:43:16,240
现在。 

990
00:43:16,240 --> 00:43:18,510
[喵喵叫] 

991
00:43:18,510 --> 00:43:19,010
好。 

992
00:43:19,010 --> 00:43:20,890
有点不高兴，这只特别的猫， 

993
00:43:20,890 --> 00:43:22,730
但至少它现在更正确了。 

994
00:43:22,730 --> 00:43:25,420
事实证明，如果我去控制 - 

995
00:43:25,420 --> 00:43:26,100
你知道吗？ 

996
00:43:26,100 --> 00:43:28,770
这里有这个块 - 等待几秒钟。 

997
00:43:28,770 --> 00:43:30,940
我可以继续这里插入。 

998
00:43:30,940 --> 00:43:32,560
我在这里再做一次。 

999
00:43:32,560 --> 00:43:33,510
现在，点击播放。 

1000
00:43:33,510 --> 00:43:36,910
[喵喵叫] 

1001
00:43:38,730 --> 00:43:40,170
你知道，这还不错。 

1002
00:43:40,170 --> 00:43:43,230
现在听起来更加真实。 

1003
00:43:43,230 --> 00:43:45,510
但老实说，如果我继续这样做 - 或者你知道吗？ 

1004
00:43:45,510 --> 00:43:47,840
您实际上可以右键单击或控制单击块， 

1005
00:43:47,840 --> 00:43:51,020
复制它们，如果需要，只需复制和粘贴即可。 

1006
00:43:51,020 --> 00:43:55,440
所以，如果我这样做，现在，它只会去六次。 

1007
00:43:55,440 --> 00:43:57,390
然后我可以再次复制并去12次。 

1008
00:43:57,390 --> 00:43:59,140
但是必须有更好的方法，对吧？ 

1009
00:43:59,140 --> 00:44:00,480
现在这是糟糕的编程。 

1010
00:44:00,480 --> 00:44:01,770
这是糟糕的设计。 

1011
00:44:01,770 --> 00:44:04,620
因为我实际上是在复制和粘贴，尽管是图形化的。 

1012
00:44:04,620 --> 00:44:07,170
但是我们已经看到了一个构建块

1013
00:44:07,170 --> 00:44:09,390
我们可以更好地设计这个程序。 

1014
00:44:09,390 --> 00:44:11,190
这是正确的，但设计不合理。 

1015
00:44:11,190 --> 00:44:15,820
我需要用什么构建块来使它更干净一点？ 

1016
00:44:15,820 --> 00:44:16,320
好。 

1017
00:44:16,320 --> 00:44:16,860
一个四循环。 

1018
00:44:16,860 --> 00:44:18,150
在Scratch中不存在。 

1019
00:44:18,150 --> 00:44:21,300
但循环从根本上会循环地做一些事情。 

1020
00:44:21,300 --> 00:44:23,980
事实上，如果我受到控制并开始探索， 

1021
00:44:23,980 --> 00:44:26,910
你会注意到这里有一些可能适用的块。 

1022
00:44:26,910 --> 00:44:29,010
重复阻止了很多次

1023
00:44:29,010 --> 00:44:32,400
或永远的块，两者听起来像循环或循环。 

1024
00:44:32,400 --> 00:44:35,460
当然，让我继续前进，我可以扔掉积木

1025
00:44:35,460 --> 00:44:37,110
只需将它们拖到左侧即可。 

1026
00:44:37,110 --> 00:44:40,080
让我把它拉出来一秒钟。 

1027
00:44:40,080 --> 00:44:44,460
然后就说永远播放这个声音，然后等一秒钟。 

1028
00:44:44,460 --> 00:44:47,070
所以现在，我的程序看起来像这样。 

1029
00:44:47,070 --> 00:44:50,360
[喵喵叫] 

1030
00:44:53,770 --> 00:44:56,770
你知道，我们永远不会知道它是否在技术上是正确的，因为它只是

1031
00:44:56,770 --> 00:45:00,130
我们认为永远都会去，但看起来这是正确的。 

1032
00:45:00,130 --> 00:45:02,320
它的代码少得多，而且更容易

1033
00:45:02,320 --> 00:45:05,260
维持，因为如果我想让他变得困倦， 

1034
00:45:05,260 --> 00:45:09,150
然后我可以说两秒钟。 

1035
00:45:09,150 --> 00:45:10,560
[喵] 

1036
00:45:11,060 --> 00:45:13,730
你知道，我们可以随时随地调整。 

1037
00:45:13,730 --> 00:45:15,710
但是，让我们开始结合其中的一些想法

1038
00:45:15,710 --> 00:45:19,460
现在，改变它的最终效果是什么。 

1039
00:45:19,460 --> 00:45:22,310
让我继续，打开一个我提前做的例子。 

1040
00:45:22,310 --> 00:45:24,260
这个名叫Count Zero。 

1041
00:45:24,260 --> 00:45:27,510
我们稍后会将它放在网站上，以便您可以随意使用。 

1042
00:45:27,510 --> 00:45:29,630
这与数羊相反。 

1043
00:45:29,630 --> 00:45:32,180
而不是我或睡觉的人数羊， 

1044
00:45:32,180 --> 00:45:34,440
这只羊会算数。 

1045
00:45:34,440 --> 00:45:37,130
所以让我继续前进吧。 

1046
00:45:37,130 --> 00:45:41,720
而且很可能，他似乎只计算1,2,3。 

1047
00:45:41,720 --> 00:45:42,800
但那是为什么呢？ 

1048
00:45:42,800 --> 00:45:44,420
他只会永远数数。 

1049
00:45:44,420 --> 00:45:47,330
但是，让我们看看他永远计数的街区。 

1050
00:45:47,330 --> 00:45:49,420
单击绿色标记时，设置计数器。 

1051
00:45:49,420 --> 00:45:51,720
原来这个橙色框是我们所谓的变量。 

1052
00:45:51,720 --> 00:45:53,570
所以在代数中，它就像x或y或z。 

1053
00:45:53,570 --> 00:45:54,780
那些不是描述性的。 

1054
00:45:54,780 --> 00:45:58,490
我把它称为一个计数器，但我可以将其称为x或y或z。 

1055
00:45:58,490 --> 00:46:03,080
然后我永远地说计数器一秒钟，然后等一秒钟， 

1056
00:46:03,080 --> 00:46:04,910
然后将计数器改为1，其中

1057
00:46:04,910 --> 00:46:06,410
技术上意味着只是增加它。 

1058
00:46:06,410 --> 00:46:07,430
加1吧。 

1059
00:46:07,430 --> 00:46:10,190
因此，绵羊只会计数起来。 

1060
00:46:10,190 --> 00:46:11,900
现在，这有点乏味，但那是

1061
00:46:11,900 --> 00:46:15,120
有点像数羊，当然要睡着了。 

1062
00:46:15,120 --> 00:46:18,960
但是，如果羊实际上喜欢计数更快一点怎么办？ 

1063
00:46:18,960 --> 00:46:21,500
好吧，让我去这里的运营商。 

1064
00:46:21,500 --> 00:46:24,860
乘法听起来像它可以让我们更快地放置。 

1065
00:46:24,860 --> 00:46:27,260
让我继续前进并转向变量。 

1066
00:46:27,260 --> 00:46:29,830
而不是将计数器改为1， 

1067
00:46:29,830 --> 00:46:32,290
让我继续，继续把它设置为其他东西。 

1068
00:46:32,290 --> 00:46:33,530
所以让我拖放一下。 

1069
00:46:33,530 --> 00:46:38,360
特别是将计数器设置为某种东西

1070
00:46:38,360 --> 00:46:44,810
计数器乘以两次，从而加倍，加倍，加倍，加倍。 

1071
00:46:44,810 --> 00:46:47,250
可以说，这似乎会增长得更快。 

1072
00:46:47,250 --> 00:46:49,400
让我们来看看。 

1073
00:46:49,400 --> 00:46:54,210
1,2,4。 

1074
00:46:54,210 --> 00:46:56,780
所以他的数量更快，但仍然有点单调乏味。 

1075
00:46:56,780 --> 00:46:58,640
如果我们改为做怎么办？ 

1076
00:46:58,640 --> 00:47:02,660
让我们停止等待，让我们继续前进，看看， 

1077
00:47:02,660 --> 00:47:06,960
不要说反击一秒钟，但让我们快速说反击。 

1078
00:47:06,960 --> 00:47:08,300
所以我要说反击。 

1079
00:47:08,300 --> 00:47:09,290
哎呦。 

1080
00:47:09,290 --> 00:47:13,460
我要说计数器，然后我要把它设置为自己的时间2。 

1081
00:47:13,460 --> 00:47:14,560
所以这就是我们所处的位置。 

1082
00:47:14,560 --> 00:47:18,950
初始化，或者首先将计数器设置为1，然后将其加倍， 

1083
00:47:18,950 --> 00:47:21,930
然后加倍，然后加倍，一路上说。 

1084
00:47:21,930 --> 00:47:23,690
所以我们走了。 

1085
00:47:23,690 --> 00:47:26,720
这很让人佩服。 

1086
00:47:26,720 --> 00:47:32,320
所以现在羊到目前为止已经计到了10到60。 

1087
00:47:32,320 --> 00:47:34,160
10到100。 

1088
00:47:34,160 --> 00:47:34,660
好。 

1089
00:47:34,660 --> 00:47:39,370
现在，它甚至不适合讲话泡泡，但他还在继续。 

1090
00:47:39,370 --> 00:47:41,380
他能走多远？ 

1091
00:47:41,380 --> 00:47:45,970
计算机中最重要的数字是多少？ 

1092
00:47:45,970 --> 00:47:49,410
有人想猜吗？ 

1093
00:47:49,410 --> 00:47:51,400
可能会在这里一段时间。 

1094
00:47:51,400 --> 00:47:54,130
现在10到270号。 

1095
00:47:54,130 --> 00:47:57,530
你有多高，或者更确切地说 - 

1096
00:47:57,530 --> 00:47:58,030
好。 

1097
00:47:58,030 --> 00:48:01,010
所以我们放弃了，只是称它为无限。 

1098
00:48:01,010 --> 00:48:03,340
所以事实证明无限确实有一个确切的价值 - 

1099
00:48:03,340 --> 00:48:05,680
10到250左右。 

1100
00:48:05,680 --> 00:48:07,150
但这里发生了什么？ 

1101
00:48:07,150 --> 00:48:09,490
好吧，因为电脑，在一天结束时， 

1102
00:48:09,490 --> 00:48:12,700
只是以数字方式存储信息 - 但这些信息是数字化的

1103
00:48:12,700 --> 00:48:15,640
使用这些较低级别使用电力进行物理存储

1104
00:48:15,640 --> 00:48:16,990
开关称为晶体管。 

1105
00:48:16,990 --> 00:48:20,200
在一天结束时，我的手机，笔记本电脑，任何有问题的设备

1106
00:48:20,200 --> 00:48:22,510
只有有限数量的东西。 

1107
00:48:22,510 --> 00:48:24,380
我只有有限数量的手指。 

1108
00:48:24,380 --> 00:48:26,800
使用一元，我的旧学校hashmark方法， 

1109
00:48:26,800 --> 00:48:28,360
我可以数到五手。 

1110
00:48:28,360 --> 00:48:32,380
使用二进制文件，我声称在这方面我可以算到31。 

1111
00:48:32,380 --> 00:48:33,610
但它仍然是有限的。 

1112
00:48:33,610 --> 00:48:37,270
我不能指望这只手上无限，因为我只有五根手指。 

1113
00:48:37,270 --> 00:48:40,570
类似地，计算机只有这么多晶体管

1114
00:48:40,570 --> 00:48:43,240
许多字节或内存位，在某些时候， 

1115
00:48:43,240 --> 00:48:45,790
程序员必须考虑他是什么

1116
00:48:45,790 --> 00:48:48,580
或者当用户想要数到你的数量时，她会去做

1117
00:48:48,580 --> 00:48:51,080
不能再适合它了。 

1118
00:48:51,080 --> 00:48:54,310
你必须放弃这样，半准确地说出一些东西

1119
00:48:54,310 --> 00:48:57,980
或者您必须以其他方式处理该问题。 

1120
00:48:57,980 --> 00:49:01,180
我们会在C到达时看到你如何处理这个问题

1121
00:49:01,180 --> 00:49:03,730
必须直截了当，而且确实有很多软件

1122
00:49:03,730 --> 00:49:05,610
那里没有处理这个问题。 

1123
00:49:05,610 --> 00:49:07,660
而且，如果你这样，我们所有人都有程序

1124
00:49:07,660 --> 00:49:10,180
输入足够大的单词或足够大的数字， 

1125
00:49:10,180 --> 00:49:12,970
他们可能会很好地破坏或崩溃或冻结

1126
00:49:12,970 --> 00:49:16,600
因为与麻省理工学院不同，人类并没有预料到这可能是真的

1127
00:49:16,600 --> 00:49:17,890
发生并处理它。 

1128
00:49:17,890 --> 00:49:19,310
好吧，让我继续这样做吧。 

1129
00:49:19,310 --> 00:49:22,780
让我打开这个程序，看看我们现在是否无法读取代码。 

1130
00:49:22,780 --> 00:49:28,330
这被称为Pet Zero，这是一个模拟宠物的程序。 

1131
00:49:28,330 --> 00:49:31,630
所以，如果我点击播放并且不要触摸键盘， 

1132
00:49:31,630 --> 00:49:35,350
似乎没有任何事情发生，但如果我现在把光标移到猫身上 - 

1133
00:49:35,350 --> 00:49:36,800
[喵] 

1134
00:49:36,800 --> 00:49:37,770
噢。 

1135
00:49:37,770 --> 00:49:38,590
这有点可爱。 

1136
00:49:38,590 --> 00:49:39,280
[喵] 

1137
00:49:39,280 --> 00:49:42,790
现在，当你养宠物时，它更只是喵喵叫。 

1138
00:49:42,790 --> 00:49:43,480
为什么？ 

1139
00:49:43,480 --> 00:49:45,640
好吧，请注意我添加了一些其他构建块。 

1140
00:49:45,640 --> 00:49:48,130
我们之前没有使用过这个，但直观地说

1141
00:49:48,130 --> 00:49:49,630
可能很清楚。 

1142
00:49:49,630 --> 00:49:52,660
单击绿色标记时，请永远执行以下操作。 

1143
00:49:52,660 --> 00:49:56,070
如果猫正在触摸鼠标指针 - 这个东西是蓝色的

1144
00:49:56,070 --> 00:49:58,030
我们之前称之为布尔表达式。 

1145
00:49:58,030 --> 00:50:00,760
它有一个是/否，一个真/假，一个/零答案。 

1146
00:50:00,760 --> 00:50:03,560
触摸鼠标指针是小滴的选项之一

1147
00:50:03,560 --> 00:50:05,150
如果你修补它，就在这里。 

1148
00:50:05,150 --> 00:50:08,290
所以，如果猫正在触摸鼠标指针，那么只有这样， 

1149
00:50:08,290 --> 00:50:10,450
发出声音喵喵直到完成。 

1150
00:50:10,450 --> 00:50:14,200
所以我们现在将函数与带有条件的循环结合起来。 

1151
00:50:14,200 --> 00:50:16,330
但为什么循环呢？ 

1152
00:50:16,330 --> 00:50:19,390
当我养宠物时，猫只会喵喵叫一次。 

1153
00:50:19,390 --> 00:50:21,580
为什么我在这里永远做什么？ 

1154
00:50:24,490 --> 00:50:25,530
有人 - 是的

1155
00:50:28,600 --> 00:50:29,100
是啊。 

1156
00:50:29,100 --> 00:50:32,910
我可能想再次宠爱它，所以我希望程序能够预料到这一点。 

1157
00:50:32,910 --> 00:50:36,480
老实说，如果我省略了这个永远的块和我的程序

1158
00:50:36,480 --> 00:50:39,130
相反看起来像这样 - 

1159
00:50:39,130 --> 00:50:40,890
所以让我摆脱这个 - 这个 - 

1160
00:50:40,890 --> 00:50:45,780
然后我点击了播放，现在，我将鼠标悬停在他身上， 

1161
00:50:45,780 --> 00:50:47,550
为什么它甚至不工作一次？ 

1162
00:50:51,540 --> 00:50:52,090
再说一遍。 

1163
00:50:56,700 --> 00:50:57,200
是啊。 

1164
00:50:57,200 --> 00:51:00,740
所以我的意思是，在这一点上，如果我能总结一下， 

1165
00:51:00,740 --> 00:51:03,080
电脑真是太快了，已经这么快了

1166
00:51:03,080 --> 00:51:07,190
当我把光标移到猫身上时，就发生了

1167
00:51:07,190 --> 00:51:10,220
我点击了游戏，我没有碰到那只猫。 

1168
00:51:10,220 --> 00:51:12,780
可以这么说，这些块从上到下执行。 

1169
00:51:12,780 --> 00:51:13,970
这就是该计划。 

1170
00:51:13,970 --> 00:51:16,970
因此，当我将光标移动到cat时，程序结束了。 

1171
00:51:16,970 --> 00:51:17,760
它不是在听。 

1172
00:51:17,760 --> 00:51:21,960
永远这样，我实际上可以永远倾听某些事情

1173
00:51:21,960 --> 00:51:23,430
实际发生。 

1174
00:51:23,430 --> 00:51:26,000
如果我想要做的事情不仅仅是某些事情是真的， 

1175
00:51:26,000 --> 00:51:27,300
但处理两个案件？ 

1176
00:51:27,300 --> 00:51:28,340
如果否则。 

1177
00:51:28,340 --> 00:51:31,130
那么，让我继续开放Pet One。 

1178
00:51:31,130 --> 00:51:32,870
这是另一个例子。 

1179
00:51:32,870 --> 00:51:37,310
在读完这段代码之后，有人可能会形容一下

1180
00:51:37,310 --> 00:51:38,810
这个程序会改为吗？ 

1181
00:51:42,290 --> 00:51:42,790
是啊。 

1182
00:51:53,790 --> 00:51:54,300
究竟。 

1183
00:51:54,300 --> 00:51:55,750
让我更口头地总结一下。 

1184
00:51:55,750 --> 00:51:59,590
所以，如果这一次，你正在触摸猫，它会发出咆哮声。 

1185
00:51:59,590 --> 00:52:01,950
不然，它只是甜蜜地喵喵叫。 

1186
00:52:01,950 --> 00:52:05,830
所以这一次，它每秒都在喵喵叫一次， 

1187
00:52:05,830 --> 00:52:08,850
但如果你触摸这只特殊的猫，它就不喜欢它了。 

1188
00:52:08,850 --> 00:52:09,660
所以玩。 

1189
00:52:09,660 --> 00:52:10,570
[喵] 

1190
00:52:10,570 --> 00:52:11,070
喵。 

1191
00:52:11,070 --> 00:52:12,310
[喵] 

1192
00:52:12,310 --> 00:52:13,130
喵。 

1193
00:52:13,130 --> 00:52:14,350
[喵] 

1194
00:52:14,350 --> 00:52:15,360
现在。 

1195
00:52:15,360 --> 00:52:16,320
[怒吼] 

1196
00:52:16,320 --> 00:52:17,640
别碰猫。 

1197
00:52:17,640 --> 00:52:20,160
所以现在，我们可能以两种不同的方式进行互动

1198
00:52:20,160 --> 00:52:22,970
通过两条不同的道路，你可以走下去。 

1199
00:52:22,970 --> 00:52:25,560
好吧，让我们实际上做一些更具互动性的东西。 

1200
00:52:25,560 --> 00:52:27,730
让我继续，打开另一个例子。 

1201
00:52:27,730 --> 00:52:29,850
这个叫做Bounce Zero，因为现在，我们

1202
00:52:29,850 --> 00:52:33,690
可以从Oscar Time开始看到一些设计元素。 

1203
00:52:33,690 --> 00:52:36,360
就像这样现在它变得有点有趣了。 

1204
00:52:36,360 --> 00:52:38,350
这里到底发生了什么？ 

1205
00:52:38,350 --> 00:52:40,470
那么让我放大这里的块。 

1206
00:52:40,470 --> 00:52:43,980
这块只是说永远移动10步，其中

1207
00:52:43,980 --> 00:52:45,360
是另一个我们没见过的街区。 

1208
00:52:45,360 --> 00:52:46,920
但是10个步骤就像是10个像素。 

1209
00:52:46,920 --> 00:52:48,930
所以在屏幕上移动10个像素。 

1210
00:52:48,930 --> 00:52:52,330
但是如果你碰到边缘，那么转过180度。 

1211
00:52:52,330 --> 00:52:54,200
你可以清楚地看到发生的事情。 

1212
00:52:54,200 --> 00:52:57,540
Scratch正在转动180度，这种旋转风格正好

1213
00:52:57,540 --> 00:52:58,320
意味着双背。 

1214
00:52:58,320 --> 00:53:00,810
不喜欢180度左右的环路。 

1215
00:53:00,810 --> 00:53:02,020
所以这很酷。 

1216
00:53:02,020 --> 00:53:05,100
但这不是人类或猫走路的方式。 

1217
00:53:05,100 --> 00:53:10,340
就像这显然不自然一样？ 

1218
00:53:10,340 --> 00:53:10,840
是啊。 

1219
00:53:10,840 --> 00:53:12,840
我的意思是，我的意思是，我甚至无法模拟它，对吧？ 

1220
00:53:12,840 --> 00:53:15,580
就像他的脚处于静止位置，但来回滑动

1221
00:53:15,580 --> 00:53:16,540
屏幕上。 

1222
00:53:16,540 --> 00:53:18,160
然而，这不是走路的原因。 

1223
00:53:18,160 --> 00:53:20,950
喜欢走路大概有某种运动​​和什么？ 

1224
00:53:20,950 --> 00:53:22,870
好吧，我们可以像它一样模拟它 - 

1225
00:53:22,870 --> 00:53:24,190
好的，我可以走路 - 

1226
00:53:24,190 --> 00:53:28,420
走路，你可以想象我的腿很快拍照

1227
00:53:28,420 --> 00:53:31,450
或猫的腿移动，然后只是决定这张照片

1228
00:53:31,450 --> 00:53:33,400
将代表一步。 

1229
00:53:33,400 --> 00:53:35,530
这张照片将是另一个代表。 

1230
00:53:35,530 --> 00:53:37,810
你知道，只有两个步骤， 

1231
00:53:37,810 --> 00:53:41,320
我敢打赌，我们实际上可以很好地模拟

1232
00:53:41,320 --> 00:53:42,620
什么走路看起来像。 

1233
00:53:42,620 --> 00:53:46,210
事实上，如果我回到我们开始的地方，这张图片是Scratch， 

1234
00:53:46,210 --> 00:53:51,040
如果我只是稍微移动他的腿，然后回去， 

1235
00:53:51,040 --> 00:53:52,280
那么继续前进？ 

1236
00:53:52,280 --> 00:53:56,050
即使只是在我的PDF中，我也可以通过点击箭头来模拟动画， 

1237
00:53:56,050 --> 00:53:58,670
向下箭头，向上箭头，向下箭头因为它的种类

1238
00:53:58,670 --> 00:54:01,720
看起来他现在正在走路，真的，你的人眼刚刚看到

1239
00:54:01,720 --> 00:54:04,250
两个不同的图片一次又一次。 

1240
00:54:04,250 --> 00:54:05,340
那我该怎么做呢？ 

1241
00:54:05,340 --> 00:54:08,350
好吧，如果我回到Scratch，他还在走路。 

1242
00:54:08,350 --> 00:54:15,500
让我继续开放Bounce One，这是第二个版本，现在， 

1243
00:54:15,500 --> 00:54:16,300
做这个。 

1244
00:54:16,300 --> 00:54:18,630
好。 

1245
00:54:18,630 --> 00:54:19,570
那我怎么加这个呢？ 

1246
00:54:19,570 --> 00:54:21,870
还有一个我们还没见过的紫色块， 

1247
00:54:21,870 --> 00:54:23,740
但是，如果你围绕这些类别，你会

1248
00:54:23,740 --> 00:54:26,070
看到像这样的其他街区下一个刚刚保留的服装

1249
00:54:26,070 --> 00:54:28,230
改变他穿的服装。 

1250
00:54:28,230 --> 00:54:31,860
事实证明，Scratch作为图片和他的默认图片存在

1251
00:54:31,860 --> 00:54:35,760
他没有动，但如果我上到左上角点击服装， 

1252
00:54:35,760 --> 00:54:38,220
你真的可以看到这是他的一件服装。 

1253
00:54:38,220 --> 00:54:39,960
这是他的第二套服装。 

1254
00:54:39,960 --> 00:54:43,140
所以紫色的块说下一件服装，因为它是

1255
00:54:43,140 --> 00:54:47,460
在永远的循环中，它只是继续做下一个，下一个，下一个，下一个，下一个，只是

1256
00:54:47,460 --> 00:54:49,240
显示一件服装或另一件。 

1257
00:54:49,240 --> 00:54:52,210
他们显然模仿行走。 

1258
00:54:52,210 --> 00:54:53,640
现在，这不是很不自然。 

1259
00:54:53,640 --> 00:54:59,040
我们为什么不慢慢将他放慢速度，比如一步五步，让他再去？ 

1260
00:54:59,040 --> 00:55:00,660
现在，这仍然很快。 

1261
00:55:00,660 --> 00:55:03,240
让我继续说 - 

1262
00:55:03,240 --> 00:55:05,010
我们可以控制。 

1263
00:55:05,010 --> 00:55:11,100
我们可以让他在非常戏剧性地移动后等待一秒钟。 

1264
00:55:11,100 --> 00:55:12,550
我们可以加快速度。 

1265
00:55:12,550 --> 00:55:15,540
让我们等待1/10秒，0.1。 

1266
00:55:15,540 --> 00:55:18,650
或者让我们做0.01,1 / 100秒。 

1267
00:55:18,650 --> 00:55:20,400
现在，它变得更加现实了。 

1268
00:55:20,400 --> 00:55:21,810
但这就是动画。 

1269
00:55:21,810 --> 00:55:25,510
如果你曾经看过基于这样的照片的卡通片或电影， 

1270
00:55:25,510 --> 00:55:28,530
你只是修补一些这些参数，这些输入， 

1271
00:55:28,530 --> 00:55:30,780
为了通过理解产生这个输出

1272
00:55:30,780 --> 00:55:34,260
在这种情况下，这些东西的基本表现是什么

1273
00:55:34,260 --> 00:55:37,200
只是图片，一次又一次的顺序

1274
00:55:37,200 --> 00:55:38,700
创建该动画。 

1275
00:55:38,700 --> 00:55:40,400
但是交互性怎么样？ 

1276
00:55:40,400 --> 00:55:41,490
让我自己做这个。 

1277
00:55:41,490 --> 00:55:45,960
让我继续，摆脱这个，回到事件，然后说， 

1278
00:55:45,960 --> 00:55:47,670
点击绿旗时。 

1279
00:55:47,670 --> 00:55:50,250
然后，让我继续前进，抓住永远的阻挡

1280
00:55:50,250 --> 00:55:52,230
所以这一直在继续。 

1281
00:55:52,230 --> 00:55:54,150
然后，让我继续讨论动议。 

1282
00:55:54,150 --> 00:55:57,270
事实证明，在运动中，我们还没有看到这个区块 - 

1283
00:55:57,270 --> 00:55:59,340
指向鼠标指针。 

1284
00:55:59,340 --> 00:56:01,650
让我继续前进，把它拉到这里。 

1285
00:56:01,650 --> 00:56:06,480
然后，让我让它一步一步地移动，而不是10步。 

1286
00:56:06,480 --> 00:56:09,560
这是怎么回事？ 

1287
00:56:09,560 --> 00:56:12,490
这个程序做什么用的？ 

1288
00:56:12,490 --> 00:56:12,990
是啊。 

1289
00:56:12,990 --> 00:56:14,370
再说一遍。 

1290
00:56:14,370 --> 00:56:15,280
跟着鼠标。 

1291
00:56:15,280 --> 00:56:15,780
是啊。 

1292
00:56:15,780 --> 00:56:20,580
这有点像带你的猫散步的方式。 

1293
00:56:20,580 --> 00:56:24,930
也许不是我们想要的动物，但他会按照光标。 

1294
00:56:24,930 --> 00:56:27,170
而我实际上可以加快这一点。 

1295
00:56:27,170 --> 00:56:28,780
让我们让他迈出10步。 

1296
00:56:28,780 --> 00:56:29,280
好。 

1297
00:56:29,280 --> 00:56:32,020
现在，我们去吧。 

1298
00:56:32,020 --> 00:56:34,960
所以现在，他正在上下移动，所以现在，它是互动的。 

1299
00:56:34,960 --> 00:56:38,650
所以你可能还记得我们早些时候和奥斯卡时间一起玩的时候

1300
00:56:38,650 --> 00:56:39,150
up-- 

1301
00:56:39,150 --> 00:56:40,530
好。 

1302
00:56:40,530 --> 00:56:41,110
不要那样做。 

1303
00:56:41,110 --> 00:56:42,870
看，这是一个错误。 

1304
00:56:42,870 --> 00:56:43,710
他只是困惑。 

1305
00:56:43,710 --> 00:56:45,660
他不断走向它，但你已经 - 

1306
00:56:45,660 --> 00:56:45,940
好。 

1307
00:56:45,940 --> 00:56:46,930
所以我们要停下来。 

1308
00:56:46,930 --> 00:56:47,430
好。 

1309
00:56:47,430 --> 00:56:50,610
现在，他正在关注，但这就是我们现在可能创造的方式， 

1310
00:56:50,610 --> 00:56:52,980
例如，移动那些垃圾的能力

1311
00:56:52,980 --> 00:56:54,950
周围，​​让他们按照鼠标光标。 

1312
00:56:54,950 --> 00:56:58,070
如果你回想奥斯卡时间，每次你拿起一块垃圾， 

1313
00:56:58,070 --> 00:57:01,320
他会跟着光标，因为有一个永远的循环和一个像这样的块

1314
00:57:01,320 --> 00:57:03,180
指向鼠标指针。 

1315
00:57:03,180 --> 00:57:05,760
那么，现在，让我们整合多个想法

1316
00:57:05,760 --> 00:57:07,590
实际上有多个脚本。 

1317
00:57:07,590 --> 00:57:12,240
我之前提出过，程序实际上可以有多个线程。 

1318
00:57:12,240 --> 00:57:15,780
在我们的上下文中，线程只是一种奇特的方式，可以说多个脚本。 

1319
00:57:15,780 --> 00:57:21,120
一个程序中的多个脚本基本上并行发生。 

1320
00:57:21,120 --> 00:57:24,570
由于线程，计算机可以一次有效地做多件事， 

1321
00:57:24,570 --> 00:57:26,010
以及更多关于此的信息。 

1322
00:57:26,010 --> 00:57:27,720
所以这些涉及更多，但让我们看看

1323
00:57:27,720 --> 00:57:30,120
如果我们能 - 让我们先了解这个项目的作用。 

1324
00:57:30,120 --> 00:57:31,320
让我继续前进吧。 

1325
00:57:31,320 --> 00:57:33,950
而这个往往有点响亮。 

1326
00:57:33,950 --> 00:57:37,180
[海洋啤酒] 

1327
00:57:38,120 --> 00:57:42,800
因此，海狮正在无休止地咆哮，令人讨厌。 

1328
00:57:42,800 --> 00:57:48,650
所以通过阅读代码，我怎么能阻止他吠叫？ 

1329
00:57:48,650 --> 00:57:49,890
点击空格键。 

1330
00:57:49,890 --> 00:57:50,390
行。 

1331
00:57:50,390 --> 00:57:52,770
所以打空格键。 

1332
00:57:52,770 --> 00:57:53,750
好。 

1333
00:57:53,750 --> 00:57:55,700
我可以停止这个程序，显然， 

1334
00:57:55,700 --> 00:57:57,800
但从技术上讲，这个程序仍在运行。 

1335
00:57:57,800 --> 00:57:59,270
但为什么这样做呢？ 

1336
00:57:59,270 --> 00:58:02,300
好吧，请注意左侧是第一个脚本。 

1337
00:58:02,300 --> 00:58:06,370
单击绿色标志时，将我调用的此变量设置为false。 

1338
00:58:06,370 --> 00:58:08,960
可以称之为x或y或z或计数器，但不是这些

1339
00:58:08,960 --> 00:58:10,620
真有意义，所以我把它称为静音。 

1340
00:58:10,620 --> 00:58:13,400
我将它设置为等于false，这又是一个布尔值。 

1341
00:58:13,400 --> 00:58:16,170
是或否只是表示是或否。 

1342
00:58:16,170 --> 00:58:19,920
永远，如果按下键空间，那么执行此操作。 

1343
00:58:19,920 --> 00:58:24,200
如果muted当前为false，则将muted更改为true。 

1344
00:58:24,200 --> 00:58:26,670
否则，将静音改为假。 

1345
00:58:26,670 --> 00:58:29,510
因此，如果muted为false，则将其更改为true。 

1346
00:58:29,510 --> 00:58:31,840
如果muted为true，则将其更改为false。 

1347
00:58:31,840 --> 00:58:35,910
只要人类击中空格键，就更新该变量。 

1348
00:58:35,910 --> 00:58:39,500
现在，如果我们看看另一个也在驱动海狮的剧本， 

1349
00:58:39,500 --> 00:58:40,530
他在做什么？ 

1350
00:58:40,530 --> 00:58:43,580
永远，如果静音是假的。 

1351
00:58:43,580 --> 00:58:44,750
所以，如果他不沉默。 

1352
00:58:44,750 --> 00:58:46,820
如果静音是假的意味着没有静音。 

1353
00:58:46,820 --> 00:58:50,360
启动声音海狮然后想想你好，嗨，嗨两秒钟， 

1354
00:58:50,360 --> 00:58:52,160
然后再等一秒钟。 

1355
00:58:52,160 --> 00:58:53,900
然后重复，重复，重复。 

1356
00:58:53,900 --> 00:58:56,750
但如果我改变空格键静音为真， 

1357
00:58:56,750 --> 00:59:00,230
他会说，如果静音等于假，那不是这样。 

1358
00:59:00,230 --> 00:59:01,950
这次我不会发出声音。 

1359
00:59:01,950 --> 00:59:05,360
现在，我们可以将多个脚本集成在一起

1360
00:59:05,360 --> 00:59:08,390
为了实现更具互动性的结果。 

1361
00:59:08,390 --> 00:59:09,670
那怎么样？ 

1362
00:59:09,670 --> 00:59:15,560
回到我还是个孩子的时候，可能会在夏天玩马可波罗。 

1363
00:59:15,560 --> 00:59:16,650
超级简单的游戏。 

1364
00:59:16,650 --> 00:59:18,650
我们在游泳池里玩，出于某种原因，在哪里

1365
00:59:18,650 --> 00:59:20,840
一个人在游泳池里非常安全地被蒙上眼睛， 

1366
00:59:20,840 --> 00:59:22,550
然后他或她大喊马可。 

1367
00:59:22,550 --> 00:59:25,550
然后，他或她周围的每个人都应该大喊马球。 

1368
00:59:25,550 --> 00:59:27,260
然后，被蒙住眼睛的人是

1369
00:59:27,260 --> 00:59:29,540
应该去追逐池中的其他孩子并标记他们， 

1370
00:59:29,540 --> 00:59:30,650
然后他们就成了它。 

1371
00:59:30,650 --> 00:59:33,020
但换句话说，就像信号机制一样。 

1372
00:59:33,020 --> 00:59:35,750
有人大叫，马可和其他所有人都回应

1373
00:59:35,750 --> 00:59:38,180
那个广播的单词Marco。 

1374
00:59:38,180 --> 00:59:40,910
好吧，事实证明我们可以用这两个木偶模拟这个。 

1375
00:59:40,910 --> 00:59:43,550
这个人在这里 - 注意到我突出了橙色木偶

1376
00:59:43,550 --> 00:59:45,350
因为那里有第二个蓝傀儡。 

1377
00:59:45,350 --> 00:59:46,220
分开的精灵。 

1378
00:59:46,220 --> 00:59:49,490
这些只是我们上传到游戏中的照片。 

1379
00:59:49,490 --> 00:59:53,780
永远，如果按下键空间，那么如果按下空格键， 

1380
00:59:53,780 --> 00:59:57,290
说马可两秒钟，然后播出一个事件。 

1381
00:59:57,290 --> 01:00:02,350
同时，这里的蓝色木偶有一个超级简单的块， 

1382
01:00:02,350 --> 01:00:04,770
但它与我们看到的根本不同。 

1383
01:00:04,770 --> 01:00:07,580
单击绿色标记时，他没有启动。 

1384
01:00:07,580 --> 01:00:10,730
他只有在收到一个活动时才会开始。 

1385
01:00:10,730 --> 01:00:13,470
事实证明，精灵和Scratch听不到或看不到

1386
01:00:13,470 --> 01:00:15,680
另一个人在那些讲话泡泡中说的是什么。 

1387
01:00:15,680 --> 01:00:17,420
你必须使用更高级的技术

1388
01:00:17,420 --> 01:00:19,430
是一个叫做广播的特殊块，它

1389
01:00:19,430 --> 01:00:23,390
就像把一个音符从一个精灵传递到另一个精灵

1390
01:00:23,390 --> 01:00:26,210
另一个人可以阅读或接收，可以这么说。 

1391
01:00:26,210 --> 01:00:28,430
所以只有当他收到这个事件时，可以这么说

1392
01:00:28,430 --> 01:00:30,800
他说马球两秒钟了吗？ 

1393
01:00:30,800 --> 01:00:34,350
再一次，橙色木偶发送了这个秘密信息

1394
01:00:34,350 --> 01:00:35,810
只是使用这个其他拼图。 

1395
01:00:35,810 --> 01:00:40,530
广播一个事件，就像传递人类实际上看不到的音符一样。 

1396
01:00:40,530 --> 01:00:45,410
因此，如果我现在击中绿旗并击中空格键，橙色会叫马可。 

1397
01:00:45,410 --> 01:00:48,380
蓝色的家伙大喊大叫马球。 

1398
01:00:48,380 --> 01:00:50,270
但那些没有定时在一起。 

1399
01:00:50,270 --> 01:00:53,690
相反，蓝色的家伙正在听到橙色的人说， 

1400
01:00:53,690 --> 01:00:58,740
从而允许多个精灵实际上相互通信。 

1401
01:00:58,740 --> 01:00:59,780
那我们怎么到这里来的？ 

1402
01:00:59,780 --> 01:01:02,930
好吧，回想一下，我们刚才拥有所有这些构件。 

1403
01:01:02,930 --> 01:01:05,270
首先，我们从功能和条件开始

1404
01:01:05,270 --> 01:01:06,710
和布尔表达式和循环。 

1405
01:01:06,710 --> 01:01:09,040
我们现在已经添加了存储信息的能力

1406
01:01:09,040 --> 01:01:12,530
在变量和线程中一次做多个事情，然后，如果你这样做

1407
01:01:12,530 --> 01:01:14,840
有多件事情发生，事件，在哪里

1408
01:01:14,840 --> 01:01:17,180
他们可以以某种方式进入沟通。 

1409
01:01:17,180 --> 01:01:18,530
又一个构建块。 

1410
01:01:18,530 --> 01:01:21,620
所以如果我们现在退一步考虑一下

1411
01:01:21,620 --> 01:01:26,360
我们如何能够发挥自己的作用，我们有最后一块

1412
01:01:26,360 --> 01:01:27,890
可以这么说，这个谜题。 

1413
01:01:27,890 --> 01:01:29,090
让我继续这样做。 

1414
01:01:29,090 --> 01:01:33,500
让我继续创建一个简单的程序，当绿色标记被剪切时， 

1415
01:01:33,500 --> 01:01:35,570
这简单地模拟了猫的咳嗽。 

1416
01:01:35,570 --> 01:01:40,760
所以这只猫会说不是你好，而是咳嗽一秒钟。 

1417
01:01:40,760 --> 01:01:44,540
然后他会继续等待一秒钟。 

1418
01:01:44,540 --> 01:01:48,200
然后我会像往常一样继续复制粘贴 - 

1419
01:01:48,200 --> 01:01:52,040
正如我所说的那样，这不是我做的其中之一 - 在这里实施这个程序， 

1420
01:01:52,040 --> 01:01:54,170
他咳​​嗽了三次。 

1421
01:01:54,170 --> 01:01:57,020
不过，我们早些时候已经知道这不是好设计。 

1422
01:01:57,020 --> 01:01:59,430
为什么？ 

1423
01:01:59,430 --> 01:02:00,520
你在重复自己。 

1424
01:02:00,520 --> 01:02:02,080
不要重复自己。 

1425
01:02:02,080 --> 01:02:03,570
实际上，DRY是一个缩写。 

1426
01:02:03,570 --> 01:02:05,320
不要重复自己，因为你正在做

1427
01:02:05,320 --> 01:02:09,340
你只需要做一次的事情的三倍。 

1428
01:02:09,340 --> 01:02:12,680
当然，之前的解决方案只是使用某种循环。 

1429
01:02:12,680 --> 01:02:14,230
所以让我实际上把它拿出来。 

1430
01:02:14,230 --> 01:02:18,130
让我使用重复块，将10改为3， 

1431
01:02:18,130 --> 01:02:19,810
然后只使用其中两个块。 

1432
01:02:19,810 --> 01:02:22,150
并且已经注意到，该程序非常紧凑。 

1433
01:02:22,150 --> 01:02:27,040
而现在，如果我想将三者更改为30或10或任何数字， 

1434
01:02:27,040 --> 01:02:28,550
我只是改变一个简单的值。 

1435
01:02:28,550 --> 01:02:31,840
我不必重写或复制粘贴或删除东西。 

1436
01:02:31,840 --> 01:02:33,820
我可以更容易地更新程序， 

1437
01:02:33,820 --> 01:02:39,370
现在，咳嗽，咳嗽，咳嗽也会发生同样的事情。 

1438
01:02:39,370 --> 01:02:43,010
但事实证明，从此开始抽象将是很好的， 

1439
01:02:43,010 --> 01:02:43,510
对？ 

1440
01:02:43,510 --> 01:02:46,960
我只想要我写的任何程序都知道如何咳嗽。 

1441
01:02:46,960 --> 01:02:49,210
咳嗽真的只是在说些什么

1442
01:02:49,210 --> 01:02:50,540
好几次。 

1443
01:02:50,540 --> 01:02:53,110
但事实证明我们可以在代码中抽象出来。 

1444
01:02:53,110 --> 01:02:55,930
让我来到我的街区，这允许

1445
01:02:55,930 --> 01:02:57,710
我点击这个按钮 - 制作一个块。 

1446
01:02:57,710 --> 01:02:59,440
它允许我自己创造功能。 

1447
01:02:59,440 --> 01:03:01,120
我在这里得到这个对话窗口。 

1448
01:03:01,120 --> 01:03:03,850
而我只是称这块阻止咳嗽。 

1449
01:03:03,850 --> 01:03:05,870
我要继续，然后单击“确定”。 

1450
01:03:05,870 --> 01:03:09,420
现在，我有了这个新的粉红色块，它本身可以有块。 

1451
01:03:09,420 --> 01:03:10,840
你知道我要做什么吗？ 

1452
01:03:10,840 --> 01:03:12,410
我要继续这样做。 

1453
01:03:12,410 --> 01:03:16,570
我要继续在那里说咳嗽。 

1454
01:03:16,570 --> 01:03:20,260
而现在，请注意左侧，我现在可以访问这个新的粉红色。 

1455
01:03:20,260 --> 01:03:22,220
我现在可以把它放在这里。 

1456
01:03:22,220 --> 01:03:26,470
所以现在，请注意，是的，这就是咳嗽的实施方式

1457
01:03:26,470 --> 01:03:30,320
在左边这边，下次，当我写一个程序时， 

1458
01:03:30,320 --> 01:03:31,960
我只想打电话给咳嗽。 

1459
01:03:31,960 --> 01:03:34,630
而且我不关心那些较低级别的实现细节。 

1460
01:03:34,630 --> 01:03:36,460
我不关心党或其中任何一方。 

1461
01:03:36,460 --> 01:03:38,230
我只是希望这是一个抽象。 

1462
01:03:38,230 --> 01:03:40,510
但我可以做得比这更好

1463
01:03:40,510 --> 01:03:43,730
如果不是只重复咳嗽三次，那就好了， 

1464
01:03:43,730 --> 01:03:45,670
如果我做了咳嗽的特征怎么办？ 

1465
01:03:45,670 --> 01:03:46,760
所以让我这样做。 

1466
01:03:46,760 --> 01:03:51,010
我可以继续并右键点击这个粉红色的部分，我可以编辑它。 

1467
01:03:51,010 --> 01:03:52,990
这会带来前面的那个窗口。 

1468
01:03:52,990 --> 01:03:53,710
请注意这一点。 

1469
01:03:53,710 --> 01:03:55,070
添加输入。 

1470
01:03:55,070 --> 01:03:58,210
因此，当我制作一个自定义块时，我实际上可以制作非常精美的块

1471
01:03:58,210 --> 01:04:01,570
就像麻省理工学院给我们的软件一样， 

1472
01:04:01,570 --> 01:04:03,700
现在，我可以输入类似n的东西。 

1473
01:04:03,700 --> 01:04:07,060
如果我添加一个标签只是为了使它更具描述性，我可以说时间。 

1474
01:04:07,060 --> 01:04:09,040
所以现在，我做了一个特殊的定制拼图

1475
01:04:09,040 --> 01:04:12,880
咳嗽很多次，其中n为数字

1476
01:04:12,880 --> 01:04:16,340
只是程序员倾向于使用的变量。 

1477
01:04:16,340 --> 01:04:24,260
所以现在，我实际上可以将这个重复块移动到咳嗽本身， 

1478
01:04:24,260 --> 01:04:26,290
但不是硬代码3，请注意这一点。 

1479
01:04:26,290 --> 01:04:31,360
我可以偷走那个变量，现在通过重复多次咳嗽

1480
01:04:31,360 --> 01:04:34,630
一次又一次地说这个。 

1481
01:04:34,630 --> 01:04:39,880
而现在，当我在实际节目中咳嗽时，我只在这里输入三个。 

1482
01:04:39,880 --> 01:04:42,350
所以我现在有了这个美丽的抽象，可以这么说。 

1483
01:04:42,350 --> 01:04:45,490
咳嗽这么多次，我和世界上没有其他人

1484
01:04:45,490 --> 01:04:48,730
再也不需要关心咳嗽意味着什么，因为我们已经有了

1485
01:04:48,730 --> 01:04:50,330
以前实施过。 

1486
01:04:50,330 --> 01:04:52,810
正如麻省理工学院为我们提供了如此多的功能

1487
01:04:52,810 --> 01:04:54,940
我们自己不必考虑，也可以

1488
01:04:54,940 --> 01:04:57,560
我现在做的功能我没有必要考虑。 

1489
01:04:57,560 --> 01:05:00,340
随着我们进步到更高级别的语言，如C和JavaScript 

1490
01:05:00,340 --> 01:05:02,800
和Python一样，我们有时会继续这个过程

1491
01:05:02,800 --> 01:05:06,460
通过制作我们自己的定制拼图来解决问题， 

1492
01:05:06,460 --> 01:05:08,620
但经常使用称为库的东西， 

1493
01:05:08,620 --> 01:05:13,060
其他人在我们面前写的代码对于完成工作非常有用， 

1494
01:05:13,060 --> 01:05:16,970
就像Scratch在这里为我们做的一样。 

1495
01:05:16,970 --> 01:05:19,360
那么，让我继续，并带来所有这一切

1496
01:05:19,360 --> 01:05:23,750
在这里打开另一个例子。 

1497
01:05:23,750 --> 01:05:27,470
让我继续开放这个，这不是我们见过的， 

1498
01:05:27,470 --> 01:05:31,330
但这是一个由前学生制作的像这样的互动游戏。 

1499
01:05:31,330 --> 01:05:35,540
[音乐播放] 

1500
01:05:35,540 --> 01:05:36,790
我们应该有苹果吗？ 

1501
01:05:36,790 --> 01:05:38,840
是。 

1502
01:05:38,840 --> 01:05:40,240
一点点动画。 

1503
01:05:44,420 --> 01:05:44,920
好。 

1504
01:05:44,920 --> 01:05:46,720
那并没有结束。 

1505
01:05:46,720 --> 01:05:47,770
让我们再试一次。 

1506
01:05:47,770 --> 01:05:49,660
再玩一次。 

1507
01:05:49,660 --> 01:05:51,960
并注意说块正在发生。 

1508
01:05:51,960 --> 01:05:54,250
有某种问题阻止。 

1509
01:05:54,250 --> 01:05:56,730
学生正在检查是否输入了是或否。 

1510
01:05:56,730 --> 01:05:57,730
我们这次不打字。 

1511
01:05:57,730 --> 01:05:58,600
没有苹果。 

1512
01:05:58,600 --> 01:05:59,100
哦。 

1513
01:05:59,100 --> 01:05:59,740
蛋糕。 

1514
01:05:59,740 --> 01:06:00,240
好。 

1515
01:06:00,240 --> 01:06:00,890
是。 

1516
01:06:00,890 --> 01:06:01,390
输入。 

1517
01:06:06,790 --> 01:06:08,030
好。 

1518
01:06:08,030 --> 01:06:09,660
不要那样做。 

1519
01:06:09,660 --> 01:06:10,380
再过一次生命。 

1520
01:06:10,380 --> 01:06:10,880
开始了。 

1521
01:06:10,880 --> 01:06:13,200
[音乐播放] 

1522
01:06:13,200 --> 01:06:13,700
好。 

1523
01:06:13,700 --> 01:06:15,590
没有苹果。 

1524
01:06:15,590 --> 01:06:16,160
没有蛋糕。 

1525
01:06:18,950 --> 01:06:21,660
变数不大。 

1526
01:06:21,660 --> 01:06:24,590
[尖叫] 

1527
01:06:26,050 --> 01:06:28,970
[笑声] 

1528
01:06:28,970 --> 01:06:29,470
好。 

1529
01:06:29,470 --> 01:06:32,620
所以我赢了比赛。 

1530
01:06:32,620 --> 01:06:37,780
在这里的最后时刻，让我继续前进，打开最后一个例子。 

1531
01:06:37,780 --> 01:06:41,760
如您所知，CS50不仅在哈佛大学提供，而且在耶鲁大学也提供， 

1532
01:06:41,760 --> 01:06:43,810
因此，似乎最终可能以一张纸条结束

1533
01:06:43,810 --> 01:06:47,320
通过另一场比赛可能会让一个校园对阵另一个校园

1534
01:06:47,320 --> 01:06:50,110
一位前学生写的名为Ivy的最难的游戏。 

1535
01:06:50,110 --> 01:06:53,450
但对于这一点，我认为我们需要一个最终的志愿者，他的公司即将到来。 

1536
01:06:53,450 --> 01:06:53,950
好。 

1537
01:06:53,950 --> 01:06:54,590
第一手资料。 

1538
01:06:54,590 --> 01:06:55,090
在那里。 

1539
01:06:55,090 --> 01:06:56,920
下来吧。 

1540
01:06:56,920 --> 01:07:00,140
因此，在常春藤最难的游戏中，这是一个用键盘玩的游戏。 

1541
01:07:00,140 --> 01:07:02,980
即使乍一看它看起来有点压倒性， 

1542
01:07:02,980 --> 01:07:06,310
就像奥斯卡时代一样，就像姜饼动画一样， 

1543
01:07:06,310 --> 01:07:09,520
意识到如果你只是在思考什么的时候分解它

1544
01:07:09,520 --> 01:07:11,770
那些单独的构建块，你可能

1545
01:07:11,770 --> 01:07:13,190
猜猜拼图是什么。 

1546
01:07:13,190 --> 01:07:13,450
你好。 

1547
01:07:13,450 --> 01:07:13,780
你叫什么名字？ 

1548
01:07:13,780 --> 01:07:14,050
安德烈：嗨。 

1549
01:07:14,050 --> 01:07:14,610
我是安德烈。 

1550
01:07:14,610 --> 01:07:14,950
大卫马兰：安德烈。 

1551
01:07:14,950 --> 01:07:15,440
大卫。 

1552
01:07:15,440 --> 01:07:16,270
很高兴见到你。 

1553
01:07:16,270 --> 01:07:20,010
这是常春藤最难的游戏。 

1554
01:07:20,010 --> 01:07:22,500
让你对抗所有的常春藤。 

1555
01:07:22,500 --> 01:07:26,300
然后就在这之后我们会在transept中休息吃蛋糕。 

1556
01:07:26,300 --> 01:07:28,770
准备？ 

1557
01:07:28,770 --> 01:07:31,480
[音乐播放] 

1558
01:07:31,480 --> 01:07:33,230
[音乐 -  MC HAMMER，“你不能接触到这个”] 

1559
01:07:33,230 --> 01:07:36,690
MC HAMMER :(唱歌）你不能碰这个。 

1560
01:07:36,690 --> 01:07:42,940
你不能碰这个。 

1561
01:07:42,940 --> 01:07:43,690
大卫马兰：很好。 

1562
01:07:43,690 --> 01:07:44,130
[音乐 -  MC HAMMER，“你不能接触到这个”] 

1563
01:07:44,130 --> 01:07:46,440
MC HAMMER :(唱歌）你不能碰这个。 

1564
01:07:46,440 --> 01:07:48,460
我的，我的，我的。 

1565
01:07:48,460 --> 01:07:50,250
音乐很难打动你。 

1566
01:07:50,250 --> 01:07:52,250
让我说，哦，我的主人。 

1567
01:07:52,250 --> 01:07:55,740
谢谢你用韵达和两个炒作的脚来祝福我。 

1568
01:07:55,740 --> 01:07:57,650
当你知道自己失败时感觉很好。 

1569
01:07:57,650 --> 01:07:59,240
来自Oaktown的超级涂料男生。 

1570
01:07:59,240 --> 01:08:01,230
我就是这么认识的。 

1571
01:08:01,230 --> 01:08:04,230
这是你无法触及的节拍。 

1572
01:08:04,230 --> 01:08:07,470
我告诉过你，顺道，你不能碰这个。 

1573
01:08:07,470 --> 01:08:07,970
是啊。 

1574
01:08:07,970 --> 01:08:11,210
这就是我们的生活方式，你知道你无法触及这一点。 

1575
01:08:11,210 --> 01:08:12,210
看我的眼睛。 

1576
01:08:12,210 --> 01:08:14,710
伙计，你不能碰这个。 

1577
01:08:14,710 --> 01:08:15,620
[掌声] 

1578
01:08:15,620 --> 01:08:17,370
[音乐 -  MC HAMMER，“你不能接触到这个”] 

1579
01:08:17,370 --> 01:08:19,200
（唱歌）新鲜的新踢和裤子。 

1580
01:08:19,200 --> 01:08:21,530
你得到它，现在你知道你想跳舞。 

1581
01:08:21,530 --> 01:08:23,520
因此，离开你的座位，让一个飞行的女孩

1582
01:08:23,520 --> 01:08:25,680
在它滚动的时候抓住这个节拍。 

1583
01:08:25,680 --> 01:08:26,180
坚持，稍等。 

1584
01:08:26,180 --> 01:08:29,180
抽一点，让我知道它正在发生这样的事情。 

1585
01:08:29,180 --> 01:08:30,170
像那样。 

1586
01:08:30,170 --> 01:08:31,670
任务冷，所以拉回来。 

1587
01:08:31,670 --> 01:08:36,660
让他们知道你太多了，这是你无法触及的节拍。 

1588
01:08:36,660 --> 01:08:40,650
哟，我告诉过你，你不能碰这个。 

1589
01:08:40,650 --> 01:08:42,150
为什么你站在那里，伙计？ 

1590
01:08:42,150 --> 01:08:43,150
你不能碰这个。 

1591
01:08:43,150 --> 01:08:44,650
哟，响起了钟声。 

1592
01:08:44,650 --> 01:08:45,640
学校在，傻逼。 

1593
01:08:45,640 --> 01:08:46,520
你不能碰这个。 

1594
01:08:46,520 --> 01:08:48,140
给我一首歌或节奏。 

1595
01:08:48,140 --> 01:08:48,890
让他们流汗。 

1596
01:08:48,890 --> 01:08:50,130
这就是我给他们的东西。 

1597
01:08:50,130 --> 01:08:52,630
现在他们知道你什么时候谈论锤子， 

1598
01:08:52,630 --> 01:08:55,120
你在谈论一个被大肆宣传的节目。 

1599
01:08:55,120 --> 01:08:58,120
歌手正在出汗，所以要擦拭或擦拭

1600
01:08:58,120 --> 01:09:01,390
了解90年代烧制图表需要采取的措施。 

1601
01:09:01,390 --> 01:09:02,810
大卫马兰：倒数第二。 

1602
01:09:02,810 --> 01:09:03,310
[音乐 -  MC HAMMER，“你不能接触到这个”] 

1603
01:09:03,310 --> 01:09:05,970
MC HAMMER :(唱歌）要么努力工作，要么你也可以退出。 

1604
01:09:05,970 --> 01:09:10,810
这句话是因为你知道你无法触及这一点。 

1605
01:09:10,810 --> 01:09:14,310
你不能碰这个。 

1606
01:09:14,310 --> 01:09:15,310
分解。 

1607
01:09:28,310 --> 01:09:28,810
停止。 

1608
01:09:28,810 --> 01:09:29,810
锤击时间。 

1609
01:09:29,810 --> 01:09:31,010
据说，顺其自然。 

1610
01:09:31,010 --> 01:09:33,350
如果你不能这样做，那么你可能已经死了。 

1611
01:09:33,350 --> 01:09:34,810
所以挥挥手在空中。 

1612
01:09:34,810 --> 01:09:35,810
匆匆几步。 

1613
01:09:35,810 --> 01:09:37,260
用手指梳理头发。 

1614
01:09:37,260 --> 01:09:38,390
这是赢家。 

1615
01:09:38,390 --> 01:09:40,310
跳舞到这个，你会变得更瘦。 

1616
01:09:40,310 --> 01:09:41,310
移动。 

1617
01:09:41,310 --> 01:09:42,310
滑你的臀部。 

1618
01:09:42,310 --> 01:09:45,810
只是一分钟，让我们所有人做碰撞，碰撞，碰撞。 

1619
01:09:45,810 --> 01:09:46,810
是啊。 

1620
01:09:46,810 --> 01:09:49,310
你不能碰这个。 

1621
01:09:49,310 --> 01:09:50,310
看，伙计。 

1622
01:09:50,310 --> 01:09:52,310
你不能碰这个。 

1623
01:09:52,310 --> 01:09:54,310
你最好得到炒作，男孩，因为你知道 - 

1624
01:09:54,310 --> 01:09:56,180
[CROWD YELLING] 

1625
01:09:56,180 --> 01:09:57,930
[音乐 -  MC HAMMER，“你不能接触到这个”] 

1626
01:09:57,930 --> 01:10:00,310
（唱歌）分解。 

1627
01:10:00,310 --> 01:10:04,310
大卫马兰：[听不清] 

1628
01:10:04,310 --> 01:10:05,100
安德烈：[听不清] 

1629
01:10:05,100 --> 01:10:05,760
大卫马兰：没有。 

1630
01:10:05,760 --> 01:10:06,310
没关系。 

1631
01:10:06,310 --> 01:10:09,810
[音乐 -  MC HAMMER，“你不能接触到这个”] 

1632
01:10:09,810 --> 01:10:10,810
再过一次生命。 

1633
01:10:10,810 --> 01:10:11,310
[音乐 -  MC HAMMER，“你不能接触到这个”] 

1634
01:10:11,310 --> 01:10:12,390
MC HAMMER :(唱歌）停止。 

1635
01:10:12,390 --> 01:10:12,920
锤击时间。 

1636
01:10:18,420 --> 01:10:19,380
大卫马兰：好的。 

1637
01:10:19,380 --> 01:10:21,210
如果可能的话，为安德里亚赢得一片掌声。 

1638
01:10:21,210 --> 01:10:23,950
[掌声] 

1639
01:10:23,950 --> 01:10:25,830
好。 

1640
01:10:25,830 --> 01:10:27,600
这就是CS50。 

1641
01:10:27,600 --> 01:10:28,950
有关详细信息，请访问网站

1642
01:10:28,950 --> 01:10:31,090
我们会在转录中看到你的蛋糕。 

1643
01:10:31,090 --> 01:10:32,940
欢迎乘坐。 

