1
00:00:00,000 --> 00:00:26,039
[音乐] 

2
00:00:30,050 --> 00:00:43,299
[音乐] 

3
00:00:46,040 --> 00:00:49,840
[掌声] 

4
00:00:47,200 --> 00:00:53,210
[音乐] 

5
00:00:49,840 --> 00:00:55,399
好吧 这是cs50，这是演讲 

6
00:00:53,210 --> 00:00:57,019
七 ， 我们离开的地方 

7
00:00:55,399 --> 00:00:59,629
上次关闭并谈论更多 

8
00:00:57,019 --> 00:01:02,390
Python，但 这次 使用Python 

9
00:00:59,629 --> 00:01:04,070
甚至更强大的目的和

10
00:01:02,390 --> 00:01:05,720
头韵我直到我才打算

11
00:01:04,070 --> 00:01:07,759
只是说它在那里，但 目标在这里 

12
00:01:05,720 --> 00:01:10,190
现在用Python来实际使用它 

13
00:01:07,759 --> 00:01:12,350
语言产生另一种语言 

14
00:01:10,190 --> 00:01:14,180
特别的HTML和我们要做的 是 

15
00:01:12,350 --> 00:01:15,619
开始 提供更多的 

16
00:01:14,180 --> 00:01:17,750
你会 称之为心智模型

17
00:01:15,619 --> 00:01:20,390
分离你所关注的问题

18
00:01:17,750 --> 00:01:21,830
设计更复杂的网络

19
00:01:20,390 --> 00:01:23,960
当你设计更复杂

20
00:01:21,830 --> 00:01:25,910
您倾向于 采用的软件

21
00:01:23,960 --> 00:01:27,530
某些设计模式让 你 如此 

22
00:01:25,910 --> 00:01:29,000
不只是把一切都写成一个大的 

23
00:01:27,530 --> 00:01:31,429
有点令人困惑的文件

24
00:01:29,000 --> 00:01:33,140
笨重的维护和 补充过度 

25
00:01:31,429 --> 00:01:35,119
时间， 但 你 开始 分开 你的 

26
00:01:33,140 --> 00:01:36,679
关注点和您的功能以及您的 

27
00:01:35,119 --> 00:01:38,410
功能和您的 协作者工作 

28
00:01:36,679 --> 00:01:40,160
分成不同的文件和 不同的 

29
00:01:38,410 --> 00:01:41,330
方法论，所以我们会试着给你 

30
00:01:40,160 --> 00:01:43,250
其中一些 行业标准 

31
00:01:41,330 --> 00:01:44,929
今天接近，为什么他们实际 

32
00:01:43,250 --> 00:01:46,310
解决问题但 当然我们是怎么做的 

33
00:01:44,929 --> 00:01:48,200
几个 星期前我们谈到了这里 

34
00:01:46,310 --> 00:01:49,610
这个虚拟信封 就是 这个东西 

35
00:01:48,200 --> 00:01:51,619
只表示信息包 

36
00:01:49,610 --> 00:01:53,929
零和一个穿过互联网 

37
00:01:51,619 --> 00:01:55,520
从A点到B点之间

38
00:01:53,929 --> 00:01:57,920
这些信封中的消息可能适用于

39
00:01:55,520 --> 00:02:00,560
网络请求，我们谈到了HTTP a 

40
00:01:57,920 --> 00:02:02,929
协议超文本传输​​协议

41
00:02:00,560 --> 00:02:04,880
只是 在里面发送这样的消息 

42
00:02:02,929 --> 00:02:06,590
信封， 这是请求 

43
00:02:04,880 --> 00:02:08,569
当然是 网站的默认页面 

44
00:02:06,590 --> 00:02:11,090
作为暗示的斜线 和许多 

45
00:02:08,569 --> 00:02:13,340
情况但并不总是这意味着 

46
00:02:11,090 --> 00:02:15,410
index.html的默认文件名

47
00:02:13,340 --> 00:02:16,340
那是一种人类的富裕，而不是一种 

48
00:02:15,410 --> 00:02:18,650
需求 

49
00:02:16,340 --> 00:02:24,170
希望服务器响应 

50
00:02:18,650 --> 00:02:25,489
数字代码等于整数200 

51
00:02:24,170 --> 00:02:27,650
希望是一个我们永远不会的数字

52
00:02:25,489 --> 00:02:28,849
实际上真的看到除非你 得到更多 

53
00:02:27,650 --> 00:02:31,129
舒服，开始 四处 寻找 

54
00:02:28,849 --> 00:02:33,349
Chrome的检查员， 你看看你的 

55
00:02:31,129 --> 00:02:35,000
网络流量权利所以这里是一个 

56
00:02:33,349 --> 00:02:37,010
实际成功的回应意味着 

57
00:02:35,000 --> 00:02:39,140
一切都确实 好，如果 

58
00:02:37,010 --> 00:02:40,849
浏览器看起来有点远 下来 

59
00:02:39,140 --> 00:02:42,739
虚拟信封，如果你愿意的话 

60
00:02:40,849 --> 00:02:44,930
看另一种叫做HTML的语言

61
00:02:42,739 --> 00:02:46,580
超文本标记语言 就是这样 

62
00:02:44,930 --> 00:02:48,200
我们 几周前 写的东西 

63
00:02:46,580 --> 00:02:51,349
你将 继续 本周和 你一起 写作 

64
00:02:48,200 --> 00:02:53,420
现在动态生成网站 但是 

65
00:02:51,349 --> 00:02:55,490
我们今天要介绍的是什么

66
00:02:53,420 --> 00:02:57,230
也称为框架或更多 

67
00:02:55,490 --> 00:02:58,610
正是一个微观框架 

68
00:02:57,230 --> 00:03:00,140
因为我们只会保存一些 

69
00:02:58,610 --> 00:03:02,209
分钟时间， 然后它实际上 可以 

70
00:03:00,140 --> 00:03:04,909
真讨厌， 真的很乏味 的 

71
00:03:02,209 --> 00:03:07,099
使用自动生成网站

72
00:03:04,909 --> 00:03:09,049
Python，如果你必须编写Python代码 

73
00:03:07,099 --> 00:03:11,000
过去一个人和人类 一样 

74
00:03:09,049 --> 00:03:12,769
好几年都注意到了哇 

75
00:03:11,000 --> 00:03:14,780
我使用 Web应用程序的时间

76
00:03:12,769 --> 00:03:16,549
Python 我发现自己打字一样 

77
00:03:14,780 --> 00:03:18,530
代码行一次 又一次 地 

78
00:03:16,549 --> 00:03:20,180
开始 或我合作时 

79
00:03:18,530 --> 00:03:21,530
和别人一起，我发现它是谁 

80
00:03:20,180 --> 00:03:24,019
如果我们有点难以合作 

81
00:03:21,530 --> 00:03:25,519
在 同一个文件中的所有工作，所以人类 

82
00:03:24,019 --> 00:03:28,040
发明了所谓的框架 

83
00:03:25,519 --> 00:03:30,440
这是代码编写的一个例子

84
00:03:28,040 --> 00:03:31,430
在Python中， 但使用一个名为的框架 

85
00:03:30,440 --> 00:03:33,860
烧瓶 

86
00:03:31,430 --> 00:03:35,959
所以 你玩的 引导程序 

87
00:03:33,860 --> 00:03:37,730
一点点是CSS的框架 

88
00:03:35,959 --> 00:03:40,129
他们有各种各样的JavaScript 

89
00:03:37,730 --> 00:03:42,349
一些动态特征以及一个烧瓶 

90
00:03:40,129 --> 00:03:44,359
一个给出的Python框架

91
00:03:42,349 --> 00:03:47,120
你可以使用一些库代码

92
00:03:44,359 --> 00:03:48,950
自由地在你自己的应用程序和它 

93
00:03:47,120 --> 00:03:50,959
只是让它最终变得容易一些 

94
00:03:48,950 --> 00:03:52,640
让你的工作完成并建立 

95
00:03:50,959 --> 00:03:53,720
你要建立的东西而不是 

96
00:03:52,640 --> 00:03:55,910
不得不重新实施

97
00:03:53,720 --> 00:03:58,840
或 一次又一次地 重新发明 轮子 

98
00:03:55,910 --> 00:04:00,890
喜欢 你之前的人，所以这里是一个 

99
00:03:58,840 --> 00:04:02,599
我之前提到过的方法论 

100
00:04:00,890 --> 00:04:05,000
只是为了有一个心理 模型 

101
00:04:02,599 --> 00:04:07,340
未来几周所以到 现在 为止 几乎 

102
00:04:05,000 --> 00:04:10,130
我们用C和C编写的每个程序

103
00:04:07,340 --> 00:04:13,340
最近在Python中你可以打电话 

104
00:04:10,130 --> 00:04:15,139
像控制器代码或控制器逻辑 

105
00:04:13,340 --> 00:04:17,389
或者商业逻辑就是这样 

106
00:04:15,139 --> 00:04:19,099
通常在逻辑上完成某些事情 

107
00:04:17,389 --> 00:04:21,530
在一个文件中， 如果你有两个文件 

108
00:04:19,099 --> 00:04:23,270
另一个是 EE或头文件的 助手 

109
00:04:21,530 --> 00:04:26,090
或者什么，但我们一直在写 

110
00:04:23,270 --> 00:04:28,580
逻辑， 但今天和两周前的 时候 

111
00:04:26,090 --> 00:04:30,470
我们将专注于HTML中的Web编程 

112
00:04:28,580 --> 00:04:32,419
和CSS 这是 我们的 第二部分 

113
00:04:30,470 --> 00:04:33,860
世界就像那种逻辑 一样 

114
00:04:32,419 --> 00:04:35,930
完成有趣的工作

115
00:04:33,860 --> 00:04:37,550
循环和条件以及所有这些

116
00:04:35,930 --> 00:04:39,860
现在还有美学 

117
00:04:37,550 --> 00:04:42,500
用户 实际看到 的东西 

118
00:04:39,860 --> 00:04:43,789
以及您呈现数据的方式

119
00:04:42,500 --> 00:04:45,740
我们将介绍两个 

120
00:04:43,789 --> 00:04:47,630
今天移动的首字母缩写词 

121
00:04:45,740 --> 00:04:50,000
在 你开始 写作时 随时 转发 

122
00:04:47,630 --> 00:04:52,099
它将成为 Python中的逻辑代码

123
00:04:50,000 --> 00:04:54,020
称你的控制器有点像 

124
00:04:52,099 --> 00:04:55,910
操作整个机器的机器

125
00:04:54,020 --> 00:04:57,320
网络应用程序， 但 随时都可以 

126
00:04:55,910 --> 00:05:00,260
我们会 更加 审美的东西

127
00:04:57,320 --> 00:05:01,880
称你的视图代码为C和V. 

128
00:05:00,260 --> 00:05:03,440
是这里的字母，这只是 

129
00:05:01,880 --> 00:05:05,510
指的是关注点的分离

130
00:05:03,440 --> 00:05:07,310
你的逻辑进入这个文件和你的 

131
00:05:05,510 --> 00:05:08,950
美学和格式都在这里 

132
00:05:07,310 --> 00:05:10,620
其它文件下周我们将介绍 

133
00:05:08,950 --> 00:05:12,270
数据库和平方 

134
00:05:10,620 --> 00:05:14,460
结构化查询语言和 意志 

135
00:05:12,270 --> 00:05:16,650
在这里引入一个M因为首字母缩略词 

136
00:05:14,460 --> 00:05:18,750
这已经被调用了很长一段时间 了 

137
00:05:16,650 --> 00:05:20,310
是MVC虽然有其他选择 

138
00:05:18,750 --> 00:05:21,660
这个 心理模型， 这只是 意味着 

139
00:05:20,310 --> 00:05:22,889
有三种不同的 类型 

140
00:05:21,660 --> 00:05:24,660
你 应该考虑的事情 但是 

141
00:05:22,889 --> 00:05:25,590
构建一个 应用程序，但是当今天 

142
00:05:24,660 --> 00:05:27,780
我们将专注于这两个 

143
00:05:25,590 --> 00:05:29,010
控制器和视图和到 现在 为止 

144
00:05:27,780 --> 00:05:31,199
我们 几乎没有做过 

145
00:05:29,010 --> 00:05:33,780
写作时完全是控制器的东西 

146
00:05:31,199 --> 00:05:35,460
代码 所以 动机最终会 

147
00:05:33,780 --> 00:05:38,310
要达到建设的目的 

148
00:05:35,460 --> 00:05:41,220
基本上这是新生的校内 

149
00:05:38,310 --> 00:05:44,039
我是第一个体育网站 

150
00:05:41,220 --> 00:05:46,770
作为一名大二学生在1996年回归

151
00:05:44,039 --> 00:05:48,960
1997年可能仅具有 后初中 

152
00:05:46,770 --> 00:05:51,150
采取cs50 和后续班级cs50 

153
00:05:48,960 --> 00:05:53,699
一个，即使这是可怕的 

154
00:05:51,150 --> 00:05:55,560
现在看看引擎盖下的一天 

155
00:05:53,699 --> 00:05:57,750
是一大堆控制器逻辑

156
00:05:55,560 --> 00:05:59,610
甚至还有 一大堆模型代码 

157
00:05:57,750 --> 00:06:01,320
虽然我不 认为MVC存在 

158
00:05:59,610 --> 00:06:03,240
当时的缩写， 直到人类 

159
00:06:01,320 --> 00:06:05,280
找出了模式， 但它做了什么 

160
00:06:03,240 --> 00:06:07,289
通过这里的菜单是一个整体 

161
00:06:05,280 --> 00:06:08,850
许多功能，所以不再 

162
00:06:07,289 --> 00:06:10,260
你必须穿过校园填充 

163
00:06:08,850 --> 00:06:12,960
拿出一张纸， 然后 放下一张纸 

164
00:06:10,260 --> 00:06:14,820
和RA或Proctor的宿舍一样 

165
00:06:12,960 --> 00:06:16,349
你可以改为上网吧 

166
00:06:14,820 --> 00:06:18,750
我们所有人今天肯定都是理所当然的 

167
00:06:16,349 --> 00:06:21,599
填写一个 基于网络的表格然后在 

168
00:06:18,750 --> 00:06:23,849
监督员掌管的时间 

169
00:06:21,599 --> 00:06:25,410
IMS会收到一封电子邮件， 确认是谁 

170
00:06:23,849 --> 00:06:27,330
实际上已经注册了运动和 

171
00:06:25,410 --> 00:06:29,010
最后我们添加了CSV文件逗号

172
00:06:27,330 --> 00:06:30,840
分隔值文件，如电子表格 

173
00:06:29,010 --> 00:06:32,160
然后我们保存了数据 

174
00:06:30,840 --> 00:06:33,330
这个非常酷的锦标赛支架 

175
00:06:32,160 --> 00:06:35,130
一切都非常有活力的东西

176
00:06:33,330 --> 00:06:36,660
令人印象深刻我当时肯定但是 

177
00:06:35,130 --> 00:06:38,940
我们将专注于 真正 的 

178
00:06:36,660 --> 00:06:39,270
今天的基本面，我们如何得到 

179
00:06:38,940 --> 00:06:41,220
那里

180
00:06:39,270 --> 00:06:44,070
好吧，让我继续开放cs50 

181
00:06:41,220 --> 00:06:47,310
IDE 并提议 如果我们想 制作 

182
00:06:44,070 --> 00:06:49,050
一个网站真的 和 一个Web应用程序 

183
00:06:47,310 --> 00:06:50,849
应用程序我的意思是

184
00:06:49,050 --> 00:06:52,620
确实有网站的逻辑 

185
00:06:50,849 --> 00:06:54,090
通常东西是静态的 ，所以 

186
00:06:52,620 --> 00:06:55,710
这是一个网络应用程序是什么 

187
00:06:54,090 --> 00:06:57,120
这取决于谁在使用它 

188
00:06:55,710 --> 00:06:58,919
当你使用它 和你是什么时 

189
00:06:57,120 --> 00:07:00,840
用它做让我 继续前进 ，在 

190
00:06:58,919 --> 00:07:03,810
最烦人的最烦人的方式 

191
00:07:00,840 --> 00:07:05,880
可以实现Web 应用程序 

192
00:07:03,810 --> 00:07:09,810
使用Python 所以我要 继续 

193
00:07:05,880 --> 00:07:11,880
并 打开一个名为serve dot tie 的文件 

194
00:07:09,810 --> 00:07:13,740
成为了一个网站， 我 要去 

195
00:07:11,880 --> 00:07:16,349
提前并导入一些库代码 

196
00:07:13,740 --> 00:07:19,440
从HTTP服务器导入调用的东西 

197
00:07:16,349 --> 00:07:21,659
基本HTTP请求处理程序也是 

198
00:07:19,440 --> 00:07:22,680
然后称为HTTP服务器的东西

199
00:07:21,659 --> 00:07:24,180
我要继续使用这个新的 

200
00:07:22,680 --> 00:07:31,050
关键字类哪个 

201
00:07:24,180 --> 00:07:36,570
是HTTP服务器服务器 请求请求 

202
00:07:31,050 --> 00:07:39,030
处理程序 基础HTTP请求处理程序 

203
00:07:36,570 --> 00:07:43,139
处理程序然后我会继续 前进 到这里 

204
00:07:39,030 --> 00:07:45,780
实现一个名为do def do的函数 

205
00:07:43,139 --> 00:07:47,460
得到这意味着这是一个函数 

206
00:07:45,780 --> 00:07:51,300
Python的那个应该叫 一个随时 

207
00:07:47,460 --> 00:07:52,770
用户访问我的Web服务器获取 

208
00:07:51,300 --> 00:07:54,750
动词的类型， 我们已经 在谈论 

209
00:07:52,770 --> 00:07:57,270
网络的上下文，以便假设 

210
00:07:54,750 --> 00:07:58,919
我唯一的目标是 建立一个基于网络的 

211
00:07:57,270 --> 00:08:00,780
暂时的应用程序

212
00:07:58,919 --> 00:08:02,520
问好世界我们知道如何做到这一点 

213
00:08:00,780 --> 00:08:05,039
使用HTML但HTML 只是一个 

214
00:08:02,520 --> 00:08:08,220
文件让我们写一个 不仅仅是 的程序 

215
00:08:05,039 --> 00:08:10,349
打印HT一个hello world但生成一个 

216
00:08:08,220 --> 00:08:11,970
包含hello world的网页所以 

217
00:08:10,349 --> 00:08:13,889
这样我可以做到这一点是这样的 ，我可以 

218
00:08:11,970 --> 00:08:15,690
字面上说自我， 因为自我指的 

219
00:08:13,889 --> 00:08:18,360
在这种 情况下，我可以到Web服务器

220
00:08:15,690 --> 00:08:20,009
继续并 发送 响应代码200 

221
00:08:18,360 --> 00:08:21,660
只是有点擅自假设 

222
00:08:20,009 --> 00:08:23,400
一会儿就好了 

223
00:08:21,660 --> 00:08:25,320
然后我会继续发送一个 

224
00:08:23,400 --> 00:08:27,479
回忆我们已经讨论过的标题

225
00:08:25,320 --> 00:08:31,830
过去简要介绍一下这个标题 

226
00:08:27,479 --> 00:08:34,020
将是内容类型及其价值 

227
00:08:31,830 --> 00:08:35,610
将 是文本HTML这是一个线索 

228
00:08:34,020 --> 00:08:38,219
到 它不接收 的 浏览器 

229
00:08:35,610 --> 00:08:40,289
jiff或 JPEG或 其他东西，但一个 

230
00:08:38,219 --> 00:08:41,880
实际的HTML页面，然后我 会 去 

231
00:08:40,289 --> 00:08:43,469
提前并说它是标题 

232
00:08:41,880 --> 00:08:46,350
我要调用名为end的函数 

233
00:08:43,469 --> 00:08:49,230
标题然后最后我会用 

234
00:08:46,350 --> 00:08:51,029
Python代码动态 生成我的 

235
00:08:49,230 --> 00:08:52,620
网站现在网站 有 什么 

236
00:08:51,029 --> 00:08:54,209
在世界末日只有你好世界

237
00:08:52,620 --> 00:08:56,070
一天，但有 HTML的一大堆 我们 

238
00:08:54,209 --> 00:08:59,010
需要做的是为了达到这一点 

239
00:08:56,070 --> 00:09:01,470
所以我将使用一个名为 W 的函数 

240
00:08:59,010 --> 00:09:03,380
文件权利，以便写出来 

241
00:09:01,470 --> 00:09:07,140
接下来让我继续写 下来 

242
00:09:03,380 --> 00:09:11,279
文档类型哎呦感叹号 

243
00:09:07,140 --> 00:09:14,760
然后DOCTYPE HTML让我继续做 

244
00:09:11,279 --> 00:09:16,410
同样的事W文件让我走了 

245
00:09:14,760 --> 00:09:18,209
提前和复制 粘贴这个前进 

246
00:09:16,410 --> 00:09:20,490
这当然总是一种坏的本能 

247
00:09:18,209 --> 00:09:24,510
然后让我继续输出'html 

248
00:09:20,490 --> 00:09:26,550
lang equals en for English and notice 

249
00:09:24,510 --> 00:09:27,779
我在我的双人内部使用单引号 

250
00:09:26,550 --> 00:09:30,029
引用，以便Python无法获得 

251
00:09:27,779 --> 00:09:33,540
困惑然后让我继续 输出 

252
00:09:30,029 --> 00:09:36,600
好吧， 这是头部标签然后是什么 

253
00:09:33,540 --> 00:09:38,160
头标记通常是肯定的

254
00:09:36,600 --> 00:09:41,220
所以通常标题最近

255
00:09:38,160 --> 00:09:44,970
所以标题就像 你好呐喊你好 

256
00:09:41,220 --> 00:09:46,709
标题 关闭 标题标签，现在我们是 

257
00:09:44,970 --> 00:09:51,180
要 继续前进后会发生什么 

258
00:09:46,709 --> 00:09:52,649
标题封闭头我 想从做 

259
00:09:51,180 --> 00:09:56,040
这是正确的， 然后我们 

260
00:09:52,649 --> 00:09:58,110
可能有身体，然后 锄我的 上帝 

261
00:09:56,040 --> 00:10:00,120
这是构建网站的最糟糕 方式 

262
00:09:58,110 --> 00:10:02,910
但是让我们继续吧，现在说些什么 

263
00:10:00,120 --> 00:10:06,629
简单就像你好世界 ，现在让我们走吧 

264
00:10:02,910 --> 00:10:09,029
在这里，说一些 像身体和 

265
00:10:06,629 --> 00:10:14,610
然后最后让我们继续和结束 

266
00:10:09,029 --> 00:10:16,110
页面并说斜杠HTML完成没关系 

267
00:10:14,610 --> 00:10:17,790
现在我自然需要 配置 了 

268
00:10:16,110 --> 00:10:19,860
服务器在端口上监听所以让我走吧 

269
00:10:17,790 --> 00:10:21,540
提前并定义一个8080的TCP端口 

270
00:10:19,860 --> 00:10:23,610
我们一直在使用， 让我继续前进 

271
00:10:21,540 --> 00:10:26,250
并将 服务器的地址定义 为 

272
00:10:23,610 --> 00:10:27,930
o 0点0点0点0这是什么的 

273
00:10:26,250 --> 00:10:29,699
IDE默认使用很多 

274
00:10:27,930 --> 00:10:33,509
服务器，然后让我创建 网络 

275
00:10:29,699 --> 00:10:39,870
服务器HTTP 服务器服务器下划线 

276
00:10:33,509 --> 00:10:44,189
地址HTTP服务器请求 处理程序HTTP 

277
00:10:39,870 --> 00:10:45,870
d点服务永远 没关系，这就是你 

278
00:10:44,189 --> 00:10:48,750
制作一个 基于Web的 应用程序 

279
00:10:45,870 --> 00:10:50,040
动态生成HTML 回顾我 

280
00:10:48,750 --> 00:10:52,199
真的后悔输入所有这些

281
00:10:50,040 --> 00:10:54,180
因为 现在的重点是投掷 

282
00:10:52,199 --> 00:10:57,029
像 这样的代码就是为什么 

283
00:10:54,180 --> 00:10:58,880
如果我的目标很简单就存在框架

284
00:10:57,029 --> 00:11:03,149
手头就是编写 Python代码 

285
00:10:58,880 --> 00:11:04,889
动态生成HTML然后调用 

286
00:11:03,149 --> 00:11:06,540
许多功能，如正确的是 

287
00:11:04,889 --> 00:11:09,000
基本上相当于打印

288
00:11:06,540 --> 00:11:10,769
在这种背景下， 我得到 的只是单调乏味 

289
00:11:09,000 --> 00:11:12,480
无聊的写作我完成了 

290
00:11:10,769 --> 00:11:14,519
在一天结束时非常少

291
00:11:12,480 --> 00:11:16,439
所以框架存在使我们的 

292
00:11:14,519 --> 00:11:19,170
生活变得更容易 ，但是这是 怎么回事 

293
00:11:16,439 --> 00:11:20,790
在引擎盖下正是这个时候 

294
00:11:19,170 --> 00:11:23,009
我们开始使用这个叫做的框架 

295
00:11:20,790 --> 00:11:24,959
烧瓶它只是要做所有这一切 

296
00:11:23,009 --> 00:11:27,029
为我们自动化，它将成功 

297
00:11:24,959 --> 00:11:28,980
更容易指定那个IP地址

298
00:11:27,029 --> 00:11:30,360
你想 在它上面 运行你的 网络服务器 

299
00:11:28,980 --> 00:11:32,009
将更容易指定 

300
00:11:30,360 --> 00:11:33,720
您 希望服务器访问的端口号

301
00:11:32,009 --> 00:11:37,649
正在倾听并且它将会成功 

302
00:11:33,720 --> 00:11:39,809
它更容易响应获取请求 

303
00:11:37,649 --> 00:11:41,639
因为烧瓶会照顾好 

304
00:11:39,809 --> 00:11:44,879
执行一些功能就好 

305
00:11:41,639 --> 00:11:46,800
这个叫做 do得到所有这一切 

306
00:11:44,879 --> 00:11:48,540
在引擎盖下面但是公寓 

307
00:11:46,800 --> 00:11:51,059
烧瓶框架给了 我们 

308
00:11:48,540 --> 00:11:51,779
基本上是一个抽象 

309
00:11:51,059 --> 00:11:53,279
这么 

310
00:11:51,779 --> 00:11:56,129
如果我们真的是什么意思呢？ 

311
00:11:53,279 --> 00:11:57,990
想把它现在提炼成 一个网络 

312
00:11:56,129 --> 00:11:59,220
更简单的Web应用程序首先让我们走吧 

313
00:11:57,990 --> 00:12:01,620
前进并做到这一点让我继续前进 

314
00:11:59,220 --> 00:12:05,040
打开 一个终端窗口让我走 

315
00:12:01,620 --> 00:12:08,339
进入我的代码 并继续运行 

316
00:12:05,040 --> 00:12:10,079
Python观察 PI ，你什么也看不见 

317
00:12:08,339 --> 00:12:12,660
似乎正在发生，所以我 

318
00:12:10,079 --> 00:12:14,790
要去cs50 IDE web服务器打开 

319
00:12:12,660 --> 00:12:16,740
包含Web服务器的选项卡

320
00:12:14,790 --> 00:12:18,420
我现在 正在跑步，你会看到 它就是这样 

321
00:12:16,740 --> 00:12:19,829
这是我 唯一 完成的事情 

322
00:12:18,420 --> 00:12:22,019
现在， 确定不是动态的

323
00:12:19,829 --> 00:12:23,939
但那里有Python代码中的代码 

324
00:12:22,019 --> 00:12:26,160
我实际上可以做些什么 

325
00:12:23,939 --> 00:12:29,309
动态但让我们改为做

326
00:12:26,160 --> 00:12:30,779
现在用烧瓶这个框架似乎 

327
00:12:29,309 --> 00:12:32,720
让我们的生活更轻松我会去 

328
00:12:30,779 --> 00:12:35,279
提前做一个叫做的程序 

329
00:12:32,720 --> 00:12:36,720
应用点 Pi只是一个 

330
00:12:35,279 --> 00:12:38,490
惯例我可以称之为 任何我 

331
00:12:36,720 --> 00:12:40,139
想和我会 继续 前进 ，说 

332
00:12:38,490 --> 00:12:42,089
下面 让我们先来继续前进 ， 

333
00:12:40,139 --> 00:12:44,610
导入此框架调用烧瓶中 ， 

334
00:12:42,089 --> 00:12:45,959
特别是进口大写的烧瓶

335
00:12:44,610 --> 00:12:47,730
这是框架的名称

336
00:12:45,959 --> 00:12:49,860
本身然后让我先发制人 

337
00:12:47,730 --> 00:12:51,899
导入一些 名为 的函数 

338
00:12:49,860 --> 00:12:53,579
渲染模板，然后这个特殊 

339
00:12:51,899 --> 00:12:54,839
你 想要的 全局变量叫做请求 

340
00:12:53,579 --> 00:12:56,970
只知道从 阅读中做到这一点

341
00:12:54,839 --> 00:12:59,279
文档， 但现在让我继续 

342
00:12:56,970 --> 00:13:02,129
并说嘿烧瓶你能不能给 

343
00:12:59,279 --> 00:13:03,569
我是一个Web 应用程序 ，这是副本 

344
00:13:02,129 --> 00:13:06,149
粘贴你需要它在任何顶部

345
00:13:03,569 --> 00:13:09,779
烧瓶应用，它只是意味着转 

346
00:13:06,149 --> 00:13:12,120
这个文件应用程序PI进入和web 

347
00:13:09,779 --> 00:13:13,980
应用然后最后我会去 

348
00:13:12,120 --> 00:13:16,170
前进并做到这一点我要告诉烧瓶我 

349
00:13:13,980 --> 00:13:18,899
想要构建一个有路由的应用程序

350
00:13:16,170 --> 00:13:21,720
那是在听内心 的 斜线 

351
00:13:18,899 --> 00:13:25,170
那个虚拟 信封和每当烧瓶 

352
00:13:21,720 --> 00:13:27,569
你看到一些请求斜线的请求 

353
00:13:25,170 --> 00:13:29,639
用户继续并 调用此功能 

354
00:13:27,569 --> 00:13:31,170
我会任意 称之为索引但是 

355
00:13:29,639 --> 00:13:34,160
我可以把它称为foo或bar 或者其他什么 

356
00:13:31,170 --> 00:13:38,939
而 我希望你 做的就是回归 

357
00:13:34,160 --> 00:13:40,740
你好世界 ，就是这样 

358
00:13:38,939 --> 00:13:42,870
那些我乏味地写出来的其他文字 

359
00:13:40,740 --> 00:13:44,550
刚才现在被提炼 成公正的 

360
00:13:42,870 --> 00:13:45,990
七条线，其中没有 一条 

361
00:13:44,550 --> 00:13:48,120
他们的工作方式完全明显 

362
00:13:45,990 --> 00:13:50,790
但是如果你认为 这意味着 

363
00:13:48,120 --> 00:13:53,490
让我访问 图书馆转我的 

364
00:13:50,790 --> 00:13:56,819
将文件存入Web 应用程序并收听 

365
00:13:53,490 --> 00:13:58,290
现在用于获取斜杠请求然后它 

366
00:13:56,819 --> 00:13:59,490
有点理智，适合 

367
00:13:58,290 --> 00:14:02,370
我们 介绍了一对情绪模型

368
00:13:59,490 --> 00:14:04,019
几个星期前，HTML 和CSS本身 和 

369
00:14:02,370 --> 00:14:05,490
运行这个服务器我要去的 地方 

370
00:14:04,019 --> 00:14:07,230
现在在我的问候 

371
00:14:05,490 --> 00:14:08,850
目录，这是一个 在线副本 

372
00:14:07,230 --> 00:14:10,260
这是 我 在课程 网站 上的 

373
00:14:08,850 --> 00:14:12,420
要继续， 简单地 说 

374
00:14:10,260 --> 00:14:14,010
烧瓶运行 所以烧瓶不仅是一个 

375
00:14:12,420 --> 00:14:16,350
框架或代码 ，你有什么 

376
00:14:14,010 --> 00:14:18,240
访问 免费和开源代码 

377
00:14:16,350 --> 00:14:19,890
但它也是一个你可以运行的程序

378
00:14:18,240 --> 00:14:21,750
命令行也可以找到 

379
00:14:19,890 --> 00:14:23,190
如何返回服务器并 运行 

380
00:14:21,750 --> 00:14:25,320
永远 你会看到一些 

381
00:14:23,190 --> 00:14:26,459
诊断输出乍一看最多 

382
00:14:25,320 --> 00:14:28,440
其中你不必 关心 

383
00:14:26,459 --> 00:14:30,300
但是 会有 一个唾液的URL 

384
00:14:28,440 --> 00:14:32,940
out 取决于您 自己的 用户名 

385
00:14:30,300 --> 00:14:34,800
我今天是 杰伊哈佛3只是为了 

386
00:14:32,940 --> 00:14:37,560
演示目的，如果你 点击 

387
00:14:34,800 --> 00:14:39,870
在该URL上 ，然后单击打开你 

388
00:14:37,560 --> 00:14:42,510
现在看到这个版本 的相同 

389
00:14:39,870 --> 00:14:44,190
应用就是这样，我很善良 

390
00:14:42,510 --> 00:14:46,200
欺骗虽然 因为如果我打开 

391
00:14:44,190 --> 00:14:49,320
chrome并查看我的页面 来源通知 

392
00:14:46,200 --> 00:14:51,390
那当然是我作弊因为 所有 

393
00:14:49,320 --> 00:14:52,890
我所做的就是打印出来的Hello World 和 

394
00:14:51,390 --> 00:14:55,140
如果我 查看此页面的来源，我就是 

395
00:14:52,890 --> 00:14:57,810
字面上只会看到你好世界 

396
00:14:55,140 --> 00:15:01,020
并且没有实际的 HTML，因为我字面意思 

397
00:14:57,810 --> 00:15:02,970
没有在我的文件中输入任何HTML 但是 

398
00:15:01,020 --> 00:15:05,279
事实证明， 烧瓶是这样做的 

399
00:15:02,970 --> 00:15:07,140
也很容易让我继续 前进 并停下来 

400
00:15:05,279 --> 00:15:08,310
服务器这里只是片刻 ctrl C. 

401
00:15:07,140 --> 00:15:10,020
是你的朋友它可以让你出来的 

402
00:15:08,310 --> 00:15:12,390
无论什么程序实际运行 和 

403
00:15:10,020 --> 00:15:13,860
让我继续吧， 让我走吧 

404
00:15:12,390 --> 00:15:16,680
提前而不只是返回引用unquote 

405
00:15:13,860 --> 00:15:19,020
你好世界作为一个硬编码的价值让我 

406
00:15:16,680 --> 00:15:23,190
继续并返回a 的 渲染 

407
00:15:19,020 --> 00:15:25,589
模板名为index.html ，所以这个 

408
00:15:23,190 --> 00:15:28,440
如果你愿意 ， 是烧瓶2的一个特征

409
00:15:25,589 --> 00:15:31,380
将您的控制器逻辑分开 

410
00:15:28,440 --> 00:15:33,390
你的HTML 你的视图你真的拉 

411
00:15:31,380 --> 00:15:36,060
它在应用程序PI和前者中

412
00:15:33,390 --> 00:15:37,950
你把 后者放在 像 HTML 这样 的HTML文件中 

413
00:15:36,060 --> 00:15:41,339
这和你告诉控制器代码 

414
00:15:37,950 --> 00:15:44,459
应用程序点PI 向用户显示 

415
00:15:41,339 --> 00:15:47,040
为用户呈现index.html文件 

416
00:15:44,459 --> 00:15:48,870
所以我把这个约定放在哪里

417
00:15:47,040 --> 00:15:52,529
将是一个名为的目录 

418
00:15:48,870 --> 00:15:54,589
模板，然后在该目录中去 

419
00:15:52,529 --> 00:15:57,180
提前并放入一个名为index.html的文件

420
00:15:54,589 --> 00:15:58,950
如果我去 进取，不断 开拓的文件 

421
00:15:57,180 --> 00:16:00,209
我已经提前创建了 

422
00:15:58,950 --> 00:16:01,829
这里的课让我 告诉你什么 

423
00:16:00,209 --> 00:16:05,420
这看起来像然后 我们会采取 一个 

424
00:16:01,829 --> 00:16:09,270
现在在浏览器中 查看它是HTML 

425
00:16:05,420 --> 00:16:11,820
我们有一个非常奇特的功能

426
00:16:09,270 --> 00:16:14,930
即将揭示什么的实用性 

427
00:16:11,820 --> 00:16:17,370
在这个文件中跳出来作为新的东西

428
00:16:14,930 --> 00:16:20,829
是啊 

429
00:16:17,370 --> 00:16:23,079
是的两个花括号，不知何故或 

430
00:16:20,829 --> 00:16:25,120
曾经说过世界的其他人

431
00:16:23,079 --> 00:16:26,980
在我的最终版本中我实际上 

432
00:16:25,120 --> 00:16:28,690
我暗示一些更强大的 

433
00:16:26,980 --> 00:16:30,610
这种看起来像是一种能力 

434
00:16:28,690 --> 00:16:32,769
占位符， 如果你可能会有人 

435
00:16:30,610 --> 00:16:34,389
实际名称和这里的权力 

436
00:16:32,769 --> 00:16:36,670
闪光之类的东西发挥作用 

437
00:16:34,389 --> 00:16:38,259
这使得它很容易 做一些事情 

438
00:16:36,670 --> 00:16:40,209
像这样，让 我继续前进 

439
00:16:38,259 --> 00:16:41,889
实际上把它变成 了一个东西 

440
00:16:40,209 --> 00:16:44,259
更让我感兴趣的是让我进入 

441
00:16:41,889 --> 00:16:46,720
申请点pi和我之前 

442
00:16:44,259 --> 00:16:47,560
渲染这个HTML文件让我继续 

443
00:16:46,720 --> 00:16:49,149
并做到这一点 

444
00:16:47,560 --> 00:16:51,370
让我AHA继续并宣布一个 

445
00:16:49,149 --> 00:16:54,100
变量名为name， 让我继续吧 

446
00:16:51,370 --> 00:16:55,870
并 检查传入 请求 的 

447
00:16:54,100 --> 00:16:58,600
在那个虚拟 信封里面

448
00:16:55,870 --> 00:17:01,180
让我检查一下它的论点 或任何一个 

449
00:16:58,600 --> 00:17:04,390
传入的HTTP参数和

450
00:17:01,180 --> 00:17:06,429
试着得到名字之 类的 东西 

451
00:17:04,390 --> 00:17:09,159
这让我继续前进并保存它 

452
00:17:06,429 --> 00:17:10,929
然后注意这个渲染模板需要 

453
00:17:09,159 --> 00:17:12,339
第一个 应该是多个参数

454
00:17:10,929 --> 00:17:14,079
是您 想要 的模板的名称 

455
00:17:12,339 --> 00:17:17,890
渲染， 但如果你想传入数据 

456
00:17:14,079 --> 00:17:20,319
动态地， 您可以使用命名参数 

457
00:17:17,890 --> 00:17:22,630
在 Python中 从上周 回忆 起 你 

458
00:17:20,319 --> 00:17:25,360
可以做这样的事情x等于 y和z 

459
00:17:22,630 --> 00:17:26,799
等于W你可以传递的名字 

460
00:17:25,360 --> 00:17:28,990
你要传递的东西和他们的东西

461
00:17:26,799 --> 00:17:33,309
相应的值，如果我想 

462
00:17:28,990 --> 00:17:35,950
传入一个名称变量并将其设置为相等 

463
00:17:33,309 --> 00:17:39,010
到我刚刚定义的名称变量 

464
00:17:35,950 --> 00:17:42,250
看看我们能在这做什么让我 回去 

465
00:17:39,010 --> 00:17:45,340
到我的控制台让我继续并重新运行 

466
00:17:42,250 --> 00:17:48,309
在我的hello目录中 可用 

467
00:17:45,340 --> 00:17:50,409
在线 烧瓶运行，现在让我过去 

468
00:17:48,309 --> 00:17:52,600
到此之前它曾打招呼过 

469
00:17:50,409 --> 00:17:54,549
世界让我现在就像我们一样 

470
00:17:52,600 --> 00:17:56,559
几周前的 Google 示例类型 

471
00:17:54,549 --> 00:17:59,080
在Q不等于猫，这就是我们 

472
00:17:56,559 --> 00:18:01,960
最后一次， 但也许名字等于 

473
00:17:59,080 --> 00:18:04,000
大卫要模拟一个获取请求 ，如果我 

474
00:18:01,960 --> 00:18:06,909
当我进入我时，我做的一切都是正确的 

475
00:18:04,000 --> 00:18:09,460
现在看到这个动态，如果我改变 

476
00:18:06,909 --> 00:18:10,900
现在来自David，你说Veronica 

477
00:18:09,460 --> 00:18:13,299
当然这是动态的 

478
00:18:10,900 --> 00:18:15,549
输出这可以有人现在试图打破 

479
00:18:13,299 --> 00:18:19,409
我的代码建议我应该输入 

480
00:18:15,549 --> 00:18:19,409
试着看看我是否搞砸了某个地方 

481
00:18:20,940 --> 00:18:27,630
没有条目没有输入或我是什么 

482
00:18:23,900 --> 00:18:29,100
再说一次名字等于我喜欢的名字

483
00:18:27,630 --> 00:18:31,980
一个也是这样，让我们​​尝试这个名称等于 

484
00:18:29,100 --> 00:18:34,470
名字好吧我的意思是它有点太多了 

485
00:18:31,980 --> 00:18:37,020
也许就像一个语法错误或语义

486
00:18:34,470 --> 00:18:38,880
错误但不是真正的代码错误本身 

487
00:18:37,020 --> 00:18:41,400
这只是用户错误，但如果我

488
00:18:38,880 --> 00:18:43,140
只是看起来 摆脱它 好吧 

489
00:18:41,400 --> 00:18:44,520
有点愚蠢，所以一个审美的错误，但 

490
00:18:43,140 --> 00:18:46,160
我们应该开始处理这个问题 

491
00:18:44,520 --> 00:18:48,660
如果我完全摆脱名字怎么办？ 

492
00:18:46,160 --> 00:18:49,980
有趣的 似乎 是我的决赛 

493
00:18:48,660 --> 00:18:51,630
版本 实际上有一些 内置 

494
00:18:49,980 --> 00:18:54,000
功能所以即将到来 

495
00:18:51,630 --> 00:18:56,010
好吧如果我做了这件事就转过来了 

496
00:18:54,000 --> 00:18:58,620
我可以说 这样的话 

497
00:18:56,010 --> 00:19:00,720
如果没有 命名， 那么继续 并设置名称 

498
00:18:58,620 --> 00:19:03,630
等于世界 会 做 的 一种方式 

499
00:19:00,720 --> 00:19:05,910
它或者我可以实际使用 的 

500
00:19:03,630 --> 00:19:08,430
此功能障碍原来，这 让 

501
00:19:05,910 --> 00:19:09,840
函数可以采用默认值等 

502
00:19:08,430 --> 00:19:11,670
如果您阅读了您将看到的文档 

503
00:19:09,840 --> 00:19:13,740
第二个值提供的将是

504
00:19:11,670 --> 00:19:15,690
如果用户没有提供一个和，则使用 

505
00:19:13,740 --> 00:19:18,150
所以如果我现在重装并看到 

506
00:19:15,690 --> 00:19:21,270
没有什么我得到世界 ，如果我改为做 

507
00:19:18,150 --> 00:19:23,340
名字等于说布莱恩我得到了这种动态 

508
00:19:21,270 --> 00:19:25,770
输出等我的意思是当我说网络时

509
00:19:23,340 --> 00:19:27,450
应用这 只是一个什么的暗示 

510
00:19:25,770 --> 00:19:30,060
我的意思是这是动态生成的 

511
00:19:27,450 --> 00:19:31,620
内容它 不是硬编码，因为它是 

512
00:19:30,060 --> 00:19:34,790
实际上是来自 用户的时候 

513
00:19:31,620 --> 00:19:36,990
谷歌实施其斜线搜索网络 

514
00:19:34,790 --> 00:19:38,430
应用这是 一种事情 

515
00:19:36,990 --> 00:19:39,240
他们正在做 它的方式更多 参与的 

516
00:19:38,430 --> 00:19:41,160
当然他们正在搜索数据库 

517
00:19:39,240 --> 00:19:42,600
寻找猫和狗或任何它 

518
00:19:41,160 --> 00:19:45,060
你在找什么呢？ 

519
00:19:42,600 --> 00:19:47,310
生成 HTML 但只注意到 

520
00:19:45,060 --> 00:19:50,520
这个简单的方法可以我们自己 

521
00:19:47,310 --> 00:19:52,050
生成我们想要动态的任何HTML 

522
00:19:50,520 --> 00:19:55,160
因为所有我们在做

523
00:19:52,050 --> 00:19:58,410
模板称为索引点HTML 

524
00:19:55,160 --> 00:20:00,840
正是这个你好的逗号，然后是一个 

525
00:19:58,410 --> 00:20:02,670
占位符，其中name是变量 

526
00:20:00,840 --> 00:20:04,200
你要传入，所以要清楚 

527
00:20:02,670 --> 00:20:05,820
我不需要被称为名字 

528
00:20:04,200 --> 00:20:08,160
做一些像foo这样的事情

529
00:20:05,820 --> 00:20:10,050
有点荒谬， 但如果我这样做了 

530
00:20:08,160 --> 00:20:11,790
需要调用变量I 插件 

531
00:20:10,050 --> 00:20:14,100
foo在这里，所以有一对一 

532
00:20:11,790 --> 00:20:16,440
之前事物之间的对应关系 

533
00:20:14,100 --> 00:20:19,200
等号和他们得到的地方 

534
00:20:16,440 --> 00:20:21,510
好好插上这里任何一个 

535
00:20:19,200 --> 00:20:24,740
那么关于 这个简单 例子的问题 

536
00:20:21,510 --> 00:20:24,740
但是积木是的 

537
00:20:27,310 --> 00:20:34,190
确保通过动态生成我的意思是我 

538
00:20:30,770 --> 00:20:36,380
没有事先 通过输入来 写 

539
00:20:34,190 --> 00:20:37,730
手动打开 一个 打招呼 的网页 

540
00:20:36,380 --> 00:20:40,490
大卫或你好 布莱恩 

541
00:20:37,730 --> 00:20:42,920
或喂婆婆的那些页面 

542
00:20:40,490 --> 00:20:45,920
页面都是动态生成的 

543
00:20:42,920 --> 00:20:47,540
根据我写的大部分 用户输入 

544
00:20:45,920 --> 00:20:49,790
这些网页我写的一切 成 

545
00:20:47,540 --> 00:20:52,250
和逗号之后，但那么对不起 

546
00:20:49,790 --> 00:20:54,920
直到逗号然后名字是 

547
00:20:52,250 --> 00:20:56,860
动态添加其他好问题

548
00:20:54,920 --> 00:21:02,600
问题

549
00:20:56,860 --> 00:21:05,030
好吧，为什么 我们不回溯 到1997年 

550
00:21:02,600 --> 00:21:06,980
或者看看我们是否能够建造更多 

551
00:21:05,030 --> 00:21:08,720
实际上是动态Web应用程序

552
00:21:06,980 --> 00:21:09,980
让学生 进行 登记 

553
00:21:08,720 --> 00:21:11,900
东西是有点多 

554
00:21:09,980 --> 00:21:13,580
比仅提供他们的 

555
00:21:11,900 --> 00:21:15,970
名称，以便让我去进取 ， 不断 开拓 

556
00:21:13,580 --> 00:21:17,120
我是哪个是第一个 

557
00:21:15,970 --> 00:21:18,710
较大规模 

558
00:21:17,120 --> 00:21:21,380
应用我们今天在这里和 

559
00:21:18,710 --> 00:21:22,820
请注意，我有几个文件 ，以便 

560
00:21:21,380 --> 00:21:24,710
已经一切都会 升级 

561
00:21:22,820 --> 00:21:26,480
很快，我们会突然 

562
00:21:24,710 --> 00:21:28,760
介绍多个模板，但我们会 

563
00:21:26,480 --> 00:21:30,530
这样做是为了 解决问题 但是 

564
00:21:28,760 --> 00:21:32,990
首先让我继续开放 

565
00:21:30,530 --> 00:21:35,330
应用程序pi 就像你的主要 

566
00:21:32,990 --> 00:21:38,060
c中的函数是一种 入口 点 

567
00:21:35,330 --> 00:21:40,760
现在以基于Web的 应用程序 通知 

568
00:21:38,060 --> 00:21:42,800
让 我 这样开始让 我离开 

569
00:21:40,760 --> 00:21:46,120
提前并 删除并从中开始 

570
00:21:42,800 --> 00:21:51,230
从这里开始吧让我们继续吧 

571
00:21:46,120 --> 00:21:53,360
这在frosh 我是零 我们有 这个 

572
00:21:51,230 --> 00:21:55,460
斜线的默认路由并注意到 

573
00:21:53,360 --> 00:21:56,810
它会在什么时候呈现index.html 

574
00:21:55,460 --> 00:21:58,670
你开始阅读别人的代码 

575
00:21:56,810 --> 00:22:00,320
你有种 遵循这些面包屑等等 

576
00:21:58,670 --> 00:22:04,520
让我继续前进， 打开同一个文件夹 

577
00:22:00,320 --> 00:22:05,720
frosh 我正在 让我进入 让我去 

578
00:22:04,520 --> 00:22:08,510
提前， 让我们从头开始 

579
00:22:05,720 --> 00:22:13,580
实际上让我们这样做index.html 和 

580
00:22:08,510 --> 00:22:15,620
让我做熟悉的doctype HTML 然后 

581
00:22:13,580 --> 00:22:17,090
让我继续，在这里做一个HTML标记 

582
00:22:15,620 --> 00:22:19,790
它完成了 我对头脑的 想法 

583
00:22:17,090 --> 00:22:22,160
在这里标记标题标签frosh IMS 

584
00:22:19,790 --> 00:22:24,380
将是0将是这里 的 标题让我 

585
00:22:22,160 --> 00:22:26,570
继续前进 ， 建立一个机构，现在的 

586
00:22:24,380 --> 00:22:28,700
这个网页我想继续前进 

587
00:22:26,570 --> 00:22:31,370
有一些 用户可以通过的东西 

588
00:22:28,700 --> 00:22:32,690
实际 注册frosh我是如此 

589
00:22:31,370 --> 00:22:34,460
我继续前进，只有一些头衔 

590
00:22:32,690 --> 00:22:36,920
这里的文字就像注册了frosh IMS一样

591
00:22:34,460 --> 00:22:38,299
就像我当天回来的那样让我 

592
00:22:36,920 --> 00:22:40,700
继续并开始一个表单 标记 

593
00:22:38,299 --> 00:22:41,779
然后在这里可能会有什么信息

594
00:22:40,700 --> 00:22:43,549
学生想要什么时候提供 

595
00:22:41,779 --> 00:22:48,229
注册像体育这样的东西 

596
00:22:43,549 --> 00:22:50,989
团队 确定学生 姓名所以 输入类型 

597
00:22:48,229 --> 00:22:52,519
equals text 此输入的名称 

598
00:22:50,989 --> 00:22:54,019
可能不应该是通用的东西 

599
00:22:52,519 --> 00:22:55,549
像Q一样应该 更多 

600
00:22:54,019 --> 00:22:57,320
描述性的名字所以它有点

601
00:22:55,549 --> 00:22:58,789
奇怪的看， 但名称等于 名称和 

602
00:22:57,320 --> 00:23:00,259
我们将继续和 做到这一点， 如果 我们 

603
00:22:58,789 --> 00:23:02,389
真的要被看中，我们可以做一个 

604
00:23:00,259 --> 00:23:04,339
占位符文本的名称只是为了 

605
00:23:02,389 --> 00:23:06,469
浅灰色 文字向用户显示 我们的内容 

606
00:23:04,339 --> 00:23:08,359
想要，然后在最低限度回来

607
00:23:06,469 --> 00:23:10,639
学生注册体育如何 

608
00:23:08,359 --> 00:23:11,419
提供他们的宿舍所以建设在

609
00:23:10,639 --> 00:23:13,639
他们住的 

610
00:23:11,419 --> 00:23:15,320
所以在HTML中我们有一堆输入 

611
00:23:13,639 --> 00:23:17,169
我们已经有了文本框类型证明 

612
00:23:15,320 --> 00:23:20,659
那里的文字区域更大 

613
00:23:17,169 --> 00:23:24,259
复选框单选按钮最贴切的是什么 

614
00:23:20,659 --> 00:23:28,279
也许是为了选择你的宿舍 

615
00:23:24,259 --> 00:23:32,899
下拉列表，否则称为菜单

616
00:23:28,279 --> 00:23:34,519
但哪个标签我很抱歉不是一个容器 

617
00:23:32,899 --> 00:23:36,289
比什么更精确一点 

618
00:23:34,519 --> 00:23:38,419
用什么标签可以生成一个

619
00:23:36,289 --> 00:23:41,779
下拉列表如果你这样做了

620
00:23:38,419 --> 00:23:43,909
在HTML之前选择所以它不是 

621
00:23:41,779 --> 00:23:46,219
完全清楚的名字，但它确实是一个

622
00:23:43,909 --> 00:23:48,019
按名称选择菜单，所以我可以

623
00:23:46,219 --> 00:23:50,299
实际上做这个 选择和名称 

624
00:23:48,019 --> 00:23:52,759
例如， 这个 领域将是宿舍 

625
00:23:50,299 --> 00:23:54,799
那么这里面我要 先走 

626
00:23:52,759 --> 00:23:58,190
并有一些选项，所以一个选项 

627
00:23:54,799 --> 00:24:00,079
可能会让我们说一个辩诉法庭 

628
00:23:58,190 --> 00:24:02,779
新生之一的建筑物之一 

629
00:24:00,079 --> 00:24:04,429
住在那里可能还有另一个叫

630
00:24:02,779 --> 00:24:06,589
kanaday 然后会有 

631
00:24:04,429 --> 00:24:08,149
一堆其他人然后注意- 如果 

632
00:24:06,589 --> 00:24:09,799
你从来没有 使用过选择菜单 

633
00:24:08,149 --> 00:24:10,849
不会提到李有机会得到 

634
00:24:09,799 --> 00:24:13,190
除非你以前这样做过 

635
00:24:10,849 --> 00:24:14,659
这些选项也必须具有 价值 

636
00:24:13,190 --> 00:24:17,779
这是为了我的目的

637
00:24:14,659 --> 00:24:20,209
完全 一样的 ，但而有什么 

638
00:24:17,779 --> 00:24:22,940
标签之间 是人类所 看到的 

639
00:24:20,209 --> 00:24:25,339
它就是这些引用之间的内容 

640
00:24:22,940 --> 00:24:27,529
计算机 的 价值 

641
00:24:25,339 --> 00:24:29,359
实际上看到这些是这些 词 

642
00:24:27,529 --> 00:24:30,889
填充下拉菜单这些 

643
00:24:29,359 --> 00:24:32,719
是 实际被填充 的值 

644
00:24:30,889 --> 00:24:35,509
到虚拟信封 的 

645
00:24:32,719 --> 00:24:38,059
学生他或她自己实际上是 这样 看的 

646
00:24:35,509 --> 00:24:41,779
让我继续前进，除此之外 让我走吧 

647
00:24:38,059 --> 00:24:43,279
提前， 现在 打开 我的控制台，我 

648
00:24:41,779 --> 00:24:46,190
要借用一些代码就可以了 

649
00:24:43,279 --> 00:24:48,589
我们可以 从头开始这样 做， 所以让我们 

650
00:24:46,190 --> 00:24:51,680
我继续前进，从IM 0中抓住我的 

651
00:24:48,589 --> 00:24:56,060
应用点 pi文件 

652
00:24:51,680 --> 00:24:59,450
然后进入我的工作区，让我走吧 

653
00:24:56,060 --> 00:25:01,340
现在提前并运行烧瓶 运行，其中我 

654
00:24:59,450 --> 00:25:03,620
有这个应用程序点PI文件我 

655
00:25:01,340 --> 00:25:05,750
会看到我的代码现在的URL 

656
00:25:03,620 --> 00:25:08,570
生活，如果我打开它， 我会 

657
00:25:05,750 --> 00:25:10,490
看到这么打算的内部服务器错误

658
00:25:08,570 --> 00:25:12,140
在某些方面， 因为内部服务器 

659
00:25:10,490 --> 00:25:15,380
错误回忆是一个比较神秘的问题

660
00:25:12,140 --> 00:25:16,520
您可能拥有的状态代码500 

661
00:25:15,380 --> 00:25:17,510
没 见过，除非 你参观 

662
00:25:16,520 --> 00:25:20,150
实际上有东西的 网站 

663
00:25:17,510 --> 00:25:21,680
出了问题 让我怎么开始 图 

664
00:25:20,150 --> 00:25:23,210
我 现在出了什么问题 

665
00:25:21,680 --> 00:25:25,610
实际上编写代码并 不仅仅是 

666
00:25:23,210 --> 00:25:28,130
编写硬编码的HTML 很好 

667
00:25:25,610 --> 00:25:30,440
这里 可以找到线索

668
00:25:28,130 --> 00:25:32,270
控制台窗口， 所以当 你 

669
00:25:30,440 --> 00:25:34,700
运行烧瓶您运行 的是 

670
00:25:32,270 --> 00:25:39,110
你 正在听 的完整的网络服务器 

671
00:25:34,700 --> 00:25:40,580
通过tcp / ip 接收来自的请求 

672
00:25:39,110 --> 00:25:42,200
用户等等你会看到的 

673
00:25:40,580 --> 00:25:43,430
控制台不 只是诊断 

674
00:25:42,200 --> 00:25:45,590
当你第一次开始刮擦时输出

675
00:25:43,430 --> 00:25:46,970
开始烧瓶， 但你会 看到 所有 的 

676
00:25:45,590 --> 00:25:49,400
错误信息可能实际上 

677
00:25:46,970 --> 00:25:50,570
此后发生，这是一点点 

678
00:25:49,400 --> 00:25:52,430
坦率地看起来很神秘

679
00:25:50,570 --> 00:25:55,400
一开始看到这个文字势不可挡

680
00:25:52,430 --> 00:25:57,470
一瞥， 但 在clang和C中 

681
00:25:55,400 --> 00:25:59,750
通常有助于看到最顶层 

682
00:25:57,470 --> 00:26:01,100
有时这里的错误信息 

683
00:25:59,750 --> 00:26:02,750
这种烧瓶的背景 你有点儿 

684
00:26:01,100 --> 00:26:05,060
在底部，我们在这里 

685
00:26:02,750 --> 00:26:07,190
模板找不到模板，因为 你 

686
00:26:05,060 --> 00:26:08,720
找不到index.html ，那就是 

687
00:26:07,190 --> 00:26:11,360
因为我搞砸了所以让我真的 

688
00:26:08,720 --> 00:26:14,120
通过键入ctrl C退出烧瓶，如果我 

689
00:26:11,360 --> 00:26:15,380
在我的目录中输入LS注意到我 

690
00:26:14,120 --> 00:26:17,540
我还没有完全练习过 

691
00:26:15,380 --> 00:26:19,340
传讲它 可能 有点微妙 

692
00:26:17,540 --> 00:26:24,280
但我还没有把自己组织起来 

693
00:26:19,340 --> 00:26:26,840
正确的方式我做了什么错 呀 

694
00:26:24,280 --> 00:26:28,730
是的，这是一个愚蠢的错误我 

695
00:26:26,840 --> 00:26:30,140
没有制作模板目录所以你 

696
00:26:28,730 --> 00:26:31,910
可以通过几种不同的方式做到这一点

697
00:26:30,140 --> 00:26:33,260
你可以在这里创建一个 文件夹图标 

698
00:26:31,910 --> 00:26:35,330
右键单击或新建文件夹

699
00:26:33,260 --> 00:26:37,760
ctrl-click或 在Linux中你 可以做到 

700
00:26:35,330 --> 00:26:40,490
make der for make目录，所以我可以 

701
00:26:37,760 --> 00:26:43,430
做模板进入然后我

702
00:26:40,490 --> 00:26:45,470
可以移动我的索引点 HTML文件 

703
00:26:43,430 --> 00:26:47,690
刚才写到我的模板中 

704
00:26:45,470 --> 00:26:50,030
目录只需使用MV进行移动和 

705
00:26:47,690 --> 00:26:52,880
现在我可以继续 运行烧瓶运行 

706
00:26:50,030 --> 00:26:55,700
我的手指交回浏览器 

707
00:26:52,880 --> 00:26:57,620
选项卡，然后单击 重新加载，瞧 我 

708
00:26:55,700 --> 00:26:58,940
实际上看到表格所以有这些

709
00:26:57,620 --> 00:27:00,740
我实际上并没有本能

710
00:26:58,940 --> 00:27:02,450
打算， 但我忘了创造 

711
00:27:00,740 --> 00:27:03,620
文件夹我没有这个服务器错误

712
00:27:02,450 --> 00:27:04,610
不得不盯着浏览器 

713
00:27:03,620 --> 00:27:05,570
不会 有太多的信息 

714
00:27:04,610 --> 00:27:07,310
但如果你 

715
00:27:05,570 --> 00:27:09,590
看一下终端窗口的控制台

716
00:27:07,310 --> 00:27:11,930
你会看到你有控制权吗？ 

717
00:27:09,590 --> 00:27:13,520
那些铿锵像错误消息，以便在这里 

718
00:27:11,930 --> 00:27:14,840
我们有一个基本的 HTML表单它 不 

719
00:27:13,520 --> 00:27:16,700
完成因为我没打扰打字 

720
00:27:14,840 --> 00:27:18,650
出了所有 的宿舍名称， 但我确实有 

721
00:27:16,700 --> 00:27:20,450
输入类型文本 以及 

722
00:27:18,650 --> 00:27:22,580
选择菜单，我也有点失踪 

723
00:27:20,450 --> 00:27:24,670
一个关键细节似乎应该是什么 

724
00:27:22,580 --> 00:27:26,960
可能会添加到此表单中 

725
00:27:24,670 --> 00:27:28,490
是的，我选择的我可以

726
00:27:26,960 --> 00:27:30,760
选择宿舍所以我可以清理它 

727
00:27:28,490 --> 00:27:32,990
在几个 方面我也错过了一个 

728
00:27:30,760 --> 00:27:34,280
现在提交按钮就 可以了 

729
00:27:32,990 --> 00:27:36,230
可能点击进入，它实际上 

730
00:27:34,280 --> 00:27:39,110
默认情况下提交， 但我们可以修复 

731
00:27:36,230 --> 00:27:40,820
这个让我进入index.html 让我 

732
00:27:39,110 --> 00:27:43,190
缩小此选项卡只是一点点 

733
00:27:40,820 --> 00:27:46,160
让我来解决这两个 的 这些东西让 

734
00:27:43,190 --> 00:27:48,740
我继续开放 这个最新的 

735
00:27:46,160 --> 00:27:51,500
版本 现在是在模板 

736
00:27:48,740 --> 00:27:53,810
目录让我继续前进 

737
00:27:51,500 --> 00:27:56,570
这里的底部输入类型等于 

738
00:27:53,810 --> 00:27:58,220
提交其的 将是 价值 

739
00:27:56,570 --> 00:28:00,050
说注册只是为了 明确 

740
00:27:58,220 --> 00:28:03,770
人类正在发生什么让我继续前进 

741
00:28:00,050 --> 00:28:06,110
然后返回 我的表单点击 重新加载 

742
00:28:03,770 --> 00:28:08,600
什么都没发生，那就是 

743
00:28:06,110 --> 00:28:10,820
因为默认情况下，当 你做出 改变 

744
00:28:08,600 --> 00:28:12,830
你的一些文件烧瓶不会去 

745
00:28:10,820 --> 00:28:14,270
要注意 ，我们实际上会解决这个问题 

746
00:28:12,830 --> 00:28:15,920
通过添加更多来设置即将出现的问题 

747
00:28:14,270 --> 00:28:17,630
码多一点复杂 

748
00:28:15,920 --> 00:28:20,390
为您自动化，但有疑问时 

749
00:28:17,630 --> 00:28:23,180
只需要ctrl C退出烧瓶然后 继续 

750
00:28:20,390 --> 00:28:25,280
并重新运行烧瓶 ，重新加载所有 

751
00:28:23,180 --> 00:28:26,870
您的HTML 所有Python代码以及if 

752
00:28:25,280 --> 00:28:29,330
我现在回到这里并 点击重新加载 

753
00:28:26,870 --> 00:28:30,980
我们会看到注册按钮， 所以没有 

754
00:28:29,330 --> 00:28:34,100
永远不应该有任何惊喜 

755
00:28:30,980 --> 00:28:35,420
如果只是试图去到 

756
00:28:34,100 --> 00:28:37,700
其诊断

757
00:28:35,420 --> 00:28:39,560
这也是有点不清楚 ，以 

758
00:28:37,700 --> 00:28:41,720
这个菜单是什么，所以事实证明 

759
00:28:39,560 --> 00:28:43,820
如果你真的创建了一个伪造的选项 

760
00:28:41,720 --> 00:28:46,220
像这样没有 价值的人 说 

761
00:28:43,820 --> 00:28:48,500
像宿舍一样 你可以保存这个 

762
00:28:46,220 --> 00:28:51,320
让我们继续并重新启动烧瓶 

763
00:28:48,500 --> 00:28:53,810
在这里重新加载页面，你现在就会看到

764
00:28:51,320 --> 00:28:56,690
不幸的是，你看到了宿舍 

765
00:28:53,810 --> 00:28:58,400
愚蠢， 因为 现在宿舍是你的地方 

766
00:28:56,690 --> 00:28:59,540
字面意思可以明显地生活在哪个 

767
00:28:58,400 --> 00:29:02,120
感觉不太对劲 

768
00:28:59,540 --> 00:29:03,920
所以我也可以使用 HTML修复程序

769
00:29:02,120 --> 00:29:06,290
实际上进入这里 ，技术上说 

770
00:29:03,920 --> 00:29:09,350
已禁用，因此您无法实际选择 

771
00:29:06,290 --> 00:29:12,620
现在，如果我重新运行瓶， 现在 重装 

772
00:29:09,350 --> 00:29:13,940
它仍然显示在那里，但因为我 

773
00:29:12,620 --> 00:29:15,650
你已经选择了Polly夸脱 

774
00:29:13,940 --> 00:29:17,540
看到它是灰色的，我们实际上 可以是一个 

775
00:29:15,650 --> 00:29:19,910
如果你不愿意，那就更具体一点

776
00:29:17,540 --> 00:29:22,370
仅禁用它，但默认选择它

777
00:29:19,910 --> 00:29:24,410
然后继续并 重新加载页面 

778
00:29:22,370 --> 00:29:26,240
现在，你会看到希望是什么 

779
00:29:24,410 --> 00:29:28,250
它 在大多数 网站 上都很熟悉宿舍 

780
00:29:26,240 --> 00:29:29,840
但它已被禁用，即使是 

781
00:29:28,250 --> 00:29:32,030
愚蠢的复选标记就像你一样 

782
00:29:29,840 --> 00:29:33,350
被迫选择 一个真正的宿舍 所以这些 

783
00:29:32,030 --> 00:29:35,180
是微小的美学但是那种 

784
00:29:33,350 --> 00:29:36,590
事情你现在可以 控制 等等 

785
00:29:35,180 --> 00:29:38,600
什么会 发生 

786
00:29:36,590 --> 00:29:40,850
我实际上没有指明这个 

787
00:29:38,600 --> 00:29:42,590
我实际注册时应该去表格

788
00:29:40,850 --> 00:29:44,090
因为我遗漏了一些关键细节 

789
00:29:42,590 --> 00:29:45,940
表格标签，我们还没有 这样做 

790
00:29:44,090 --> 00:29:48,590
一两个星期 ，但是 当我们 

791
00:29:45,940 --> 00:29:52,490
顽皮地重新实施谷歌 

792
00:29:48,590 --> 00:30:00,860
否则我们添加到表单标签是什么 

793
00:29:52,490 --> 00:30:05,230
任何人记住的属性是啊哦 

794
00:30:00,860 --> 00:30:07,940
你再次行动，这意味着什么

795
00:30:05,230 --> 00:30:09,110
做什么好了 这样的动作，我们希望 

796
00:30:07,940 --> 00:30:11,300
即使这不是 

797
00:30:09,110 --> 00:30:13,370
必然是完美的净井名 

798
00:30:11,300 --> 00:30:15,380
你想在哪里提交表格 

799
00:30:13,370 --> 00:30:16,670
我 实际上 可以 提交 这个 

800
00:30:15,380 --> 00:30:18,530
几个不同的方式我要继续前进 

801
00:30:16,670 --> 00:30:21,290
并说你知道 将它提交给aa 

802
00:30:18,530 --> 00:30:23,000
合理命名的路线斜线寄存器 

803
00:30:21,290 --> 00:30:24,620
例如，谷歌可能有代码 

804
00:30:23,000 --> 00:30:26,030
而是说要提交表格 

805
00:30:24,620 --> 00:30:27,530
斜线搜索但我们没有搜索 

806
00:30:26,030 --> 00:30:29,030
我们正在注册的东西， 所以这个名字 

807
00:30:27,530 --> 00:30:31,190
这条路线 完全取决于我们和 

808
00:30:29,030 --> 00:30:34,580
通过什么方法我们 应该 提交这个 

809
00:30:31,190 --> 00:30:36,350
信息 什么是 我们的两个选项得到 

810
00:30:34,580 --> 00:30:38,150
或后期重新获得它往往是 

811
00:30:36,350 --> 00:30:41,950
默认情况下，如果您没有 在链接中提及 

812
00:30:38,150 --> 00:30:41,950
为什么你要使用post而不是 

813
00:30:43,510 --> 00:30:47,780
是的，你想要它去数据库和 

814
00:30:45,830 --> 00:30:49,730
用正确的动词做一些事情来 使用 

815
00:30:47,780 --> 00:30:51,500
有发布信息而不是 

816
00:30:49,730 --> 00:30:52,940
获取信息甚至更多 

817
00:30:51,500 --> 00:30:54,980
特别是 在隐私方面 

818
00:30:52,940 --> 00:30:57,290
当你使用发布 信息 

819
00:30:54,980 --> 00:30:58,370
不会在用户URL中结束

820
00:30:57,290 --> 00:30:59,810
因此它不会 在他或 结束 

821
00:30:58,370 --> 00:31:01,640
她的历史 ，因此不会结束 

822
00:30:59,810 --> 00:31:03,170
在一个 兄弟姐妹或室友或 

823
00:31:01,640 --> 00:31:05,000
其他人实际上只能看到

824
00:31:03,170 --> 00:31:06,530
四处寻找所以我们一定会去 

825
00:31:05,000 --> 00:31:08,180
因为这是我的名字 和宿舍 

826
00:31:06,530 --> 00:31:09,860
也许是我的电话号码 和电子邮件 

827
00:31:08,180 --> 00:31:11,750
某些信用卡号码等 

828
00:31:09,860 --> 00:31:14,720
其他网站我是要去使用后 

829
00:31:11,750 --> 00:31:16,850
相反，所以这里的捕获就是 那样 

830
00:31:14,720 --> 00:31:19,340
本周我们现在有能力 

831
00:31:16,850 --> 00:31:21,290
两周前实施斜线登记 

832
00:31:19,340 --> 00:31:23,570
我们可以把人们 送到谷歌 

833
00:31:21,290 --> 00:31:25,430
斜线搜索，但现在我们有能力 

834
00:31:23,570 --> 00:31:27,200
制作我们自己的路线， 但有多少 

835
00:31:25,430 --> 00:31:31,280
到目前为止我们已定义的路线

836
00:31:27,200 --> 00:31:33,860
应用程序PI只是一个和它的 

837
00:31:31,280 --> 00:31:36,470
再一些新的语法与时髦的 

838
00:31:33,860 --> 00:31:38,840
和路由关键字在这里， 但让我 

839
00:31:36,470 --> 00:31:41,059
实际上只是直觉地猜测你 

840
00:31:38,840 --> 00:31:44,450
知道 我是否继续说app dot route 

841
00:31:41,059 --> 00:31:46,160
斜杠注册我打赌我可以实现 一个 

842
00:31:44,450 --> 00:31:48,830
第二条路线并告诉网络服务器

843
00:31:46,160 --> 00:31:50,990
在斜线和两个地方听 

844
00:31:48,830 --> 00:31:53,870
在斜线寄存器上， 但如果我想 

845
00:31:50,990 --> 00:31:56,840
实际上 专门听它发布 

846
00:31:53,870 --> 00:31:59,600
必须是这种 方法 等于引用 

847
00:31:56,840 --> 00:32:02,000
unquote post，因为默认情况下 

848
00:31:59,600 --> 00:32:03,470
只是为了方便起见，假设 仅 

849
00:32:02,000 --> 00:32:05,299
得到，所以我需要补充一点 ， 你只 

850
00:32:03,470 --> 00:32:06,500
我现在从文档中知道了 

851
00:32:05,299 --> 00:32:08,630
想要继续并 定义 一个功能 

852
00:32:06,500 --> 00:32:09,020
这有点令人讨厌 

853
00:32:08,630 --> 00:32:10,070
烧瓶

854
00:32:09,020 --> 00:32:11,660
你必须给这个函数一个名字 

855
00:32:10,070 --> 00:32:13,460
即使 你 可能永远也不会 

856
00:32:11,660 --> 00:32:14,630
在任何地方引用它， 所以我要去 

857
00:32:13,460 --> 00:32:18,320
领先 ，合理地称之为 

858
00:32:14,630 --> 00:32:21,290
注册，现在我必须做我的事 

859
00:32:18,320 --> 00:32:24,950
当用户点击时想要做什么

860
00:32:21,290 --> 00:32:26,840
提交按钮我要存储它 

861
00:32:24,950 --> 00:32:28,669
在某个地方所以我可能想存储它 

862
00:32:26,840 --> 00:32:30,530
但是哪个 月我可能想做 什么 

863
00:32:28,669 --> 00:32:31,970
在他或她 实际上之前 

864
00:32:30,530 --> 00:32:34,970
即使他们已经允许注册 

865
00:32:31,970 --> 00:32:36,559
点击提交 表格 可能确认 

866
00:32:34,970 --> 00:32:38,480
他们的信息对，因为如果一个 

867
00:32:36,559 --> 00:32:40,070
懒惰的用户进来或如果是用户

868
00:32:38,480 --> 00:32:41,929
意外点击按钮或点击

869
00:32:40,070 --> 00:32:43,370
输入他们可能实际上没有提交 

870
00:32:41,929 --> 00:32:44,780
没有名字没有没有用的宿舍 

871
00:32:43,370 --> 00:32:47,000
它可以被感知的信息 

872
00:32:44,780 --> 00:32:48,679
作为垃圾邮件， 所以我们可能想问一些 

873
00:32:47,000 --> 00:32:49,940
像他们一样的逻辑问题

874
00:32:48,679 --> 00:32:52,130
没有给我们一个名字，或者他们没有 

875
00:32:49,940 --> 00:32:54,290
给我们一个像用户大喊大叫的宿舍 

876
00:32:52,130 --> 00:32:55,880
某种程度上所以我要继续前进 ，做 

877
00:32:54,290 --> 00:32:57,260
那么让我真正表达 出来 

878
00:32:55,880 --> 00:32:59,299
Python类似于我们上周所做的

879
00:32:57,260 --> 00:33:02,480
有一些错误检查， 所以回忆一下 

880
00:32:59,299 --> 00:33:05,570
用户 名可以 从 可以得到 

881
00:33:02,480 --> 00:33:09,140
来自请求点args的 HTTP参数

882
00:33:05,570 --> 00:33:10,970
获取然后请求 name参数 

883
00:33:09,140 --> 00:33:14,450
他们的宿舍同时可以来自 

884
00:33:10,970 --> 00:33:16,850
请求args得到宿舍再次这个 

885
00:33:14,450 --> 00:33:18,799
请求args 是我们给的东西 

886
00:33:16,850 --> 00:33:20,419
当我们说时，我们自己进入这里 

887
00:33:18,799 --> 00:33:22,090
嘿，烧瓶请给我访问 

888
00:33:20,419 --> 00:33:24,860
用户请求虚拟信封 

889
00:33:22,090 --> 00:33:26,990
请求args指的是所有HTTP 

890
00:33:24,860 --> 00:33:28,669
URL中的参数并获得它 

891
00:33:26,990 --> 00:33:31,160
内置于其中 的 函数或方法 

892
00:33:28,669 --> 00:33:33,350
特殊的烧瓶功能，让我们 

893
00:33:31,160 --> 00:33:35,900
得到一个特定的 参数，如名称或 

894
00:33:33,350 --> 00:33:37,280
宿舍或其他任何东西， 并记得 在 

895
00:33:35,900 --> 00:33:40,100
Python有什么好处就是你 

896
00:33:37,280 --> 00:33:44,300
如果不是门， 可以 说漂亮的 英语 

897
00:33:40,100 --> 00:33:46,220
如果不是名字或不是宿舍让我们去 

898
00:33:44,300 --> 00:33:47,750
提前并谴责用户

899
00:33:46,220 --> 00:33:49,940
我们可以说 

900
00:33:47,750 --> 00:33:51,710
失败， 因为他或 她没有 

901
00:33:49,940 --> 00:33:53,780
实际上按照我们的意图合作 

902
00:33:51,710 --> 00:33:56,830
否则如果他们合作我就是 

903
00:33:53,780 --> 00:33:59,390
要继续并渲染模板 

904
00:33:56,830 --> 00:34:00,770
成功，我们将公正地充实 

905
00:33:59,390 --> 00:34:02,900
片刻所以 我有两个场景 

906
00:34:00,770 --> 00:34:05,210
处理，如果他们不合作 或如果 

907
00:34:02,900 --> 00:34:08,600
他们确实提出引用/取消引用失败或 

908
00:34:05,210 --> 00:34:10,429
一个完整的HTML模板，所以现在 

909
00:34:08,600 --> 00:34:13,310
我已经实现了斜线寄存器，我是 

910
00:34:10,429 --> 00:34:14,690
听取 通过邮路的路线 

911
00:34:13,310 --> 00:34:16,669
继续并重新加载页面 

912
00:34:14,690 --> 00:34:19,129
在我的名字中测量类型 不会告诉 

913
00:34:16,669 --> 00:34:22,490
你是我的宿舍， 但你会注意到 

914
00:34:19,129 --> 00:34:23,780
很好，所以现在服务器已经注意到了

915
00:34:22,490 --> 00:34:25,429
我 实际上 并没有 合作 

916
00:34:23,780 --> 00:34:26,929
同时提供名称和宿舍等 

917
00:34:25,429 --> 00:34:29,030
它回到我身边引用unquote 

918
00:34:26,929 --> 00:34:30,560
失败所以这很好，因为现在我 

919
00:34:29,030 --> 00:34:32,389
知道没事 我做错了什么 

920
00:34:30,560 --> 00:34:35,090
显然让我回去让我继续吧 

921
00:34:32,389 --> 00:34:36,919
也许在这里做候选人，现在让 

922
00:34:35,090 --> 00:34:39,080
我继续 注册，但但是但是 

923
00:34:36,919 --> 00:34:42,530
我 事先 知道 会 发生错误 

924
00:34:39,080 --> 00:34:44,659
为什么我没有成功 HTML就可以了 

925
00:34:42,530 --> 00:34:46,370
让我先发制人地解决这个问题 

926
00:34:44,659 --> 00:34:48,050
实际上进入 我的 模板 

927
00:34:46,370 --> 00:34:52,100
目录我要继续 创造 

928
00:34:48,050 --> 00:34:53,629
一个名为success dot HTML let的新文件 

929
00:34:52,100 --> 00:34:55,669
我进入 模板进行保存 

930
00:34:53,629 --> 00:34:57,080
那里， 你知道什么都可以成功 

931
00:34:55,669 --> 00:34:59,390
非常简单的页面，让我打开 我的 

932
00:34:57,080 --> 00:35:01,340
索引页面让我复制它 ， 我们去 

933
00:34:59,390 --> 00:35:03,830
成功让我贴这个让 我 

934
00:35:01,340 --> 00:35:07,070
摆脱所有的身体 ，只是说 

935
00:35:03,830 --> 00:35:10,430
比如说成功， 所以让我吧 

936
00:35:07,070 --> 00:35:12,290
现在继续 前进 ，去重启烧瓶 

937
00:35:10,430 --> 00:35:13,700
因为我已经制作了一个新模板让我 

938
00:35:12,290 --> 00:35:15,110
继续并重新加载 表单只是 为了 

939
00:35:13,700 --> 00:35:17,150
好的措施让我继续前进并给予 

940
00:35:15,110 --> 00:35:20,300
这次你是我的名字 ， 好吧，我 住在这里 

941
00:35:17,150 --> 00:35:23,990
加拿大并注册， 我做了什么 

942
00:35:20,300 --> 00:35:27,800
这次错了所以事实证明 你 

943
00:35:23,990 --> 00:35:29,900
不能这样做， 显然是这样的 

944
00:35:27,800 --> 00:35:34,430
你实际上是在提交 信息 

945
00:35:29,900 --> 00:35:36,680
通过形式通过get flask 非常 

946
00:35:34,430 --> 00:35:38,690
巧妙地将这些信息放入 

947
00:35:36,680 --> 00:35:40,310
不同的地方因为定义为 

948
00:35:38,690 --> 00:35:42,320
我早些时候声称非常正确 

949
00:35:40,310 --> 00:35:44,480
请求 电弧或所有关键 值 的 

950
00:35:42,320 --> 00:35:46,970
URL 中的对 

951
00:35:44,480 --> 00:35:49,610
从用户请求进来但是 

952
00:35:46,970 --> 00:35:51,260
当你通过帖子提交我的原因时 

953
00:35:49,610 --> 00:35:53,300
希望现在，否则你实际上 

954
00:35:51,260 --> 00:35:55,550
必须通过a访问这些值 

955
00:35:53,300 --> 00:35:57,710
不同的变量，所以而不是使用 

956
00:35:55,550 --> 00:36:00,320
请求args你必须使用请求 点 

957
00:35:57,710 --> 00:36:01,160
形成这里和这里以明确 

958
00:36:00,320 --> 00:36:02,930
这是 

959
00:36:01,160 --> 00:36:04,280
可怕的名字正是 因为这些原因 

960
00:36:02,930 --> 00:36:07,220
我觉得我在这里绊倒了 

961
00:36:04,280 --> 00:36:10,520
因为他们实际上都是进来的 

962
00:36:07,220 --> 00:36:13,460
通过形式通过获取或发布但烧瓶 放 

963
00:36:10,520 --> 00:36:16,369
在orgs 和poets post中获取参数

964
00:36:13,460 --> 00:36:18,289
形式上的论据由此引领 

965
00:36:16,369 --> 00:36:20,390
显然有可能混淆， 但如果我 

966
00:36:18,289 --> 00:36:24,680
现在 继续加载此版本 的 

967
00:36:20,390 --> 00:36:28,490
该网站，我一直希望我 

968
00:36:24,680 --> 00:36:32,119
现在继续运行 烧瓶 重启 

969
00:36:28,490 --> 00:36:34,940
这个页面输入大卫给你我的 

970
00:36:32,119 --> 00:36:37,190
宿舍和注册成功 

971
00:36:34,940 --> 00:36:41,119
注册frosh我看到网络有多容易

972
00:36:37,190 --> 00:36:43,670
编程是如此有希望我们现在可以

973
00:36:41,119 --> 00:36:45,530
至少关注什么的结构 

974
00:36:43,670 --> 00:36:48,020
我已经完成了，现在开始 改进 它 

975
00:36:45,530 --> 00:36:49,730
因为注意到我没有 

976
00:36:48,020 --> 00:36:52,520
练习我刚才讲的内容 

977
00:36:49,730 --> 00:36:56,839
当 我鞭打 时， 我 违反了什么习惯 

978
00:36:52,520 --> 00:36:59,210
达成功HTML我是怎么到 

979
00:36:56,839 --> 00:37:01,490
点是啊是的我复制和 粘贴 

980
00:36:59,210 --> 00:37:02,990
这通常在编程中没有 

981
00:37:01,490 --> 00:37:04,789
正确的做法可能会得到 这份工作 

982
00:37:02,990 --> 00:37:06,020
做得超级快，但 可能 是 

983
00:37:04,789 --> 00:37:07,460
错误的本能，因为它会得到 

984
00:37:06,020 --> 00:37:09,410
现在为什么会 越来越难以 维持 

985
00:37:07,460 --> 00:37:11,720
你曾经玩过几次HTML 

986
00:37:09,410 --> 00:37:13,430
几个星期前，从 这个问题 回忆起来 

987
00:37:11,720 --> 00:37:15,740
当你必须 做一个主页 时说 

988
00:37:13,430 --> 00:37:17,900
你可能发现自己在复制 

989
00:37:15,740 --> 00:37:19,970
并粘贴你的两三个或 

990
00:37:17,900 --> 00:37:21,349
四页， 因为你想要它们 

991
00:37:19,970 --> 00:37:22,700
看起来 一样，因此 它 

992
00:37:21,349 --> 00:37:25,520
有意义他们 有 一些 

993
00:37:22,700 --> 00:37:27,829
共同点，但仅在HTML中 

994
00:37:25,520 --> 00:37:29,809
没有办法说使用相同的布局

995
00:37:27,829 --> 00:37:32,150
对于 我的整个网站使用相同的颜色 

996
00:37:29,809 --> 00:37:34,039
计划相同的字体相同的 CSS但是 

997
00:37:32,150 --> 00:37:36,170
只是改变了页面的正文

998
00:37:34,039 --> 00:37:37,730
每个页面，所以你们中的一些人 

999
00:37:36,170 --> 00:37:39,470
非常正确的话语和超越 

1000
00:37:37,730 --> 00:37:42,200
喜欢发布的 问题可以问你 

1001
00:37:39,470 --> 00:37:44,000
这样做，你不能真正用HTML 

1002
00:37:42,200 --> 00:37:45,980
但是现在我们可以 访问了 

1003
00:37:44,000 --> 00:37:48,079
Python是一种实际的编程语言 

1004
00:37:45,980 --> 00:37:49,520
可以做的事情在逻辑上，现在你可以 

1005
00:37:48,079 --> 00:37:52,190
实际上开始考虑那些事情

1006
00:37:49,520 --> 00:37:57,440
出来也注意到这个文件成功了 

1007
00:37:52,190 --> 00:37:59,720
HTML 以及在 index.html的是什么 

1008
00:37:57,440 --> 00:38:02,240
一些共性足以满足它 

1009
00:37:59,720 --> 00:38:03,740
说这个表格只在其中一个但是 

1010
00:38:02,240 --> 00:38:08,420
还有什么显然是多余的 

1011
00:38:03,740 --> 00:38:10,309
无处不在的头衔

1012
00:38:08,420 --> 00:38:12,289
页面更一般的文档类型

1013
00:38:10,309 --> 00:38:13,910
身体标签非常独特和你

1014
00:38:12,289 --> 00:38:14,870
可以想象会有更多的细节 

1015
00:38:13,910 --> 00:38:16,490
喜欢从你自己的家 

1016
00:38:14,870 --> 00:38:17,960
你想要变得相同的年龄 

1017
00:38:16,490 --> 00:38:19,930
跨越多个页面 

1018
00:38:17,960 --> 00:38:22,310
所以让我们来看看 

1019
00:38:19,930 --> 00:38:24,920
refactor是这个代码的一个ssin 

1020
00:38:22,310 --> 00:38:27,860
我确实提前 写 了我和我 

1021
00:38:24,920 --> 00:38:30,560
你会明白为什么它真的 有意义 

1022
00:38:27,860 --> 00:38:32,900
不仅要有 多个文件 

1023
00:38:30,560 --> 00:38:35,240
这 代表你的路线之一 或 

1024
00:38:32,900 --> 00:38:38,720
你的意见，但也有这个文件 

1025
00:38:35,240 --> 00:38:40,430
在烧瓶时称为布局HTML 

1026
00:38:38,720 --> 00:38:42,020
构建您知道 的Web应用程序 

1027
00:38:40,430 --> 00:38:44,300
将遵循某种结构 

1028
00:38:42,020 --> 00:38:46,940
你所有人的模式共性 

1029
00:38:44,300 --> 00:38:50,480
页面，您可以真正做到这一点 所以在 

1030
00:38:46,940 --> 00:38:52,760
这个文件在这里布局点HTML是一个

1031
00:38:50,480 --> 00:38:54,710
一堆硬编码的HTML和它 

1032
00:38:52,760 --> 00:38:56,660
非常简单， 它有我的HTML标签头 

1033
00:38:54,710 --> 00:38:58,880
标签标签标签正文标签和其他一些 

1034
00:38:56,660 --> 00:39:00,950
事情， 但这是一般 结构 

1035
00:38:58,880 --> 00:39:03,260
的页面，并注意到它有这个时髦 

1036
00:39:00,950 --> 00:39:05,840
这里的语法在白色，中间是 

1037
00:39:03,260 --> 00:39:08,240
什么被称为块现在这是烧瓶 

1038
00:39:05,840 --> 00:39:09,920
具体就像烧瓶支持那些 

1039
00:39:08,240 --> 00:39:12,350
左边两个花括号和 

1040
00:39:09,920 --> 00:39:15,080
正确的说， 在这里放一个值瓶 

1041
00:39:12,350 --> 00:39:17,420
也支持其他符号卷曲 

1042
00:39:15,080 --> 00:39:19,280
支撑百分比和百分比大括号

1043
00:39:17,420 --> 00:39:22,760
这实际上允许你 放 

1044
00:39:19,280 --> 00:39:25,070
实际的HTML块占位符

1045
00:39:22,760 --> 00:39:27,890
不只是变量，而是实际的块 

1046
00:39:25,070 --> 00:39:30,560
HTML等这样的布局，你能想到 的 

1047
00:39:27,890 --> 00:39:32,660
作为模具或模板字面意思 

1048
00:39:30,560 --> 00:39:34,400
所有其他网页也都将 是 

1049
00:39:32,660 --> 00:39:37,010
结构基于但他们正在进行 

1050
00:39:34,400 --> 00:39:38,900
要改变这一行， 只有这一行 

1051
00:39:37,010 --> 00:39:41,090
我们要在它们之间添加尽可能多的HTML 

1052
00:39:38,900 --> 00:39:43,040
身体标签，因为我们想要开放和 

1053
00:39:41,090 --> 00:39:44,840
这个关闭标签只是表明了 

1054
00:39:43,040 --> 00:39:47,860
这是 应该 是的东西 

1055
00:39:44,840 --> 00:39:49,730
如果我现在看着我的话就改变了 

1056
00:39:47,860 --> 00:39:53,840
index.html 之前回忆起来 

1057
00:39:49,730 --> 00:39:55,340
包含我的表单index.html注意到 

1058
00:39:53,840 --> 00:39:56,810
这是表格， 我完成了它 

1059
00:39:55,340 --> 00:39:58,580
早些时候，我继续 前进并输出所有内容 

1060
00:39:56,810 --> 00:40:00,380
新生宿舍不仅仅是两个 

1061
00:39:58,580 --> 00:40:02,030
他们 ，你会看到该文件 

1062
00:40:00,380 --> 00:40:04,340
开始几乎一样然后 

1063
00:40:02,030 --> 00:40:06,740
继续更多的 东西，但注意 

1064
00:40:04,340 --> 00:40:10,730
这次index.html缺少什么

1065
00:40:06,740 --> 00:40:13,040
没有doctype没有HTML标签没有头标签没有 

1066
00:40:10,730 --> 00:40:15,410
标题标签没有身体标签所有 常见的 

1067
00:40:13,040 --> 00:40:17,030
事情已被考虑在内但是有 

1068
00:40:15,410 --> 00:40:20,030
一些时髦的新语法也是如此 

1069
00:40:17,030 --> 00:40:22,010
烧瓶特定该第一行是 

1070
00:40:20,030 --> 00:40:24,350
此文件与布局之间的链接

1071
00:40:22,010 --> 00:40:26,810
第一行说嘿烧瓶这个 

1072
00:40:24,350 --> 00:40:28,790
索引点HTML文件扩展了 

1073
00:40:26,810 --> 00:40:30,740
HTM上的布局定义

1074
00:40:28,790 --> 00:40:32,300
所以说抓住那个模板和插件 

1075
00:40:30,740 --> 00:40:34,550
我在那里 你想插什么 

1076
00:40:32,300 --> 00:40:37,100
当你 在这里使用相同的语法 

1077
00:40:34,550 --> 00:40:39,350
实际上把东西放在块标签之间 

1078
00:40:37,100 --> 00:40:42,230
和端块标记是向下 

1079
00:40:39,350 --> 00:40:43,970
当你说两个烧瓶去的时候 

1080
00:40:42,230 --> 00:40:46,730
领先并拿走这些东西并插上它 

1081
00:40:43,970 --> 00:40:49,700
进入布局的占位符所以 

1082
00:40:46,730 --> 00:40:51,410
同时，成功页面现在 还 可以在 

1083
00:40:49,700 --> 00:40:53,420
如果我去，会更复杂一点 

1084
00:40:51,410 --> 00:40:55,250
成功并不是很复杂

1085
00:40:53,420 --> 00:40:57,140
说实话，它 甚至看起来都不像 

1086
00:40:55,250 --> 00:40:59,330
HTML 因为我们正在使用它们 

1087
00:40:57,140 --> 00:41:01,310
更动态的功能，但这只是说 

1088
00:40:59,330 --> 00:41:03,470
嘿烧瓶使用相同的布局，所以 

1089
00:41:01,310 --> 00:41:05,810
页面结构完全相同但是 

1090
00:41:03,470 --> 00:41:08,480
为了身体 继续并插入这个 

1091
00:41:05,810 --> 00:41:10,460
相反， 所以当 你去的 时候确实如此 

1092
00:41:08,480 --> 00:41:12,140
提前并加载此成功 消息 

1093
00:41:10,460 --> 00:41:13,610
在这里看到这个消息不仅仅是成功 我 

1094
00:41:12,140 --> 00:41:15,050
在这里阐述并说你 是 

1095
00:41:13,610 --> 00:41:17,480
注册好不是真的那个因为 

1096
00:41:15,050 --> 00:41:19,190
那里还没有数据库，但那就是 

1097
00:41:17,480 --> 00:41:21,020
生成一个 完整的 HTML页面和 

1098
00:41:19,190 --> 00:41:22,520
关于失败 我 只是之前 

1099
00:41:21,020 --> 00:41:25,160
作弊，只是说回归失败 

1100
00:41:22,520 --> 00:41:27,230
引用unquote 没有HTML失败 

1101
00:41:25,160 --> 00:41:28,430
页面几乎是一样的 但是 

1102
00:41:27,230 --> 00:41:31,520
现在我可以提供一些 

1103
00:41:28,430 --> 00:41:33,650
描述性文本 这个身体 ，就像你 

1104
00:41:31,520 --> 00:41:35,240
必须提供你的名字和宿舍 

1105
00:41:33,650 --> 00:41:37,790
告诫用户没有 

1106
00:41:35,240 --> 00:41:39,470
合作合适所以现在你的家 

1107
00:41:37,790 --> 00:41:41,540
页面，如果您 从中 推断 

1108
00:41:39,470 --> 00:41:43,820
这可能有完全相同的布局 

1109
00:41:41,540 --> 00:41:45,950
美学和菜单栏和所有 

1110
00:41:43,820 --> 00:41:47,180
那种幻想但只有内容 

1111
00:41:45,950 --> 00:41:48,680
必须改变，你可以离开 

1112
00:41:47,180 --> 00:41:50,330
刚刚复制 的业务 和 

1113
00:41:48,680 --> 00:41:52,490
粘贴那么 你的问题 

1114
00:41:50,330 --> 00:41:54,140
早些时候关于活力 的动力 

1115
00:41:52,490 --> 00:41:56,000
不必仅来自用户 

1116
00:41:54,140 --> 00:41:58,490
它也可以来自 建筑 

1117
00:41:56,000 --> 00:42:00,110
动态的网站基于 

1118
00:41:58,490 --> 00:42:02,000
多个页面，所以在 一天结束时 

1119
00:42:00,110 --> 00:42:04,550
该浏览器有没有想法， 蟒蛇 

1120
00:42:02,000 --> 00:42:06,740
存在没有什么不熟悉 

1121
00:42:04,550 --> 00:42:07,580
所有浏览器仍然看到的是烧瓶 

1122
00:42:06,740 --> 00:42:09,740
一个HTML页面

1123
00:42:07,580 --> 00:42:11,990
但是什么烧瓶和实习生的 Python 

1124
00:42:09,740 --> 00:42:14,330
为我们做的是构建那个页面 

1125
00:42:11,990 --> 00:42:16,280
动态遵循两个规则

1126
00:42:14,330 --> 00:42:19,450
几周前关于HTML和CSS及以下内容 

1127
00:42:16,280 --> 00:42:23,650
上周关于Python如何工作的规则

1128
00:42:19,450 --> 00:42:23,650
问题是的 

1129
00:42:32,990 --> 00:42:38,370
对于这个新的问题，这不是一个好问题 

1130
00:42:36,540 --> 00:42:39,900
语法我们 的双花括号 

1131
00:42:38,370 --> 00:42:42,300
早先看到了现在的花括号

1132
00:42:39,900 --> 00:42:45,630
百分号这实际上还没有 

1133
00:42:42,300 --> 00:42:49,200
另一种叫Jinja ji nja的语言

1134
00:42:45,630 --> 00:42:50,430
这是一种模板语言

1135
00:42:49,200 --> 00:42:51,660
有几十这些东西 在 

1136
00:42:50,430 --> 00:42:53,880
世界人民只想出自己的想法 

1137
00:42:51,660 --> 00:42:56,010
语法 和时髦的原因 

1138
00:42:53,880 --> 00:42:57,900
语法 是 Jinja 的作者 

1139
00:42:56,010 --> 00:43:00,060
大概不会想到别的 

1140
00:42:57,900 --> 00:43:02,220
像大括号一样使用的语言

1141
00:43:00,060 --> 00:43:04,020
百分号和百分号 

1142
00:43:02,220 --> 00:43:05,550
大括号因此 他们 

1143
00:43:04,020 --> 00:43:07,440
决定你知道 我会用 这个 

1144
00:43:05,550 --> 00:43:10,110
语法， 因为它看起来不同 

1145
00:43:07,440 --> 00:43:12,120
来自HTML，CSS和Python 

1146
00:43:10,110 --> 00:43:18,780
所以像flash这样的框架没有 

1147
00:43:12,120 --> 00:43:21,210
将它与其他 东西混淆

1148
00:43:18,780 --> 00:43:23,880
自动支承烧瓶中

1149
00:43:21,210 --> 00:43:25,800
默认支持 它可能具有的Jinja 

1150
00:43:23,880 --> 00:43:27,720
拿出 自己的模板语法 

1151
00:43:25,800 --> 00:43:29,070
但谁发明了烧瓶决定了我 

1152
00:43:27,720 --> 00:43:30,660
不需要重新发明这个轮子 

1153
00:43:29,070 --> 00:43:31,710
别人已经做了模板 

1154
00:43:30,660 --> 00:43:33,660
给我这个的语言

1155
00:43:31,710 --> 00:43:35,790
功能所以我要结合我们的 

1156
00:43:33,660 --> 00:43:37,230
合而为之，我没有称之为 

1157
00:43:35,790 --> 00:43:39,660
刚才语言，因为坦率地说 

1158
00:43:37,230 --> 00:43:41,040
HTML CSS Python JavaScript 我的意思是我们 

1159
00:43:39,660 --> 00:43:43,290
已经像在这里用完了手指 

1160
00:43:41,040 --> 00:43:45,360
但Jinja确实是另一种语言 

1161
00:43:43,290 --> 00:43:47,610
它 不是一种编程语言 

1162
00:43:45,360 --> 00:43:49,020
虽然它会有一些控制流程 

1163
00:43:47,610 --> 00:43:50,910
功能，我们将在一 点点 看 

1164
00:43:49,020 --> 00:43:53,600
它只是多 比 Python 更有限 

1165
00:43:50,910 --> 00:43:53,600
其他问题 

1166
00:43:57,690 --> 00:44:02,520
好的问题可以结合起来 

1167
00:43:59,490 --> 00:44:04,860
成功并将您的网页合并到一起 

1168
00:44:02,520 --> 00:44:05,850
简短回答是的，让我不要表现出来 

1169
00:44:04,860 --> 00:44:07,890
但是因为它会得到 更多 

1170
00:44:05,850 --> 00:44:11,100
很复杂， 但是 我可以想象 

1171
00:44:07,890 --> 00:44:13,260
传递 一个变量，这是一个布尔值 

1172
00:44:11,100 --> 00:44:14,580
只是其中之一的 真或假 

1173
00:44:13,260 --> 00:44:17,610
模板，也许我称之为新的 

1174
00:44:14,580 --> 00:44:20,160
模板结果点HTML 我实际上可以 

1175
00:44:17,610 --> 00:44:22,560
然后在我的 模板中 有一个if条件 

1176
00:44:20,160 --> 00:44:24,840
如果结果是真的说这个说 

1177
00:44:22,560 --> 00:44:26,600
否则如果结果为假则说出来 

1178
00:44:24,840 --> 00:44:29,190
其他的事情，所以你可以这样做

1179
00:44:26,600 --> 00:44:31,380
虽然它可能更清洁 

1180
00:44:29,190 --> 00:44:33,000
如果它们保持消息分离 

1181
00:44:31,380 --> 00:44:36,000
在功能上做别的事情毕竟 

1182
00:44:33,000 --> 00:44:38,250
不管怎样，这些文件都很小 

1183
00:44:36,000 --> 00:44:39,990
只是为了质疑用户看到了什么

1184
00:44:38,250 --> 00:44:41,520
如果他们要好好开放的话 

1185
00:44:39,990 --> 00:44:43,020
你知道调试控制台

1186
00:44:41,520 --> 00:44:43,630
Chrome并 查看并 查看它们是什么 

1187
00:44:43,020 --> 00:44:46,660
看到

1188
00:44:43,630 --> 00:44:48,430
而技术是出现的HTML 

1189
00:44:46,660 --> 00:44:50,109
真的好问题 用户 是什么 

1190
00:44:48,430 --> 00:44:52,329
看，我们可以从字面上回答这个问题

1191
00:44:50,109 --> 00:44:54,579
打开Chrome并打开视图页面 

1192
00:44:52,329 --> 00:44:56,440
来源或检查员这 是什么的 

1193
00:44:54,579 --> 00:44:58,420
浏览器在早些时候宣称冰时会看到

1194
00:44:56,440 --> 00:45:00,339
浏览器不知道Python或 

1195
00:44:58,420 --> 00:45:01,839
确实如此，甚至涉及到烧瓶

1196
00:45:00,339 --> 00:45:03,400
是的，因为浏览器 是 什么 

1197
00:45:01,839 --> 00:45:05,890
在一天结束时收到的只是 

1198
00:45:03,400 --> 00:45:12,670
这就是动态构造的HTML 

1199
00:45:05,890 --> 00:45:13,900
好问题是的好问题我们会 

1200
00:45:12,670 --> 00:45:16,150
看多了这 只是一点点 

1201
00:45:13,900 --> 00:45:18,430
问题 是你之间可以 

1202
00:45:16,150 --> 00:45:20,829
大括号和百分号放实际 

1203
00:45:18,430 --> 00:45:22,869
Python 代码，你可以把看起来的东西 

1204
00:45:20,829 --> 00:45:26,289
像Python代码，但不是所有的 Python 

1205
00:45:22,869 --> 00:45:28,479
所以更多的是 在 基本只 

1206
00:45:26,289 --> 00:45:30,430
某些函数模板语言 

1207
00:45:28,479 --> 00:45:32,410
长话短说我们的沙箱就这么简短

1208
00:45:30,430 --> 00:45:34,059
他们不像真实的那样富有表现力

1209
00:45:32,410 --> 00:45:36,999
编程语言，否则你就是 

1210
00:45:34,059 --> 00:45:38,470
容易受到 你想要的 潜在黑客攻击 

1211
00:45:36,999 --> 00:45:39,519
他们的功能非常有限 

1212
00:45:38,470 --> 00:45:41,529
因为他们只是在展示 

1213
00:45:39,519 --> 00:45:44,289
数据与 思考或做逻辑无关

1214
00:45:41,529 --> 00:45:45,460
通常更多的是在一点点 

1215
00:45:44,289 --> 00:45:46,509
权， 在 当时很多一次性 

1216
00:45:45,460 --> 00:45:47,920
为了五分钟休息，这里打开 

1217
00:45:46,509 --> 00:45:51,549
音乐回来，我们会让 这个 

1218
00:45:47,920 --> 00:45:55,210
应用程序更好， 我们 回来了 

1219
00:45:51,549 --> 00:45:57,190
回想一下， 我现在正处于这个状态 

1220
00:45:55,210 --> 00:45:59,380
几乎是结构 

1221
00:45:57,190 --> 00:46:01,329
我们制作的常规网络应用程序 

1222
00:45:59,380 --> 00:46:03,579
这里将继续关注此事 

1223
00:46:01,329 --> 00:46:05,200
有应用程序 PI的模式 

1224
00:46:03,579 --> 00:46:08,200
切入点所有 有趣 

1225
00:46:05,200 --> 00:46:09,700
东西在HTML文件中启动和布局 

1226
00:46:08,200 --> 00:46:11,559
你的模板目录 

1227
00:46:09,700 --> 00:46:13,690
整个网站 有任何共性和 

1228
00:46:11,559 --> 00:46:15,849
那么一个或多个其他网页

1229
00:46:13,690 --> 00:46:17,589
实际上代表您的个人观点 

1230
00:46:15,849 --> 00:46:19,809
对应于您的一个或多个

1231
00:46:17,589 --> 00:46:21,759
实际路线所以现在我们正处在 一个 点 

1232
00:46:19,809 --> 00:46:24,039
像一个稳定的基线，但 有 我们 

1233
00:46:21,759 --> 00:46:26,049
我 也许 会潜入这个权利

1234
00:46:24,039 --> 00:46:28,539
没有作出多大 意义， 为什么我们做 

1235
00:46:26,049 --> 00:46:30,160
这种各种因素分解 现在让我们 来吧 

1236
00:46:28,539 --> 00:46:32,619
因为当然，如果你改善这一点

1237
00:46:30,160 --> 00:46:34,569
看看它刚刚声称你的成功HTML 

1238
00:46:32,619 --> 00:46:38,049
注册不好，因为 

1239
00:46:34,569 --> 00:46:41,559
在申请PI 我们做了什么 

1240
00:46:38,049 --> 00:46:43,150
用户信息不是我们的 

1241
00:46:41,559 --> 00:46:45,219
检查它，他们给我们 信息 和 

1242
00:46:43,150 --> 00:46:46,989
如果是这样的话，如果他们 错过了，我们会声 

1243
00:46:45,219 --> 00:46:49,210
他们的名字和/或他们的宿舍 我们只是 

1244
00:46:46,989 --> 00:46:51,460
声称失败所以会发生什么事情 

1245
00:46:49,210 --> 00:46:53,079
可能是Python中的数据结构 

1246
00:46:51,460 --> 00:46:54,339
在这里我们可以存储我们注册

1247
00:46:53,079 --> 00:46:56,560
还没有我们没有的 数据库 

1248
00:46:54,339 --> 00:46:58,300
续集还未来一周 

1249
00:46:56,560 --> 00:47:01,090
是的，否则我们可以使用数组 

1250
00:46:58,300 --> 00:47:02,650
在Python中称为列表所以让我 

1251
00:47:01,090 --> 00:47:06,130
建议我们如何做到这一点让我 

1252
00:47:02,650 --> 00:47:08,260
实际上为我们 开放了一个IMS 

1253
00:47:06,130 --> 00:47:10,870
该程序的第二次迭代并在 

1254
00:47:08,260 --> 00:47:13,180
应用程序PI 注意到这一点 

1255
00:47:10,870 --> 00:47:15,580
文件的顶部不仅是我创建 

1256
00:47:13,180 --> 00:47:17,470
我的应用程序使用 相同的行 

1257
00:47:15,580 --> 00:47:19,290
之前和我评论了这件事 

1258
00:47:17,470 --> 00:47:21,550
使用哈希符号 提前的 时间 

1259
00:47:19,290 --> 00:47:23,920
请注意我 在第六行声称 

1260
00:47:21,550 --> 00:47:25,420
这里这里七等于一个空列表 

1261
00:47:23,920 --> 00:47:26,770
所有已 注册 的学生 

1262
00:47:25,420 --> 00:47:28,780
这样我们就可以保留信息

1263
00:47:26,770 --> 00:47:30,340
我们只是暂时 这样 做了 

1264
00:47:28,780 --> 00:47:33,460
时间，但有人 记得你 

1265
00:47:30,340 --> 00:47:36,580
通过 Python在列表中添加内容

1266
00:47:33,460 --> 00:47:38,680
什么功能附加是的，如果你 有 

1267
00:47:36,580 --> 00:47:40,150
点附加在列表名称的末尾 

1268
00:47:38,680 --> 00:47:42,040
你可以添加一些东西，以便在哪里

1269
00:47:40,150 --> 00:47:44,530
在这里顺利进行是我的路线 

1270
00:47:42,040 --> 00:47:46,210
斜线，意味着再次得到

1271
00:47:44,530 --> 00:47:47,530
默认是a的默认路由 

1272
00:47:46,210 --> 00:47:49,990
人类可能会得到，他们会看到

1273
00:47:47,530 --> 00:47:52,600
索引点包含该表单的HTML 

1274
00:47:49,990 --> 00:47:54,970
如果我 现在 向下滚动 ， 你会看到 我 

1275
00:47:52,600 --> 00:47:58,450
像以前一样有一个注册路线 

1276
00:47:54,970 --> 00:48:02,590
但我在做一个附加步骤 ，即 

1277
00:47:58,450 --> 00:48:04,810
是这里的新线 ，26岁时 要明确 

1278
00:48:02,590 --> 00:48:06,310
所以我可以用任何 数字 实现这个 

1279
00:48:04,810 --> 00:48:08,410
方式， 但 关键细节是我 

1280
00:48:06,310 --> 00:48:10,090
引用列表 名称学生，但它 

1281
00:48:08,410 --> 00:48:11,500
可以称之为 任何 点附加 

1282
00:48:10,090 --> 00:48:12,850
正如有人建议你是如何添加的

1283
00:48:11,500 --> 00:48:14,500
列表末尾的东西和 

1284
00:48:12,850 --> 00:48:16,090
然后我可以添加任何我想保留的东西

1285
00:48:14,500 --> 00:48:18,190
很简单，我只是 要添加一个字符串 

1286
00:48:16,090 --> 00:48:20,380
而且我会保持它超级 简单 

1287
00:48:18,190 --> 00:48:22,840
只是说字符串是某某某某 

1288
00:48:20,380 --> 00:48:25,240
这样一个宿舍让 大卫来自 

1289
00:48:22,840 --> 00:48:27,760
Matthews Hall或Brian来自哪里和 

1290
00:48:25,240 --> 00:48:29,650
所以这里我们有使用F的占位符 

1291
00:48:27,760 --> 00:48:31,300
Python中的字符串， 所以这 没什么 

1292
00:48:29,650 --> 00:48:32,950
与没有任何关系的烧瓶做 

1293
00:48:31,300 --> 00:48:34,660
与金贾 或我们刚刚谈过的任何事情 

1294
00:48:32,950 --> 00:48:37,540
关于这一点必须做的一切 

1295
00:48:34,660 --> 00:48:40,630
上周在Python中的语法如此 

1296
00:48:37,540 --> 00:48:43,930
这将该名称附加到该列表中

1297
00:48:40,630 --> 00:48:46,330
这场风暴让我们现在继续尝试吧 

1298
00:48:43,930 --> 00:48:49,120
如果我进入 我的源代码，这个版本 

1299
00:48:46,330 --> 00:48:52,450
7目录为今天的代码 进入frosh 

1300
00:48:49,120 --> 00:48:54,430
IMS one 和run flask run将看到一个URL 

1301
00:48:52,450 --> 00:48:56,920
我 现在可以访问， 让我继续前进 

1302
00:48:54,430 --> 00:48:59,290
打开 那个对于frosh IMS 1注意到 我 

1303
00:48:56,920 --> 00:49:02,140
有完整的下拉现在让我 

1304
00:48:59,290 --> 00:49:04,090
继续说大卫， 但我不会 

1305
00:49:02,140 --> 00:49:06,520
告诉你我的宿舍，并尝试注册 

1306
00:49:04,090 --> 00:49:07,930
现在我看到一个更友好的消息 

1307
00:49:06,520 --> 00:49:10,270
只是失败， 那是因为我的 

1308
00:49:07,930 --> 00:49:11,800
新的和改进的模板哦 

1309
00:49:10,270 --> 00:49:13,060
我会继续成为大卫，我会成为

1310
00:49:11,800 --> 00:49:14,440
从这里马修斯让 我继续前进 ， 

1311
00:49:13,060 --> 00:49:16,990
注册和瞧 

1312
00:49:14,440 --> 00:49:18,369
现在我们看到马修斯的大卫了 

1313
00:49:16,990 --> 00:49:19,900
注册，它似乎是一个 

1314
00:49:18,369 --> 00:49:21,550
突然以新的项目符号形式出现 

1315
00:49:19,900 --> 00:49:23,320
列表，但实际上来了 

1316
00:49:21,550 --> 00:49:25,330
好吧我 不知道让 我 试试这个 

1317
00:49:23,320 --> 00:49:27,040
让我再 回到 斜线那是什么 

1318
00:49:25,330 --> 00:49:29,080
给我形式的路线让我 

1319
00:49:27,040 --> 00:49:31,000
继续这次输入不是大卫 

1320
00:49:29,080 --> 00:49:33,550
但布莱恩和布莱恩说宿舍是谁

1321
00:49:31,000 --> 00:49:35,470
你在Pennypacker所以让我选择这个 

1322
00:49:33,550 --> 00:49:37,810
从菜单中改为单击 注册 

1323
00:49:35,470 --> 00:49:39,460
现在我们看到来自Pennypacker的Brian 

1324
00:49:37,810 --> 00:49:41,290
不知何故，应用程序正在改变

1325
00:49:39,460 --> 00:49:44,080
说明并注意 我们所在 的网址 

1326
00:49:41,290 --> 00:49:46,360
被称为斜线注册者就 可以了 

1327
00:49:44,080 --> 00:49:47,920
似乎 是第三路线这个时候， 

1328
00:49:46,360 --> 00:49:49,420
显然 本身并不是互动的 

1329
00:49:47,920 --> 00:49:51,400
只是吐出已注册的名单 

1330
00:49:49,420 --> 00:49:53,980
学生们，让我们放一下 

1331
00:49:51,400 --> 00:49:55,480
如果我们去，谚语工程帽子

1332
00:49:53,980 --> 00:49:58,300
关于实现这个斜杠 

1333
00:49:55,480 --> 00:50:01,240
注册人逻辑上必须做什么 

1334
00:49:58,300 --> 00:50:06,310
该代码以口头 伪代码进行 

1335
00:50:01,240 --> 00:50:12,130
如果你想要一个 for循环迭代 

1336
00:50:06,310 --> 00:50:13,960
是什么， 是的迭代在列表上 

1337
00:50:12,130 --> 00:50:15,790
包含所有 这些的学生 

1338
00:50:13,960 --> 00:50:18,430
同时注册人和模板 

1339
00:50:15,790 --> 00:50:20,859
可能有像列表的li标签 

1340
00:50:18,430 --> 00:50:22,450
item和无序 列表 的UL标记 

1341
00:50:20,859 --> 00:50:24,160
这使我的项目符号列表等等 

1342
00:50:22,450 --> 00:50:26,290
让我们来看看，我们怎么做 

1343
00:50:24,160 --> 00:50:29,440
如果我，请遵循这些面包屑 

1344
00:50:26,290 --> 00:50:31,240
向上滚动应用程序点 pi将会看到 

1345
00:50:29,440 --> 00:50:33,460
路线称为斜线注册和 

1346
00:50:31,240 --> 00:50:35,770
你会看到它显然都做到了 

1347
00:50:33,460 --> 00:50:38,200
它返回一个名为 register的模板

1348
00:50:35,770 --> 00:50:39,790
点 HTML注册HTML的地方 

1349
00:50:38,200 --> 00:50:41,109
可能是一个正在生成的模板

1350
00:50:39,790 --> 00:50:43,600
那个清单，但有一些东西 

1351
00:50:41,109 --> 00:50:45,490
这次我不同意了 

1352
00:50:43,600 --> 00:50:47,380
争论，我早些时候看到了这个 

1353
00:50:45,490 --> 00:50:49,780
想通过一个名字等于大卫或 

1354
00:50:47,380 --> 00:50:52,300
名字等于布莱恩 我刚刚抓住 了 

1355
00:50:49,780 --> 00:50:54,070
这次 我从不做变量

1356
00:50:52,300 --> 00:50:58,630
请求dot orgs我没有请求 

1357
00:50:54,070 --> 00:51:00,030
因为学生在哪里做了什么

1358
00:50:58,630 --> 00:51:02,800
这来自 

1359
00:51:00,030 --> 00:51:04,750
这是高级召回的清单 

1360
00:51:02,800 --> 00:51:06,700
我们有这个 全局变量 

1361
00:51:04,750 --> 00:51:08,650
学生的最高学生是 

1362
00:51:06,700 --> 00:51:10,750
初始化为空 列表但 召回 

1363
00:51:08,650 --> 00:51:13,119
我们一直在追加它 

1364
00:51:10,750 --> 00:51:14,830
注册路线所以我可以继续说 

1365
00:51:13,119 --> 00:51:17,320
你知道什么是继续前进 ，进入 

1366
00:51:14,830 --> 00:51:19,869
将点HTML注册为模板或者 更确切地说 

1367
00:51:17,320 --> 00:51:21,880
列表名为学生的价值

1368
00:51:19,869 --> 00:51:23,350
正是这样，又一次 

1369
00:51:21,880 --> 00:51:24,130
愚蠢的 ，你有同样的 

1370
00:51:23,350 --> 00:51:26,380
左边的字

1371
00:51:24,130 --> 00:51:27,670
和变量名的右侧，您 

1372
00:51:26,380 --> 00:51:29,619
你能再次这样做吗？ 

1373
00:51:27,670 --> 00:51:31,420
可以说foo 你可以说X或Y 或者 

1374
00:51:29,619 --> 00:51:33,609
什么， 但坦率地说它往往 会 

1375
00:51:31,420 --> 00:51:35,589
samosas只是传给了同名的 

1376
00:51:33,609 --> 00:51:37,599
你关心 这样 变量 

1377
00:51:35,589 --> 00:51:38,949
模板可以看到这 一点 

1378
00:51:37,599 --> 00:51:40,180
如果我愿意的话，下一个面包屑是什么？ 

1379
00:51:38,949 --> 00:51:42,839
准确理解发生了什么

1380
00:51:40,180 --> 00:51:45,579
我应该 打开下一个 文件 

1381
00:51:42,839 --> 00:51:47,499
可能注册了HTML，所以让我们进去吧

1382
00:51:45,579 --> 00:51:48,819
它在我的模板目录中 

1383
00:51:47,499 --> 00:51:51,130
定义，你会看到一个 

1384
00:51:48,819 --> 00:51:53,140
失败消息，允许我出错 

1385
00:51:51,130 --> 00:51:55,059
检查包含表单的索引 

1386
00:51:53,140 --> 00:51:57,430
包含整体的布局

1387
00:51:55,059 --> 00:51:59,440
结构，最后注册点 

1388
00:51:57,430 --> 00:52:01,809
HTML，现在我们可以回答这个问题了

1389
00:51:59,440 --> 00:52:03,699
你问 前面的 Python代码 

1390
00:52:01,809 --> 00:52:06,160
在模板中所以这个看起来更多 

1391
00:52:03,699 --> 00:52:08,680
比以前更先进，但请注意它 

1392
00:52:06,160 --> 00:52:10,989
遵循注册HTML的模式

1393
00:52:08,680 --> 00:52:12,640
延伸相同的布局，以便借用 

1394
00:52:10,989 --> 00:52:14,859
从相同的模具，所以 它看起来一样 

1395
00:52:12,640 --> 00:52:16,390
这个页面的主体虽然是 公正的 

1396
00:52:14,859 --> 00:52:18,160
这段HTML代码 

1397
00:52:16,390 --> 00:52:20,140
给我一个无序的列表打开和 

1398
00:52:18,160 --> 00:52:22,150
关闭，这是你现在可以做的 

1399
00:52:20,140 --> 00:52:23,769
再次与Jinja 相同 ，它几乎 相同 

1400
00:52:22,150 --> 00:52:25,150
到 Python，所以你不必担心 

1401
00:52:23,769 --> 00:52:27,219
约想着 还 学习 

1402
00:52:25,150 --> 00:52:29,469
另一种语言，它只是一个子集 

1403
00:52:27,219 --> 00:52:32,979
Python本质上是这样的，如果我想 

1404
00:52:29,469 --> 00:52:35,769
输出所有学生的名单我 

1405
00:52:32,979 --> 00:52:37,779
在我的模板中使用我的姜语法

1406
00:52:35,769 --> 00:52:39,459
语法与大括号％和我说 的 

1407
00:52:37,779 --> 00:52:41,890
学生就像在Python中一样 

1408
00:52:39,459 --> 00:52:43,749
在该列表上引发迭代

1409
00:52:41,890 --> 00:52:45,609
然后我想要输出什么呢 

1410
00:52:43,749 --> 00:52:48,190
我们可以从借用我们花括号我们 

1411
00:52:45,609 --> 00:52:50,589
名称示例，只做 列表项 

1412
00:52:48,190 --> 00:52:53,589
插件 学生 服装 的名称 

1413
00:52:50,589 --> 00:52:55,180
列出项目，然后结束 4所以这 是 

1414
00:52:53,589 --> 00:52:58,059
模板的一个愚蠢的事情 

1415
00:52:55,180 --> 00:52:59,859
而在Python中正确地回忆起你 

1416
00:52:58,059 --> 00:53:01,479
可以对学生说你的学生

1417
00:52:59,859 --> 00:53:03,430
有一个冒号然后缩进 

1418
00:53:01,479 --> 00:53:05,109
处理一切与问题 

1419
00:53:03,430 --> 00:53:07,930
HTML世界中的浏览器

1420
00:53:05,109 --> 00:53:09,729
回忆忽略了 像白色这样的 所有 空白 

1421
00:53:07,930 --> 00:53:12,369
空间没有特别意义，但 在 

1422
00:53:09,729 --> 00:53:14,650
Python的它这样 做 的人 的 方式解决 

1423
00:53:12,369 --> 00:53:17,739
如果有点奇怪，这就是你的字面意思 

1424
00:53:14,650 --> 00:53:19,719
李说 结束一个字没有空间和 

1425
00:53:17,739 --> 00:53:21,759
这就是它和缩进帮助你阅读

1426
00:53:19,719 --> 00:53:23,559
像这样的东西，那么什么是HTML 

1427
00:53:21,759 --> 00:53:24,849
我回来了， 我真的可以 看一下 

1428
00:53:23,559 --> 00:53:27,069
这让我继续 查看页面 

1429
00:53:24,849 --> 00:53:28,630
铬的 来源， 你会发现它不是 

1430
00:53:27,069 --> 00:53:29,799
非常 漂亮，可能 是 理想的 

1431
00:53:28,630 --> 00:53:31,660
因为那里有很多空白 区域 

1432
00:53:29,799 --> 00:53:33,459
来自我的那些模板 

1433
00:53:31,660 --> 00:53:35,109
还有相同的印刷品， 但是 

1434
00:53:33,459 --> 00:53:37,660
这在语法上是正确的 

1435
00:53:35,109 --> 00:53:40,960
我正在动态输出这个部分 

1436
00:53:37,660 --> 00:53:50,559
这个布局的一面有任何疑问 

1437
00:53:40,960 --> 00:53:53,170
在这个好 问题上让我们杀死 烧瓶 

1438
00:53:50,559 --> 00:53:56,140
使用ctrl C让我们重新运行服务器和 

1439
00:53:53,170 --> 00:53:59,289
让我回到我的注册人路线 

1440
00:53:56,140 --> 00:54:00,670
并重新加载，遗憾的是， 这 不是 

1441
00:53:59,289 --> 00:54:02,230
首先 注册学生的最佳方式 

1442
00:54:00,670 --> 00:54:04,599
体育，因为如果服务器去了 

1443
00:54:02,230 --> 00:54:06,579
离线失去力量你打ctrl C 你 

1444
00:54:04,599 --> 00:54:08,380
显然确实失去了所有人 

1445
00:54:06,579 --> 00:54:10,690
虽然我们一般都注意到了 

1446
00:54:08,380 --> 00:54:13,780
不赞成使用全局 变量 

1447
00:54:10,690 --> 00:54:16,329
这个学生列出的确是为什么 

1448
00:54:13,780 --> 00:54:19,869
我在第7行 和 第7行定义了吗？ 

1449
00:54:16,329 --> 00:54:22,150
不是在我的注册路线中 

1450
00:54:19,869 --> 00:54:24,430
这里，是因为的确我追加到 

1451
00:54:22,150 --> 00:54:31,960
列表在这里， 但我非常 刻意地做了 

1452
00:54:24,430 --> 00:54:33,670
我没有在那里宣布名单是的 

1453
00:54:31,960 --> 00:54:35,680
在我的其他路线的其他地方使用它

1454
00:54:33,670 --> 00:54:37,990
注册人的路线， 甚至 更多 

1455
00:54:35,680 --> 00:54:39,460
如果我 在这里 宣布一份清单，那就到了

1456
00:54:37,990 --> 00:54:40,750
它根据定义成为一个本地的

1457
00:54:39,460 --> 00:54:42,940
变量，这意味着一旦 这个 

1458
00:54:40,750 --> 00:54:45,400
函数退出现在我刚扔掉了 

1459
00:54:42,940 --> 00:54:47,890
那些立即注册的学生

1460
00:54:45,400 --> 00:54:49,390
甚至在ctrl C之后，所以这是一个 

1461
00:54:47,890 --> 00:54:52,059
更好的做法，但事实 并非如此 

1462
00:54:49,390 --> 00:54:53,799
我实际上 在我的日子里 做了 什么 

1463
00:54:52,059 --> 00:54:55,869
做了一些有点发烧友的事情 

1464
00:54:53,799 --> 00:54:57,849
所以当时我真的不知道 

1465
00:54:55,869 --> 00:54:59,319
至少在1997年的任何事情

1466
00:54:57,849 --> 00:55:01,180
数据库我认为我 甚至不知道 

1467
00:54:59,319 --> 00:55:03,849
关于CSV文件还是至少如何 

1468
00:55:01,180 --> 00:55:05,829
我动态地创建它们，所以我改为 

1469
00:55:03,849 --> 00:55:09,789
采取这种方式让我进入frosh 

1470
00:55:05,829 --> 00:55:11,619
IMS 点了HTM炖，它注意到了 

1471
00:55:09,789 --> 00:55:13,180
和以前一样的模板 

1472
00:55:11,619 --> 00:55:15,640
我几乎复制和粘贴了这个

1473
00:55:13,180 --> 00:55:18,700
第二个例子， 但在应用PI中 

1474
00:55:15,640 --> 00:55:21,250
注意这种幻想， 所以我在这里 

1475
00:55:18,700 --> 00:55:23,980
在最重要的方面 几乎 相同 

1476
00:55:21,250 --> 00:55:26,049
烧瓶， 但我也在使用这个OS库 

1477
00:55:23,980 --> 00:55:29,200
更多关于那 一点 但是怎么样 

1478
00:55:26,049 --> 00:55:31,359
线两条很微妙我慌乱 这 

1479
00:55:29,200 --> 00:55:34,000
我 想只是一周以前的首字母缩略词

1480
00:55:31,359 --> 00:55:35,099
SMTP有谁知道这 是 什么 

1481
00:55:34,000 --> 00:55:38,799
对于

1482
00:55:35,099 --> 00:55:40,869
是的简单邮件传输协议电子邮件 

1483
00:55:38,799 --> 00:55:42,250
这就是 Python 内置的内置功能 

1484
00:55:40,869 --> 00:55:44,049
您可以发送的功能 

1485
00:55:42,250 --> 00:55:45,730
电子邮件， 这 正是 我所做的 

1486
00:55:44,049 --> 00:55:47,200
当我第一次 做这个网站没有 

1487
00:55:45,730 --> 00:55:48,460
我不 知道 有关数据库的 任何 信息 

1488
00:55:47,200 --> 00:55:50,410
了解有关保存事物的任何事情 

1489
00:55:48,460 --> 00:55:51,310
文件， 我还在 学习 但是 

1490
00:55:50,410 --> 00:55:53,410
我意识到了

1491
00:55:51,310 --> 00:55:55,600
嗯，我可以使用编程发送 

1492
00:55:53,410 --> 00:55:57,520
发送电子邮件给监考人员或RA 

1493
00:55:55,600 --> 00:55:59,110
监督体育计划，以便 

1494
00:55:57,520 --> 00:56:00,880
他们可以将它保存在一个文件夹中 

1495
00:55:59,110 --> 00:56:03,160
并知道谁注册了 它不是 

1496
00:56:00,880 --> 00:56:04,600
超级用户友好的 ，但它 至少有 

1497
00:56:03,160 --> 00:56:06,670
完成 这项工作 ，因为他们就能够 

1498
00:56:04,600 --> 00:56:10,150
在这个程序中跟踪所有内容 

1499
00:56:06,670 --> 00:56:13,210
注意我 有我的 论坛 路线 

1500
00:56:10,150 --> 00:56:14,650
我有这个注册路线， 但有一些 

1501
00:56:13,210 --> 00:56:16,180
新的代码行， 你只会 

1502
00:56:14,650 --> 00:56:17,830
通过 阅读 来了解如何做到这一点 

1503
00:56:16,180 --> 00:56:19,420
文档， 但在这种情况下 

1504
00:56:17,830 --> 00:56:21,190
注意我在寄存器中正在做什么 

1505
00:56:19,420 --> 00:56:24,690
路线我首先得到 用户的名字 

1506
00:56:21,190 --> 00:56:27,100
和他们的 电子邮件这次和他们的宿舍 

1507
00:56:24,690 --> 00:56:28,630
然后我错误检查他们是否没有

1508
00:56:27,100 --> 00:56:31,270
给我一个 名字或他们的 电子邮件或 

1509
00:56:28,630 --> 00:56:33,820
宿舍渲染失败HTML来告诉他们 

1510
00:56:31,270 --> 00:56:35,860
尽可能多然后继续 做这行 

1511
00:56:33,820 --> 00:56:37,270
的代码 ，这 更 是 一个拗口的 

1512
00:56:35,860 --> 00:56:39,070
而你只会再次知道这一点 

1513
00:56:37,270 --> 00:56:41,710
文档 但事实证明 ，如果 

1514
00:56:39,070 --> 00:56:44,320
您阅读了此SMTP的文档 

1515
00:56:41,710 --> 00:56:46,540
Lib或库你可以使用代码行 

1516
00:56:44,320 --> 00:56:48,850
这样也 可以 按如下 方式告诉 

1517
00:56:46,540 --> 00:56:50,530
库用什么服务器 

1518
00:56:48,850 --> 00:56:52,330
发送电子邮件，如果你发现它 

1519
00:56:50,530 --> 00:56:55,270
阅读您可以使用的电子邮件文档

1520
00:56:52,330 --> 00:56:57,190
SMTP Gmail会自动发送 

1521
00:56:55,270 --> 00:57:00,520
电子邮件不使用Web UI但使用

1522
00:56:57,190 --> 00:57:03,340
代码587是 他们使用 的 TCP端口 

1523
00:57:00,520 --> 00:57:05,740
所以它不是80它不是443它是587 by 

1524
00:57:03,340 --> 00:57:07,810
约定如果您阅读，则启动TLS 

1525
00:57:05,740 --> 00:57:10,030
文档说开启加密 所以 

1526
00:57:07,810 --> 00:57:12,400
电子邮件在您和您之间加密 

1527
00:57:10,030 --> 00:57:14,080
Gmail 随后会继续 前进 ， 以 登录 

1528
00:57:12,400 --> 00:57:15,700
我创建的某些用户名和密码 

1529
00:57:14,080 --> 00:57:18,820
一个叫杰伊哈佛的账号 

1530
00:57:15,700 --> 00:57:20,560
在cs50.net ，我的密码 在我的 ID中 

1531
00:57:18,820 --> 00:57:21,520
环境我将其存储在别处 如此 

1532
00:57:20,560 --> 00:57:23,290
它 在屏幕 上不 可见 

1533
00:57:21,520 --> 00:57:26,230
否则人们可以发送电子邮件 

1534
00:57:23,290 --> 00:57:28,360
Jon然后我继续 打电话给他 

1535
00:57:26,230 --> 00:57:30,100
函数称为发送邮件，如果你

1536
00:57:28,360 --> 00:57:32,440
阅读本文所述的文档 

1537
00:57:30,100 --> 00:57:35,170
您要发送电子邮件的参数

1538
00:57:32,440 --> 00:57:37,960
您想要的电子邮件的内容

1539
00:57:35,170 --> 00:57:39,730
发送和 你 的消息 

1540
00:57:37,960 --> 00:57:42,100
实际上想发送到这里或更确切地说 

1541
00:57:39,730 --> 00:57:44,080
这是从地址到地址 

1542
00:57:42,100 --> 00:57:46,210
以及您想要的实际消息 

1543
00:57:44,080 --> 00:57:48,070
发送之后 你 就去吧 

1544
00:57:46,210 --> 00:57:49,330
渲染模板，并假设成功 我 

1545
00:57:48,070 --> 00:57:50,440
可以像我一样添加更多错误检查

1546
00:57:49,330 --> 00:57:52,450
应该检查是否有任何进展 

1547
00:57:50,440 --> 00:57:54,070
这里错了， 但我保持 简单但是 

1548
00:57:52,450 --> 00:57:56,620
突出显示的这些新行

1549
00:57:54,070 --> 00:57:59,980
实际上发送电子邮件 让我们试试这个 

1550
00:57:56,620 --> 00:58:02,680
让我也进入IMS ，让我 

1551
00:57:59,980 --> 00:58:04,960
继续前进，做烧瓶运行 让我走 

1552
00:58:02,680 --> 00:58:07,599
继续在 这里打开的页面 

1553
00:58:04,960 --> 00:58:10,349
/ 并注意我确实有 一秒钟 

1554
00:58:07,599 --> 00:58:14,280
现在的文字字段所以这将是大卫 

1555
00:58:10,349 --> 00:58:16,329
这将是让我们看看怎么样 

1556
00:58:14,280 --> 00:58:17,980
让我们继续吧，不要注册 

1557
00:58:16,329 --> 00:58:20,260
我自己，因为它不是 我的电子邮件 帐户 

1558
00:58:17,980 --> 00:58:23,349
但我们声称电子邮件的John Harvard是 

1559
00:58:20,260 --> 00:58:26,170
cs50 dotnet J哈佛在那里和他一起 

1560
00:58:23,349 --> 00:58:28,740
生活在说焊接让我们继续前进 

1561
00:58:26,170 --> 00:58:31,329
点击注册 

1562
00:58:28,740 --> 00:58:32,500
好吧，这需要更长的时间 

1563
00:58:31,329 --> 00:58:34,660
时间，但它正在做更多的工作 

1564
00:58:32,500 --> 00:58:39,670
发送电子邮件，现在让我们试着去 

1565
00:58:34,660 --> 00:58:42,309
到gmail.com 打开 我的 

1566
00:58:39,670 --> 00:58:45,760
收件箱，如果我打开它，你就会注册 

1567
00:58:42,309 --> 00:58:47,770
注意事项Js Harvard在cs50.net已发送

1568
00:58:45,760 --> 00:58:49,210
我通过 密送的电子邮件至少保留部分 

1569
00:58:47,770 --> 00:58:51,250
私人和它 的 信息 

1570
00:58:49,210 --> 00:58:53,410
在的身体的主题说

1571
00:58:51,250 --> 00:58:55,390
如果我移动 你 的光标， 请 留言 

1572
00:58:53,410 --> 00:58:57,790
注册，所以我做了一点回来 

1573
00:58:55,390 --> 00:58:59,530
在1997年，但我包括像用户的 

1574
00:58:57,790 --> 00:59:00,849
姓名及其电子邮件地址及其姓名 

1575
00:58:59,530 --> 00:59:01,960
宿舍，也许他们的电话号码或

1576
00:59:00,849 --> 00:59:03,640
什么 和他们的运动 

1577
00:59:01,960 --> 00:59:05,890
感兴趣，但这个想法正是如此

1578
00:59:03,640 --> 00:59:08,050
你 可以发送 任何 信息 

1579
00:59:05,890 --> 00:59:11,460
我希望你现在可以使用代码

1580
00:59:08,050 --> 00:59:26,170
不是用HTML 或单独使用CSS 

1581
00:59:11,460 --> 00:59:28,299
然后在 此耶 确定任何问题

1582
00:59:26,170 --> 00:59:30,369
所有都在JavaScript中 以便暗示 

1583
00:59:28,299 --> 00:59:31,540
到 如果名称等于然后您分配 

1584
00:59:30,369 --> 00:59:35,309
它是一个功能我认为你是 

1585
00:59:31,540 --> 00:59:37,480
现 参考 我们的JavaScript的例子 

1586
00:59:35,309 --> 00:59:39,010
好的，所以我们实际上会回到那个 

1587
00:59:37,480 --> 00:59:40,660
在这里 我们 再介绍一 点点 

1588
00:59:39,010 --> 00:59:42,490
实际给出的一点JavaScript 

1589
00:59:40,660 --> 00:59:46,109
我们更多的功能让人想起 

1590
00:59:42,490 --> 00:59:46,109
这些例子中的其他 问题 

1591
00:59:52,079 --> 00:59:56,499
没错这就是一个很好的 问题，以便 通过 

1592
00:59:54,549 --> 00:59:58,929
我发送的是哪个电子邮件地址

1593
00:59:56,499 --> 01:00:01,329
这是 谁， 它又被送到 了谁 

1594
00:59:58,929 --> 01:00:02,979
从地址这 是地址和 

1595
01:00:01,329 --> 01:00:04,989
这是现在的消息， 只是 因为 

1596
01:00:02,979 --> 01:00:07,349
我只有一个电子邮件 帐户 

1597
01:00:04,989 --> 01:00:09,880
在这种情况下，约翰给自己发了一封邮件 

1598
01:00:07,349 --> 01:00:11,380
理论上如果我在运行 

1599
01:00:09,880 --> 01:00:14,199
新生校内体育项目我 

1600
01:00:11,380 --> 01:00:16,869
可以尝试 这样做 并改变这一点 

1601
01:00:14,199 --> 01:00:18,699
从地址是自己的渔获 

1602
01:00:16,869 --> 01:00:20,679
Gmail实际上有保护

1603
01:00:18,699 --> 01:00:23,589
这样，如果你以J登录 

1604
01:00:20,679 --> 01:00:25,599
哈佛带着他的密码，然后是电子邮件 

1605
01:00:23,589 --> 01:00:26,799
无论你指定什么是从 

1606
01:00:25,599 --> 01:00:28,599
地址实际上是 

1607
01:00:26,799 --> 01:00:31,029
被约翰哈佛重写

1608
01:00:28,599 --> 01:00:32,499
然而，这确实说明 了 潜力 

1609
01:00:31,029 --> 01:00:34,150
如果你不使用电子邮件的不安全感 

1610
01:00:32,499 --> 01:00:35,829
Gmail，但您使用的是第三方服务 

1611
01:00:34,150 --> 01:00:38,709
这不是那么严重的错误 

1612
01:00:35,829 --> 01:00:40,959
检查它非常容易伪造 

1613
01:00:38,709 --> 01:00:42,579
我的 意思是 从一个人到 另一个 人的电子邮件

1614
01:00:40,959 --> 01:00:44,349
有时 查看垃圾邮件文件夹 

1615
01:00:42,579 --> 01:00:46,299
大多数那些寄给你的人 

1616
01:00:44,349 --> 01:00:48,400
垃圾邮件不像电子邮件那样存在 

1617
01:00:46,299 --> 01:00:50,140
地址和/或名称是假的 

1618
01:00:48,400 --> 01:00:52,150
然而他们可能看起来 确实如此 

1619
01:00:50,140 --> 01:00:53,829
作为一个家庭的兄弟姐妹

1620
01:00:52,150 --> 01:00:55,449
成员或 朋友，即使 那些 

1621
01:00:53,829 --> 01:00:57,519
人类没有发送电子邮件和 

1622
01:00:55,449 --> 01:00:59,079
那是因为一些垃圾邮件发送者写的 

1623
01:00:57,519 --> 01:01:01,599
Python或 其他 类似的代码 

1624
01:00:59,079 --> 01:01:03,729
语言， 但已覆盖这些字段 

1625
01:01:01,599 --> 01:01:07,179
但使用的服务器不是Gmail 

1626
01:01:03,729 --> 01:01:09,119
不执行其他这些政策 

1627
01:01:07,179 --> 01:01:12,279
问题

1628
01:01:09,119 --> 01:01:13,809
有趣的事实也是在1995年我学会了如何 

1629
01:01:12,279 --> 01:01:16,239
发送即或如何改变公司 

1630
01:01:13,809 --> 01:01:17,499
在电子邮件上发送地址，结果 发现 

1631
01:01:16,239 --> 01:01:19,420
哈佛有这样的实体， 称为 

1632
01:01:17,499 --> 01:01:23,170
谁不喜欢这样做，这样的广告板

1633
01:01:19,420 --> 01:01:24,729
你 不这样做有时候 

1634
01:01:23,170 --> 01:01:27,309
还有人防守到位这 

1635
01:01:24,729 --> 01:01:29,799
不仅仅是技术， 谢天谢地 

1636
01:01:27,309 --> 01:01:33,339
朋友就是我伪造的电子邮件， 做 

1637
01:01:29,799 --> 01:01:35,019
没有工作， 没关系，你 

1638
01:01:33,339 --> 01:01:37,660
现在有很大的力量不要用它 

1639
01:01:35,019 --> 01:01:39,789
为了邪恶， 所以让我们继续 吧 

1640
01:01:37,660 --> 01:01:43,150
并做另一个例子， 但需要 

1641
01:01:39,789 --> 01:01:44,739
这是进一步加入最后的一步 

1642
01:01:43,150 --> 01:01:47,170
信息的持久性让我们走了

1643
01:01:44,739 --> 01:01:51,309
现在进入IMS 三，开放 

1644
01:01:47,170 --> 01:01:53,859
申请 pi所以回忆 我们可以 

1645
01:01:51,309 --> 01:01:55,059
使用CSV文件逗号分隔值

1646
01:01:53,859 --> 01:01:56,410
文件创造了类似的错觉 

1647
01:01:55,059 --> 01:01:58,420
电子表格， 但现在我们实际上 

1648
01:01:56,410 --> 01:01:59,890
要自己创建代码 

1649
01:01:58,420 --> 01:02:01,599
因为这是 一个更多的参与和 

1650
01:01:59,890 --> 01:02:04,570
我 现在 唯一 真正 改变过的 

1651
01:02:01,599 --> 01:02:06,610
是寄存器方法，以便在 一个 版本 

1652
01:02:04,570 --> 01:02:08,080
这段代码我将它保存在全局列表中 

1653
01:02:06,610 --> 01:02:10,000
只是在 记忆中 并不好，因为 

1654
01:02:08,080 --> 01:02:11,440
它很容易丢掉 版本 

1655
01:02:10,000 --> 01:02:13,000
这 两者的 我们 只是发送电子邮件到 

1656
01:02:11,440 --> 01:02:14,230
监考谁运行 ，这是 一个 程序 

1657
01:02:13,000 --> 01:02:16,630
好一点， 因为至少 他们可以 

1658
01:02:14,230 --> 01:02:18,160
然后保存我们的电子邮件版本 三 

1659
01:02:16,630 --> 01:02:20,680
要使用非常轻量级的数据库

1660
01:02:18,160 --> 01:02:22,930
调用CSV文件将其保存到我的 

1661
01:02:20,680 --> 01:02:24,910
硬盘永久性，所以即使 是 

1662
01:02:22,930 --> 01:02:27,610
服务器停止的数据仍然有 这么 

1663
01:02:24,910 --> 01:02:29,170
在 Python 中 是如何工作的 以及通知 

1664
01:02:27,610 --> 01:02:32,230
我改进了我的注册路线 

1665
01:02:29,170 --> 01:02:33,820
如果用户没有，则 此时如下 

1666
01:02:32,230 --> 01:02:35,380
给我他们的名字或宿舍然后我去 

1667
01:02:33,820 --> 01:02:36,880
领先并 呈现一个非常漂亮的失败 

1668
01:02:35,380 --> 01:02:38,350
和 以前一样的逻辑 但是我 

1669
01:02:36,880 --> 01:02:39,670
没有打扰声明变量

1670
01:02:38,350 --> 01:02:42,370
这次我刚刚调用了这些函数 

1671
01:02:39,670 --> 01:02:43,990
直接在这里是一个新的代码行 

1672
01:02:42,370 --> 01:02:47,230
可能会让你想起 你的一些 

1673
01:02:43,990 --> 01:02:49,660
过去 第16行的 文件 i / o代码我在这里 

1674
01:02:47,230 --> 01:02:52,930
告诉Python 继续并 打开一个 

1675
01:02:49,660 --> 01:02:55,150
文件名为register dot CSV quote 

1676
01:02:52,930 --> 01:02:57,430
我们看到 了我们已经看过的东西 

1677
01:02:55,150 --> 01:03:01,480
w-4读写任何人都记得什么 了 

1678
01:02:57,430 --> 01:03:03,430
是或否意味着附加哪个 

1679
01:03:01,480 --> 01:03:04,840
意味着只需 在文件中 添加一行即可 

1680
01:03:03,430 --> 01:03:06,340
很好， 因为如果已经存在的话 

1681
01:03:04,840 --> 01:03:07,720
学生在新学期注册

1682
01:03:06,340 --> 01:03:09,640
注册我们只想附加到 

1683
01:03:07,720 --> 01:03:11,620
文件底部引用unquote a is 

1684
01:03:09,640 --> 01:03:13,540
这个开放的Python支持Python 

1685
01:03:11,620 --> 01:03:15,430
给我一个参考的功能 

1686
01:03:13,540 --> 01:03:18,040
或者像文件指针一样 

1687
01:03:15,430 --> 01:03:19,660
Python没有指针 

1688
01:03:18,040 --> 01:03:20,890
是新功能，在这里 你也是 

1689
01:03:19,660 --> 01:03:22,960
只知道见过这个 

1690
01:03:20,890 --> 01:03:25,270
示例或 阅读您的文档 

1691
01:03:22,960 --> 01:03:27,910
可以使用将看到的CSV库 

1692
01:03:25,270 --> 01:03:30,490
如上所述， 你可以 要求 

1693
01:03:27,910 --> 01:03:33,040
作家一段代码 写入 

1694
01:03:30,490 --> 01:03:34,690
创建CSV文件和 

1695
01:03:33,040 --> 01:03:37,750
特别是你想写这个 

1696
01:03:34,690 --> 01:03:39,340
将CSV库中的库文件归档

1697
01:03:37,750 --> 01:03:41,560
用一个叫做写行的函数

1698
01:03:39,340 --> 01:03:44,170
如果你把 它 传递给 它， 它会怎么做 

1699
01:03:41,560 --> 01:03:45,970
逗号分隔的字段列表 

1700
01:03:44,170 --> 01:03:48,040
要 代表 你的第一列 的 

1701
01:03:45,970 --> 01:03:50,020
第二列和你的第三列吧

1702
01:03:48,040 --> 01:03:51,370
将为您处理写作 

1703
01:03:50,020 --> 01:03:53,140
不必 进入 文件的杂草 

1704
01:03:51,370 --> 01:03:55,900
我 喜欢你做了几个问题集 

1705
01:03:53,140 --> 01:03:58,030
前注意到一个微妙 你需要 

1706
01:03:55,900 --> 01:03:59,950
有这第二对 括号 

1707
01:03:58,030 --> 01:04:01,810
因为技术上你给的是什么 

1708
01:03:59,950 --> 01:04:03,340
这是我们非常简短地谈论的一个问题

1709
01:04:01,810 --> 01:04:05,410
关于上周就是这样的 

1710
01:04:03,340 --> 01:04:07,900
一个X逗号Y对或纬度逗号 

1711
01:04:05,410 --> 01:04:09,880
经度相同的 想法在这里第一列 

1712
01:04:07,900 --> 01:04:11,980
第二列等等 

1713
01:04:09,880 --> 01:04:14,260
所谓的元组 然后我关闭文件 

1714
01:04:11,980 --> 01:04:16,270
然后我渲染模板，这样做 

1715
01:04:14,260 --> 01:04:18,130
这实际上对我来说很好，让我走了 

1716
01:04:16,270 --> 01:04:21,220
进入我的 文件夹 Frosch 

1717
01:04:18,130 --> 01:04:23,319
这里有三个，注意到 注册的 CSV 

1718
01:04:21,220 --> 01:04:24,940
这一刻是空的， 这是一个CSV文件 

1719
01:04:23,319 --> 01:04:27,759
它 内部 什么也没发生 

1720
01:04:24,940 --> 01:04:29,430
还没有人注册，但让我 

1721
01:04:27,759 --> 01:04:33,069
继续， 然后 进入IMS 

1722
01:04:29,430 --> 01:04:35,259
三次运行烧瓶 让我继续前进 并加载 

1723
01:04:33,069 --> 01:04:38,259
这个，你会看到同样 的 

1724
01:04:35,259 --> 01:04:39,789
形式也是 一个新的链接的通知 ，没有 

1725
01:04:38,259 --> 01:04:42,130
如果我点击它，我已经注册了 

1726
01:04:39,789 --> 01:04:45,339
链接，但如果我进入这里注册 

1727
01:04:42,130 --> 01:04:48,400
马修斯的大卫点击注册 

1728
01:04:45,339 --> 01:04:50,289
现在它声称我 注册了真的让 

1729
01:04:48,400 --> 01:04:52,690
我单击此链接并注意如果 

1730
01:04:50,289 --> 01:04:54,039
它在屏幕上非常小 但是斜线 

1731
01:04:52,690 --> 01:04:56,500
注册是这将导致的 

1732
01:04:54,039 --> 01:04:58,390
我 就是 你 在我面前的地方 

1733
01:04:56,500 --> 01:04:59,980
现在看来 马修斯的大卫是 

1734
01:04:58,390 --> 01:05:01,720
注册让我回去 到窗体 

1735
01:04:59,980 --> 01:05:04,599
本人让我们注册 来自Brian 

1736
01:05:01,720 --> 01:05:05,980
Pennypacker 点击注册，他 也是 

1737
01:05:04,599 --> 01:05:07,720
显然注册了让我们点击它 

1738
01:05:05,980 --> 01:05:09,849
从Pennypacker链接Brian 

1739
01:05:07,720 --> 01:05:12,250
好吧那么这个 数据会 在哪里 出现 

1740
01:05:09,849 --> 01:05:13,750
我回到 IDE 关闭我的 

1741
01:05:12,250 --> 01:05:15,609
注册的CSV文件，因为它

1742
01:05:13,750 --> 01:05:18,640
可能会改变并打开它 

1743
01:05:15,609 --> 01:05:20,890
瞧，这确实促使我重装 

1744
01:05:18,640 --> 01:05:23,349
它有文件和通知带来 

1745
01:05:20,890 --> 01:05:25,359
大卫逗号马修斯布莱恩逗号

1746
01:05:23,349 --> 01:05:27,099
Pennypacker 所有 这些行都是 

1747
01:05:25,359 --> 01:05:28,960
写给我，所以 现在我实际上 

1748
01:05:27,099 --> 01:05:30,640
有一个数据库 ，即使它是 

1749
01:05:28,960 --> 01:05:32,559
你知道什么 是一个简单的数据库 

1750
01:05:30,640 --> 01:05:34,470
我可以让 我继续 并右键单击 

1751
01:05:32,559 --> 01:05:37,119
或者在IDE中按住Control键单击它 

1752
01:05:34,470 --> 01:05:39,279
下载到我的下载 文件夹 ， 

1753
01:05:37,119 --> 01:05:41,500
如果我真的打开 这个东西，如果我 

1754
01:05:39,279 --> 01:05:43,119
已安装 Excel 或Apple号码 

1755
01:05:41,500 --> 01:05:47,009
这是我第一次使用

1756
01:05:43,119 --> 01:05:50,529
它让我继续 打开 那个文件 

1757
01:05:47,009 --> 01:05:52,990
在这里打开注册的CSV和 wallah 

1758
01:05:50,529 --> 01:05:54,700
现在是一个文件，数字是格式化 

1759
01:05:52,990 --> 01:05:56,589
它以实物的 方式 时髦 ，但它 是 

1760
01:05:54,700 --> 01:05:58,299
显示那些你的行和列

1761
01:05:56,589 --> 01:06:00,700
我们可以更熟悉Excel 

1762
01:05:58,299 --> 01:06:03,670
这样做也让我下 到这里让我 

1763
01:06:00,700 --> 01:06:05,200
进入 我的下载文件夹ctrl单击 

1764
01:06:03,670 --> 01:06:07,450
或者右键单击此处 ，这次 打开 

1765
01:06:05,200 --> 01:06:09,309
它与Microsoft Excel ，如果你 

1766
01:06:07,450 --> 01:06:11,950
在看到Excel之前我们可能会 看到一个 

1767
01:06:09,309 --> 01:06:14,470
非常相似的UI， 因为任何时候Excel或 

1768
01:06:11,950 --> 01:06:17,410
数字好我第一次使用Excel这样 

1769
01:06:14,470 --> 01:06:19,900
这也会打开一些行 

1770
01:06:17,410 --> 01:06:21,250
列以及CSV文件只是 

1771
01:06:19,900 --> 01:06:23,019
非常轻量级的电子表格，但是什么

1772
01:06:21,250 --> 01:06:24,849
关于他们的酷感是 你可以 创造的 

1773
01:06:23,019 --> 01:06:27,039
他们这么容易你只需要放 

1774
01:06:24,849 --> 01:06:29,619
那里的逗号现在可以放在一边了

1775
01:06:27,039 --> 01:06:31,480
设计 可能 的 用户输入 

1776
01:06:29,619 --> 01:06:34,090
可能会破坏CSV 

1777
01:06:31,480 --> 01:06:35,980
提出一个人类类型的东西

1778
01:06:34,090 --> 01:06:39,160
可能 会破坏 您自己的CSV 

1779
01:06:35,980 --> 01:06:41,560
如果像大卫一样，请 使用逗号 

1780
01:06:39,160 --> 01:06:45,190
马林逗号小 。或类似的东西 

1781
01:06:41,560 --> 01:06:46,990
或任何带有奇怪标点符号的东西 

1782
01:06:45,190 --> 01:06:48,970
就是为什么你使用库，CSV 

1783
01:06:46,990 --> 01:06:50,770
这段代码中的库是 

1784
01:06:48,970 --> 01:06:53,680
进口在这个最高层

1785
01:06:50,770 --> 01:06:55,690
实际上 是 代码的第3版

1786
01:06:53,680 --> 01:06:57,880
为我们处理所有这些复杂性 

1787
01:06:55,690 --> 01:07:00,010
当图书馆遇到大卫 马林时 

1788
01:06:57,880 --> 01:07:01,540
逗号jr。如果那是用户输入的话 

1789
01:07:00,010 --> 01:07:03,790
然后会另外加上引号 

1790
01:07:01,540 --> 01:07:06,250
我的全名从而确保了这一点 

1791
01:07:03,790 --> 01:07:07,900
我的逗号是引号内而不是 

1792
01:07:06,250 --> 01:07:09,820
因此与特殊混淆

1793
01:07:07,900 --> 01:07:11,890
逗号，界定其他人的开始 

1794
01:07:09,820 --> 01:07:13,330
这样的列再次这就是你不这样做的原因 

1795
01:07:11,890 --> 01:07:15,280
由于角落的情况重新发明轮子 

1796
01:07:13,330 --> 01:07:17,500
像那样出现了 什么关于斜线 

1797
01:07:15,280 --> 01:07:19,240
注册的是这个列表 

1798
01:07:17,500 --> 01:07:21,280
生成一个无序列表让我们看看

1799
01:07:19,240 --> 01:07:23,710
如何，如果我向下滚动到这 一点，工作 

1800
01:07:21,280 --> 01:07:25,540
代码注意到它不仅仅是 一个简单的 

1801
01:07:23,710 --> 01:07:27,310
抓住全局变量的问题 

1802
01:07:25,540 --> 01:07:29,440
因为没有全局变量

1803
01:07:27,310 --> 01:07:32,230
现在我不得不从中读到它 

1804
01:07:29,440 --> 01:07:34,930
CSV文件 所以这里有3行新代码 

1805
01:07:32,230 --> 01:07:37,660
如下工作我将继续前进 

1806
01:07:34,930 --> 01:07:40,510
并打开此文件 注册点CSV 

1807
01:07:37,660 --> 01:07:43,330
这次读取模式不会 附加 我要去 

1808
01:07:40,510 --> 01:07:45,100
现在继续说，嘿Python 使用 

1809
01:07:43,330 --> 01:07:47,980
与之相反的 CSV 阅读器 

1810
01:07:45,100 --> 01:07:49,840
编写该文件，然后 嘿Python 

1811
01:07:47,980 --> 01:07:51,730
继续把整个读者变成 

1812
01:07:49,840 --> 01:07:53,230
列表， 所以你真的不 知道这一点 

1813
01:07:51,730 --> 01:07:54,460
从阅读文档 转向 

1814
01:07:53,230 --> 01:07:56,320
如果你这是推荐 

1815
01:07:54,460 --> 01:07:58,030
我想带一个读者， 然后阅读 

1816
01:07:56,320 --> 01:07:59,590
整个事情到内存中一次 和 

1817
01:07:58,030 --> 01:08:01,119
它转换成一个Python列表 你 

1818
01:07:59,590 --> 01:08:03,190
字面上只是将它传递给这个列表

1819
01:08:01,119 --> 01:08:05,350
功能，给我一个列表，我 会 

1820
01:08:03,190 --> 01:08:08,050
给学生打电话然后我可以做同样的事 

1821
01:08:05,350 --> 01:08:09,609
代码和以前一样好的措施我应该 

1822
01:08:08,050 --> 01:08:12,760
可能做什么我做了最后的 时间，这 

1823
01:08:09,609 --> 01:08:14,619
是文件点关闭以关闭文件为 

1824
01:08:12,760 --> 01:08:16,390
好吧， 只是为了 确保 它关闭了 

1825
01:08:14,619 --> 01:08:17,920
下次它打开但 实际上 我可以 

1826
01:08:16,390 --> 01:08:20,200
简化这一点，你会看到更多 

1827
01:08:17,920 --> 01:08:22,380
这些 例子在 网上 实际上更多 

1828
01:08:20,200 --> 01:08:25,299
在 Python常规不要这样做 

1829
01:08:22,380 --> 01:08:27,279
而是将代码更改为 

1830
01:08:25,299 --> 01:08:29,770
以下是不打扰关闭和 

1831
01:08:27,279 --> 01:08:32,440
明确地改为使用 关键字 

1832
01:08:29,770 --> 01:08:34,569
调用宽度 来代替放置 变量 

1833
01:08:32,440 --> 01:08:36,100
在那里命名并缩进 一切 

1834
01:08:34,569 --> 01:08:38,529
在我们的下面并不重要 

1835
01:08:36,100 --> 01:08:39,220
目的是你做第一个 

1836
01:08:38,529 --> 01:08:40,960
是对的

1837
01:08:39,220 --> 01:08:42,759
第二个是正确的，这只是 

1838
01:08:40,960 --> 01:08:44,620
更常规，只因为它 

1839
01:08:42,759 --> 01:08:45,369
处理文件 的关闭 

1840
01:08:44,620 --> 01:08:47,259
所以，如果你看到

1841
01:08:45,369 --> 01:08:49,690
在线 那就是 那里 发生的一切 

1842
01:08:47,259 --> 01:08:52,690
但 它 就像开放和开放 

1843
01:08:49,690 --> 01:08:55,449
f 关闭或在这种情况下打开 和关闭 

1844
01:08:52,690 --> 01:08:59,739
就像我刚才有任何疑问 

1845
01:08:55,449 --> 01:09:01,869
那我怎么处理重复好 

1846
01:08:59,739 --> 01:09:03,549
问题所以处理重复 

1847
01:09:01,869 --> 01:09:05,469
在这里和马修斯的大卫 

1848
01:09:03,549 --> 01:09:07,359
可以一次又一次注册但是 

1849
01:09:05,469 --> 01:09:09,580
从逻辑上讲，我可以做些什么 

1850
01:09:07,359 --> 01:09:11,770
可能属于 我的注册 

1851
01:09:09,580 --> 01:09:13,690
路线我可能想做更多的 错误 

1852
01:09:11,770 --> 01:09:16,299
检查不仅仅是这两行 

1853
01:09:13,690 --> 01:09:18,069
因为我可能想要做的事情 

1854
01:09:16,299 --> 01:09:21,069
看看马修斯的大卫是否已经 

1855
01:09:18,069 --> 01:09:24,190
注册是打开 CSV文件迭代 

1856
01:09:21,069 --> 01:09:27,069
在 其行寻找大卫和 

1857
01:09:24,190 --> 01:09:29,139
马修斯在同一条线上然后出错 

1858
01:09:27,069 --> 01:09:30,819
如果他或她向用户显示失败 

1859
01:09:29,139 --> 01:09:32,980
正试图 第二次注册 

1860
01:09:30,819 --> 01:09:34,299
我用这段代码并没有轻松搞定 

1861
01:09:32,980 --> 01:09:36,730
坦率地说，这将会变得如此简单 

1862
01:09:34,299 --> 01:09:38,440
下周续集续集这个 

1863
01:09:36,730 --> 01:09:40,449
数据库语言将使其变得简单 

1864
01:09:38,440 --> 01:09:42,400
搜索已经存在的数据 

1865
01:09:40,449 --> 01:09:44,290
保存的CSV文件不容易 

1866
01:09:42,400 --> 01:09:46,719
它是可行的，但你必须写 

1867
01:09:44,290 --> 01:09:50,040
更多行的代码 ，以便更上 ，要 

1868
01:09:46,719 --> 01:09:50,040
来 问其他问题 

1869
01:09:50,730 --> 01:09:57,849
好吧，让我们跳到 一个决赛 

1870
01:09:54,190 --> 01:10:00,400
例如frosh我 六岁， 我们会做 

1871
01:09:57,849 --> 01:10:03,369
这里对我们来说更多的东西

1872
01:10:00,400 --> 01:10:06,190
如果我继续前进， 我会六点钟通知 

1873
01:10:03,369 --> 01:10:08,170
如果我做烧瓶运行并回去 

1874
01:10:06,190 --> 01:10:11,080
这里的网站并 重新加载屏幕 

1875
01:10:08,170 --> 01:10:13,360
然后我继续给你我的名字但是 

1876
01:10:11,080 --> 01:10:14,139
不，我不会给你我的宿舍 

1877
01:10:13,360 --> 01:10:16,570
有这个功能

1878
01:10:14,139 --> 01:10:18,790
它 再次 丑陋 ， 但我们在哪里看到 

1879
01:10:16,570 --> 01:10:23,980
用户这种功能 

1880
01:10:18,790 --> 01:10:26,260
不合作或 我是 怎么做的 

1881
01:10:23,980 --> 01:10:28,719
实现这一点显然 是的 

1882
01:10:26,260 --> 01:10:31,150
JavaScript正确，所以事实证明 

1883
01:10:28,719 --> 01:10:33,130
使用Python，您 显然 可以 验证 

1884
01:10:31,150 --> 01:10:34,869
用户 只需输入服务器 

1885
01:10:33,130 --> 01:10:36,520
检查请求 ARB中的内容或 

1886
01:10:34,869 --> 01:10:38,800
请求 点形式，然后大喊大叫 

1887
01:10:36,520 --> 01:10:40,840
用户成功或失败， 但相应 

1888
01:10:38,800 --> 01:10:42,460
你也可以诚实地使用JavaScript 

1889
01:10:40,840 --> 01:10:43,780
两周前我们这样做了， 所以我们就这样做了 

1890
01:10:42,460 --> 01:10:46,449
似乎正在解决同样的问题 

1891
01:10:43,780 --> 01:10:48,159
你再怎么想这个呢？ 

1892
01:10:46,449 --> 01:10:51,070
我应该检查 用户名 

1893
01:10:48,159 --> 01:10:52,630
我应该是JavaScript中的 宿舍 

1894
01:10:51,070 --> 01:10:57,429
检查 用户在 宿舍上 名 

1895
01:10:52,630 --> 01:10:59,610
服务器， 我的意思是混合 消息 

1896
01:10:57,429 --> 01:10:59,610
现在

1897
01:11:00,520 --> 01:11:04,489
什么是最快的，这是一个非常好的

1898
01:11:02,510 --> 01:11:05,659
启发式使用最快和最快的

1899
01:11:04,489 --> 01:11:07,190
你知道我们可以让它变得更漂亮 

1900
01:11:05,659 --> 01:11:08,900
使用bootstrap或 一些库给 

1901
01:11:07,190 --> 01:11:11,059
你喜欢彩色的盒子或 读错误 

1902
01:11:08,900 --> 01:11:14,260
文字或类似的东西， 所以这 

1903
01:11:11,059 --> 01:11:16,309
可能是更快的Python或JavaScript 

1904
01:11:14,260 --> 01:11:24,679
JavaScript为什么JavaScript只是一个 

1905
01:11:16,309 --> 01:11:26,239
更好的语言 sagen，这就是原因 

1906
01:11:24,679 --> 01:11:27,530
是的他们没有必要进入 

1907
01:11:26,239 --> 01:11:29,239
宗教辩论，语言是 

1908
01:11:27,530 --> 01:11:30,710
更好或更快， 但他们在哪里 

1909
01:11:29,239 --> 01:11:32,150
跑步当然很重要 

1910
01:11:30,710 --> 01:11:34,610
javascript正在运行召回 

1911
01:11:32,150 --> 01:11:36,260
在浏览器中定义它作为 

1912
01:11:34,610 --> 01:11:38,540
JavaScript代码到浏览器里面 

1913
01:11:36,260 --> 01:11:39,920
然后通过执行Sat客户端python 

1914
01:11:38,540 --> 01:11:41,869
今天的定义是做一切 

1915
01:11:39,920 --> 01:11:43,579
服务器端和浏览器确实 

1916
01:11:41,869 --> 01:11:46,190
甚至不知道python是否涉及 

1917
01:11:43,579 --> 01:11:48,920
因为它得到的只是HTML代码 

1918
01:11:46,190 --> 01:11:51,110
导致 如此 好，这似乎是一个 

1919
01:11:48,920 --> 01:11:53,150
参数不这样做所有的新作 

1920
01:11:51,110 --> 01:11:54,889
我们今天做了，如果没有命名，如果没有 

1921
01:11:53,150 --> 01:11:57,230
宿舍和所有这一切， 只是使用 

1922
01:11:54,889 --> 01:11:59,270
JavaScript，但问题是， 如果 

1923
01:11:57,230 --> 01:12:01,699
你得到一点点草率 或一点点 

1924
01:11:59,270 --> 01:12:03,710
聪明，只实现你的错误 

1925
01:12:01,699 --> 01:12:05,659
正如你所说，检查客户端 

1926
01:12:03,710 --> 01:12:06,860
一旦我做到这一点，它就会更快，更坦率 

1927
01:12:05,659 --> 01:12:08,829
更漂亮它 会变得更好 

1928
01:12:06,860 --> 01:12:11,449
互动，更加无缝 

1929
01:12:08,829 --> 01:12:14,210
问题是你不能也不应该 

1930
01:12:11,449 --> 01:12:16,130
信任用户认为我是恶意的 

1931
01:12:14,210 --> 01:12:18,260
用户和我只想 注入一些 

1932
01:12:16,130 --> 01:12:20,150
虚假数据进入 您的网站或我想要的 

1933
01:12:18,260 --> 01:12:22,340
给你发垃圾邮件或订阅一千

1934
01:12:20,150 --> 01:12:24,230
没有实际 存在的 新生 或 

1935
01:12:22,340 --> 01:12:25,790
通常就像创造问题一样

1936
01:12:24,230 --> 01:12:27,500
你 很好，你可能会想 得 那么好 

1937
01:12:25,790 --> 01:12:29,389
好吧，我有一些防御措施 

1938
01:12:27,500 --> 01:12:31,250
JavaScript代码， 它就是这个 对手 

1939
01:12:29,389 --> 01:12:33,349
我会得到非常快速的反馈 

1940
01:12:31,250 --> 01:12:35,000
非常好的反馈，他们没有 

1941
01:12:33,349 --> 01:12:37,099
提供了这些领域但是 

1942
01:12:35,000 --> 01:12:39,170
老实说，你不能相信任何事情

1943
01:12:37,099 --> 01:12:41,300
如果我打开，来自人类

1944
01:12:39,170 --> 01:12:43,579
Chrome的开发者工具和我去了 

1945
01:12:41,300 --> 01:12:47,989
这是点到点点菜单 

1946
01:12:43,579 --> 01:12:50,809
我去设置，然后我去这里 

1947
01:12:47,989 --> 01:12:52,909
这就是OOP所需要的 

1948
01:12:50,809 --> 01:12:54,260
像他或他那样禁用你所有的辛勤工作

1949
01:12:52,909 --> 01:12:55,520
她可以打开他们的浏览器 

1950
01:12:54,260 --> 01:12:58,040
Chrome或其他内容 

1951
01:12:55,520 --> 01:13:00,260
当我关闭时，关闭JavaScript 

1952
01:12:58,040 --> 01:13:02,480
实际上提交这个表格就好了 

1953
01:13:00,260 --> 01:13:04,400
不要点击提交检查否 

1954
01:13:02,480 --> 01:13:07,250
处理所有这些都是禁用的，所以如果 我 

1955
01:13:04,400 --> 01:13:09,320
继续， 然后点击注册 我 至少 

1956
01:13:07,250 --> 01:13:11,710
仍然在这个版本的frosh IMS 

1957
01:13:09,320 --> 01:13:13,000
服务器端检查也是如此 

1958
01:13:11,710 --> 01:13:15,340
我觉得有点沮丧，但确实如此 

1959
01:13:13,000 --> 01:13:16,930
一种现实 的 是完全 没有 问题 

1960
01:13:15,340 --> 01:13:18,370
使用 javascript代码 并使用 

1961
01:13:16,930 --> 01:13:20,320
客户端代码给用户一个

1962
01:13:18,370 --> 01:13:23,080
更好的体验 又称UX 

1963
01:13:20,320 --> 01:13:25,150
用户体验， 但 你不能削减 

1964
01:13:23,080 --> 01:13:27,489
角落而 不是同一种 

1965
01:13:25,150 --> 01:13:29,500
逻辑服务器端， 因为你需要 

1966
01:13:27,489 --> 01:13:30,910
防止这种虚假的 数据 

1967
01:13:29,500 --> 01:13:33,790
最终会在你的数据库中结束 

1968
01:13:30,910 --> 01:13:39,969
是会出问题永远不 信任 

1969
01:13:33,790 --> 01:13:45,010
用户可以做任何问题 

1970
01:13:39,969 --> 01:13:46,840
与CSS相同，不能单独使用CSS 

1971
01:13:45,010 --> 01:13:49,750
使用CSS 来制作错误消息 

1972
01:13:46,840 --> 01:13:52,300
更漂亮但不够逻辑 

1973
01:13:49,750 --> 01:13:53,650
仅使用CSS而实际上只是给予 

1974
01:13:52,300 --> 01:13:55,390
你现在感觉如何 制作 

1975
01:13:53,650 --> 01:13:57,850
事情更漂亮，因为我一直在 暗指 

1976
01:13:55,390 --> 01:13:59,770
比我的设计技能更好

1977
01:13:57,850 --> 01:14:01,450
如果我们去bootstrap这里显示

1978
01:13:59,770 --> 01:14:03,489
非常受欢迎的免费和开源 

1979
01:14:01,450 --> 01:14:05,320
CSS的库实际上有一些 

1980
01:14:03,489 --> 01:14:06,969
互动功能，如果我去 

1981
01:14:05,320 --> 01:14:09,160
在文档中的组件下

1982
01:14:06,969 --> 01:14:12,219
我向下滚动，然后 去表格 

1983
01:14:09,160 --> 01:14:14,170
你会看到这些形式的一个通知 

1984
01:14:12,219 --> 01:14:15,730
已经比那些漂亮了

1985
01:14:14,170 --> 01:14:17,650
我一直在做对，就像黑色一样 

1986
01:14:15,730 --> 01:14:19,719
文字和灰色 文字和小文字吧 

1987
01:14:17,650 --> 01:14:20,980
只是看起来更好，更干净但是 

1988
01:14:19,719 --> 01:14:22,360
这样做比较容易

1989
01:14:20,980 --> 01:14:23,950
确实对于 你将要遇到的下一个问题 

1990
01:14:22,360 --> 01:14:26,469
欢迎复制和粘贴一些 

1991
01:14:23,950 --> 01:14:29,380
HTML中的示例代码使用bootstrap 

1992
01:14:26,469 --> 01:14:30,850
CSS 只是 为了让你的表格更漂亮 但是 

1993
01:14:29,380 --> 01:14:32,860
如果我去的话，它真的能做什么

1994
01:14:30,850 --> 01:14:34,870
这里的子菜单注意到 了 

1995
01:14:32,860 --> 01:14:36,670
这个验证部分在bootstrap 中 

1996
01:14:34,870 --> 01:14:38,410
其他图书馆也有 这个， 你也会 

1997
01:14:36,670 --> 01:14:40,000
想要阅读实际 文档 

1998
01:14:38,410 --> 01:14:41,860
但如果我只是向下滚动 一段时间 

1999
01:14:40,000 --> 01:14:43,060
这里是在引导 它 的表格样本

2000
01:14:41,860 --> 01:14:45,550
已经看起来有点漂亮了 

2001
01:14:43,060 --> 01:14:47,770
我用原始HTML制作的任何东西但是 

2002
01:14:45,550 --> 01:14:50,500
请注意，如果我不合作， 你可以做 

2003
01:14:47,770 --> 01:14:52,750
非常酷的形式验证 

2004
01:14:50,500 --> 01:14:55,270
绿色和红色 文本，如果用户做或 

2005
01:14:52,750 --> 01:14:57,460
通过 使用CSS的混合 不合作 

2006
01:14:55,270 --> 01:14:58,960
但是有一些JavaScript 代码 等等 

2007
01:14:57,460 --> 01:15:00,790
什么bootstrap为你做的是它

2008
01:14:58,960 --> 01:15:02,469
实际上自动化了一些过程 

2009
01:15:00,790 --> 01:15:04,420
我们看到 两个 JavaScript代码 

2010
01:15:02,469 --> 01:15:05,770
几个星期前，只是现在使用，但它 

2011
01:15:04,420 --> 01:15:07,030
不只是弹出一条消息 

2012
01:15:05,770 --> 01:15:08,560
用户实际上给了他们更多 

2013
01:15:07,030 --> 01:15:10,510
立即反馈，几乎任何

2014
01:15:08,560 --> 01:15:12,640
这些天你访问的热门网站

2015
01:15:10,510 --> 01:15:14,290
给你 这个更直接的近端 

2016
01:15:12,640 --> 01:15:16,960
输入一般你没有看到一些 

2017
01:15:14,290 --> 01:15:21,550
简单的错误信息甚至弹出

2018
01:15:16,960 --> 01:15:24,139
虽然这更容易 做任何问题 

2019
01:15:21,550 --> 01:15:26,989
没事所以哪里 是逻辑来 

2020
01:15:24,139 --> 01:15:29,810
从这么让我去到比如 我的 

2021
01:15:26,989 --> 01:15:31,820
模板文件现在为frosh中的表单

2022
01:15:29,810 --> 01:15:33,860
我是最后一个六岁 

2023
01:15:31,820 --> 01:15:36,080
例子，你会注意到 我做到了 

2024
01:15:33,860 --> 01:15:37,850
如果我滚动浏览此文件 

2025
01:15:36,080 --> 01:15:40,159
你会看到相同的HTML，因为我们已经 

2026
01:15:37,850 --> 01:15:42,139
使用一段 时间 但注意到了 

2027
01:15:40,159 --> 01:15:45,260
我画了一些页面的底部 

2028
01:15:42,139 --> 01:15:48,380
两个星期 后我们的灵感

2029
01:15:45,260 --> 01:15:50,540
看看HTML，CSS和JavaScript 

2030
01:15:48,380 --> 01:15:52,639
就像快速 复习一样 注意如何 

2031
01:15:50,540 --> 01:15:55,429
这是在运行 这 行代码说 

2032
01:15:52,639 --> 01:15:56,960
在JavaScript中使用检查文档 

2033
01:15:55,429 --> 01:15:59,000
允许您选择的查询选择器 

2034
01:15:56,960 --> 01:16:01,489
网页 中的任何内容 

2035
01:15:59,000 --> 01:16:02,000
寻找表格时的表格 

2036
01:16:01,489 --> 01:16:05,840
提交

2037
01:16:02,000 --> 01:16:09,050
如果调用以下匿名函数 

2038
01:16:05,840 --> 01:16:11,360
文档查询选择器找到一个

2039
01:16:09,050 --> 01:16:13,100
输入没有值 和我 

2040
01:16:11,360 --> 01:16:15,170
说不是因为 感叹号 

2041
01:16:13,100 --> 01:16:16,610
在这里然后用这个你对用户大喊大叫 

2042
01:16:15,170 --> 01:16:20,060
必须提供您的姓名并返回false 

2043
01:16:16,610 --> 01:16:22,909
否则，如果用户没有提供值 

2044
01:16:20,060 --> 01:16:24,260
对于选择菜单又称宿舍去 

2045
01:16:22,909 --> 01:16:26,570
提前并提醒他们必须 

2046
01:16:24,260 --> 01:16:28,369
提供宿舍否则 返回真实 

2047
01:16:26,570 --> 01:16:30,650
并且要清楚 并 从中回忆起来 

2048
01:16:28,369 --> 01:16:36,469
两个星期前为什么我要归还假 

2049
01:16:30,650 --> 01:16:40,670
什么是效果标签逻辑上是 

2050
01:16:36,469 --> 01:16:45,560
那又 是什么哦我听到了耳语 

2051
01:16:40,670 --> 01:16:46,730
是啊不，是的，它阻止了 

2052
01:16:45,560 --> 01:16:48,290
提交表格默认 

2053
01:16:46,730 --> 01:16:50,030
形式的 行为 是它想要的 

2054
01:16:48,290 --> 01:16:52,010
提交，这就是为什么他们存在， 但如果 

2055
01:16:50,030 --> 01:16:53,659
你会 在JavaScript中返回false 

2056
01:16:52,010 --> 01:16:55,820
短路， 并防止这种情况发生 

2057
01:16:53,659 --> 01:16:58,010
默认行为， 从而停止 

2058
01:16:55,820 --> 01:16:59,480
用户提交 表格完全如此 

2059
01:16:58,010 --> 01:17:01,369
我们现在退一步因为 

2060
01:16:59,480 --> 01:17:04,159
现在已经有很多了 

2061
01:17:01,369 --> 01:17:06,080
在这第六个单独的这个文件中 

2062
01:17:04,159 --> 01:17:07,760
最后的例子通知我们 

2063
01:17:06,080 --> 01:17:09,560
应用点pi是条目 

2064
01:17:07,760 --> 01:17:12,260
指出所谓的控制器 

2065
01:17:09,560 --> 01:17:15,170
Web应用程序它 有一个路由 

2066
01:17:12,260 --> 01:17:18,020
非常简单 的斜线 看起来像这样 

2067
01:17:15,170 --> 01:17:20,690
当用户获得斜线此模板时 

2068
01:17:18,020 --> 01:17:23,960
只返回该索引中的内容 

2069
01:17:20,690 --> 01:17:27,739
HTML模板很好，它包含部分 

2070
01:17:23,960 --> 01:17:29,810
它包含HTML的 HTML文件

2071
01:17:27,739 --> 01:17:31,489
不包含HTML的doctype 

2072
01:17:29,810 --> 01:17:33,679
标记头部标记正文标记标题

2073
01:17:31,489 --> 01:17:34,940
标签和所有 它只包含 

2074
01:17:33,679 --> 01:17:37,790
应该去的东西

2075
01:17:34,940 --> 01:17:40,310
因为 这个 文件在body标签里面

2076
01:17:37,790 --> 01:17:42,320
使用位 金贾 中的 哪一个的 

2077
01:17:40,310 --> 01:17:43,580
烧瓶使用你的模板语言

2078
01:17:42,320 --> 01:17:47,480
可以把它想象成烧瓶 

2079
01:17:43,580 --> 01:17:50,630
很好，它在这里使用了一些HTML，但它 

2080
01:17:47,480 --> 01:17:53,780
也在文件底部 使用 

2081
01:17:50,630 --> 01:17:55,160
JavaScript 和因此，正如之前 的时候 

2082
01:17:53,780 --> 01:17:57,350
我们查看了页面的来源 

2083
01:17:55,160 --> 01:18:00,980
我 该怎么 在浏览器中看到 

2084
01:17:57,350 --> 01:18:03,320
这个表单页面没有Jinja没有python 

2085
01:18:00,980 --> 01:18:06,440
什么都没有与烧瓶 完全相关 

2086
01:18:03,320 --> 01:18:08,870
形成的HTML页面，现在也包含 

2087
01:18:06,440 --> 01:18:10,700
一些客户端代码 ，所以我 

2088
01:18:08,870 --> 01:18:12,110
现在有几种混合物

2089
01:18:10,700 --> 01:18:15,910
不同的语言，但每一种 

2090
01:18:12,110 --> 01:18:15,910
解决了一个非常明显的问题

2091
01:18:29,290 --> 01:18:35,810
是非常好的观察，所以一对夫妇 

2092
01:18:34,160 --> 01:18:37,490
几个星期前我真的鼓吹了 

2093
01:18:35,810 --> 01:18:39,110
因此分离关注点 

2094
01:18:37,490 --> 01:18:41,150
分离文件， 这就是我们的原因 

2095
01:18:39,110 --> 01:18:43,490
我们也推出了一个dot CSS文件 

2096
01:18:41,150 --> 01:18:45,650
简要地展示了点J s的例子

2097
01:18:43,490 --> 01:18:47,930
文件简短的回答是你的 

2098
01:18:45,650 --> 01:18:49,970
应用程序获得更复杂的生活 

2099
01:18:47,930 --> 01:18:51,200
开始变得凌乱，团队和我

2100
01:18:49,970 --> 01:18:52,460
实际上谈到 这个 较早 

2101
01:18:51,200 --> 01:18:54,920
至于如何介绍其中 的一些 

2102
01:18:52,460 --> 01:18:57,860
例子， 因为你所看到的 

2103
01:18:54,920 --> 01:19:00,260
我在这里的设计决定是如此关注 

2104
01:18:57,860 --> 01:19:02,120
这里的紧张情况如下 

2105
01:19:00,260 --> 01:19:04,330
不一定是 最好 的 做法 

2106
01:19:02,120 --> 01:19:07,250
只需拥有您的逻辑JavaScript代码 

2107
01:19:04,330 --> 01:19:08,600
与你的HTML正确混合它 使 

2108
01:19:07,250 --> 01:19:09,860
与 某人 合作更难

2109
01:19:08,600 --> 01:19:11,240
否则，如果你们其中一个人真的擅长 

2110
01:19:09,860 --> 01:19:12,980
设计并希望 处理HTML 和 

2111
01:19:11,240 --> 01:19:14,750
另一个人真正想做的 CSS 

2112
01:19:12,980 --> 01:19:16,070
JavaScript代码很难 做到 

2113
01:19:14,750 --> 01:19:18,320
当他们都 在同一个文件中时 

2114
01:19:16,070 --> 01:19:20,270
所以我们可以把它考虑 在内 

2115
01:19:18,320 --> 01:19:24,650
改变这条线只是为了超级 明确 

2116
01:19:20,270 --> 01:19:26,480
成为这样而不是把我的实际 

2117
01:19:24,650 --> 01:19:28,310
我可以做一些 文件中的代码

2118
01:19:26,480 --> 01:19:32,930
像 这样， 这个来源应该是 

2119
01:19:28,310 --> 01:19:34,580
形成了j / s，就是它和它 

2120
01:19:32,930 --> 01:19:36,440
那么我有一个单独的文件可能是我的 

2121
01:19:34,580 --> 01:19:37,760
同事的工作如下，但在 

2122
01:19:36,440 --> 01:19:41,000
有些人指出了 经历 的想法 

2123
01:19:37,760 --> 01:19:43,670
我的头是它是只 喜欢 十行 

2124
01:19:41,000 --> 01:19:45,680
代码 ，我只需要创建第二个 

2125
01:19:43,670 --> 01:19:47,240
现在文件在第二个文件是要 

2126
01:19:45,680 --> 01:19:49,490
可能在一个不同的文件夹是我的 

2127
01:19:47,240 --> 01:19:51,950
模板，你知道这感觉就像这样 

2128
01:19:49,490 --> 01:19:54,440
刚刚过度设计 解决方案 

2129
01:19:51,950 --> 01:19:56,630
然而问题是一旦它是20行a 

2130
01:19:54,440 --> 01:19:57,980
百线现在好了现在好了 

2131
01:19:56,630 --> 01:19:59,540
感觉很乱，它在某处

2132
01:19:57,980 --> 01:20:01,340
这个拐点就在这里 

2133
01:19:59,540 --> 01:20:02,870
合理的人会不同意我 

2134
01:20:01,340 --> 01:20:04,130
可能会争论一种你可能会 争论的方式 

2135
01:20:02,870 --> 01:20:07,370
换句话说，老实说，我们两个都是 

2136
01:20:04,130 --> 01:20:09,860
可能是正确的，所以这只是说 

2137
01:20:07,370 --> 01:20:11,420
到 Web的发展随着时间的推移和 

2138
01:20:09,860 --> 01:20:12,920
现在有花哨或框架，如果

2139
01:20:11,420 --> 01:20:14,870
我们事先 将问题与问题联系起来 

2140
01:20:12,920 --> 01:20:17,120
关于cs50之后的机会

2141
01:20:14,870 --> 01:20:17,780
这个看起来更 接近的课程 

2142
01:20:17,120 --> 01:20:19,520
网络编程

2143
01:20:17,780 --> 01:20:21,830
甚至有更高档的框架

2144
01:20:19,520 --> 01:20:23,300
现在然后烧瓶，然后引导

2145
01:20:21,830 --> 01:20:25,610
试图解决这个问题 

2146
01:20:23,300 --> 01:20:27,230
反应 是最受欢迎的 反应 之一 

2147
01:20:25,610 --> 01:20:28,580
由Facebook开发的现在开源 

2148
01:20:27,230 --> 01:20:30,410
并被周围的 许多人 使用 

2149
01:20:28,580 --> 01:20:32,660
真正 解决这个问题的 世界 

2150
01:20:30,410 --> 01:20:34,490
它允许您分离HTML 

2151
01:20:32,660 --> 01:20:36,980
来自您的JavaScript中的 CSS 

2152
01:20:34,490 --> 01:20:38,390
文件的不同部分但仍在 

2153
01:20:36,980 --> 01:20:40,430
同一个文件就是他们的 

2154
01:20:38,390 --> 01:20:41,840
特别的解决方案和视角和角度 

2155
01:20:40,430 --> 01:20:42,290
有这么多不同的解决方案

2156
01:20:41,840 --> 01:20:44,030
这些问题

2157
01:20:42,290 --> 01:20:46,070
不幸的是，一旦我们接受了 

2158
01:20:44,030 --> 01:20:47,480
培训车轮 起来 CS50关闭，这是 

2159
01:20:46,070 --> 01:20:48,950
像世界一样领先于你的是什么 

2160
01:20:47,480 --> 01:20:50,900
凌乱， 还有那么多的原因 

2161
01:20:48,950 --> 01:20:52,520
语言和框架是因为 

2162
01:20:50,900 --> 01:20:55,310
像你 这样的 人 有这些本能和 

2163
01:20:52,520 --> 01:20:56,960
认为这可以做得更好，因此 

2164
01:20:55,310 --> 01:20:58,790
我们迭代并拥有新的和 新的 

2165
01:20:56,960 --> 01:21:00,170
技术，但这是那种

2166
01:20:58,790 --> 01:21:02,330
的东西， 说实话 ，这是一种 

2167
01:21:00,170 --> 01:21:04,550
随着时间的推移而变化的愚蠢

2168
01:21:02,330 --> 01:21:05,840
HTTP和客户端的基础知识

2169
01:21:04,550 --> 01:21:08,360
JavaScript代码中的代码 

2170
01:21:05,840 --> 01:21:10,610
即使是基本面也是不变的 

2171
01:21:08,360 --> 01:21:11,390
实施细节改变了 

2172
01:21:10,610 --> 01:21:13,670
简短的回答是 

2173
01:21:11,390 --> 01:21:15,350
这可能会更好吗？ 

2174
01:21:13,670 --> 01:21:17,300
要好得多，我 不知道它真的 

2175
01:21:15,350 --> 01:21:20,390
现在变得更像是一场 辩论 

2176
01:21:17,300 --> 01:21:22,880
开发人员好问题好吧 

2177
01:21:20,390 --> 01:21:24,770
所以我们现在使用其中一些基本的 

2178
01:21:22,880 --> 01:21:26,570
构建块来制作 最终的一组 

2179
01:21:24,770 --> 01:21:27,920
演示功能的示例

2180
01:21:26,570 --> 01:21:30,080
我们大多数人都很漂亮 

2181
01:21:27,920 --> 01:21:31,610
熟悉让人想起我们做了两件事 

2182
01:21:30,080 --> 01:21:33,350
几个星期 前与谷歌搜索 

2183
01:21:31,610 --> 01:21:34,550
今天我们搜索猫我们会保留它 

2184
01:21:33,350 --> 01:21:35,960
有点 简单，少一点 

2185
01:21:34,550 --> 01:21:37,460
图形化，只搜索单词 

2186
01:21:35,960 --> 01:21:39,320
因为你会记得我们的拼写 

2187
01:21:37,460 --> 01:21:41,180
问题集你实施了一个咒语

2188
01:21:39,320 --> 01:21:43,040
像一百四十的检查员

2189
01:21:41,180 --> 01:21:45,560
一千多个英文单词就是一个

2190
01:21:43,040 --> 01:21:47,410
非常多汁的数据集搜索和 

2191
01:21:45,560 --> 01:21:49,670
你可能都熟悉 

2192
01:21:47,410 --> 01:21:51,260
这些天自动完成就在那里 

2193
01:21:49,670 --> 01:21:52,820
大概一个网站，这些天，当 

2194
01:21:51,260 --> 01:21:54,500
你开始输入它不会尝试 

2195
01:21:52,820 --> 01:21:56,540
为你完成你的 想法 谷歌 

2196
01:21:54,500 --> 01:21:59,300
Facebook 任何数量的其他网站如此 

2197
01:21:56,540 --> 01:22:00,860
自动完成如何工作得很好 

2198
01:21:59,300 --> 01:22:02,330
如果，我提出以下心理模型

2199
01:22:00,860 --> 01:22:04,310
你有一些像 大的数据集 

2200
01:22:02,330 --> 01:22:06,590
Facebook 的单词列表或大 名单 

2201
01:22:04,310 --> 01:22:08,270
朋友或 任何你的 大名单 

2202
01:22:06,590 --> 01:22:10,430
可能存储服务器端 因为 

2203
01:22:08,270 --> 01:22:11,750
它实际上是很多数据

2204
01:22:10,430 --> 01:22:13,250
下周你可以 把它存放在一个大的 

2205
01:22:11,750 --> 01:22:14,720
数据库， 但今天我们只会存储 

2206
01:22:13,250 --> 01:22:17,000
它在我们为 拼写器 做的文件中 

2207
01:22:14,720 --> 01:22:18,680
pset 但是如果你想创建一个 

2208
01:22:17,000 --> 01:22:20,390
为 人类提供 互动体验 

2209
01:22:18,680 --> 01:22:21,680
你可能 会用什么语言

2210
01:22:20,390 --> 01:22:25,430
想要使用以便他 或她得到 

2211
01:22:21,680 --> 01:22:26,360
即时反馈可能是JavaScript 

2212
01:22:25,430 --> 01:22:27,830
对，这就是整个原则 

2213
01:22:26,360 --> 01:22:28,880
客户端代码就是这样 

2214
01:22:27,830 --> 01:22:30,950
执行得更快，因为没有

2215
01:22:28,880 --> 01:22:33,290
你和代码之间的互联网但是 

2216
01:22:30,950 --> 01:22:35,810
使用Python，您可以访问文件和 

2217
01:22:33,290 --> 01:22:37,340
但是使用JavaScript代码， 您可以 更接近 

2218
01:22:35,810 --> 01:22:39,080
访问 用户所以有 这些 

2219
01:22:37,340 --> 01:22:41,540
紧张， 所以我们怎么办呢 

2220
01:22:39,080 --> 01:22:44,840
建立一个 让人类通过 的 网站 

2221
01:22:41,540 --> 01:22:47,540
从该文件 转发表单搜索

2222
01:22:44,840 --> 01:22:53,870
好吧，让我们从 文字 开始如下 

2223
01:22:47,540 --> 01:22:55,790
0我们 有以下 大 的 

2224
01:22:53,870 --> 01:22:58,700
只是从中借来的文本文件 

2225
01:22:55,790 --> 01:22:59,870
问题集140,000字一条差线 

2226
01:22:58,700 --> 01:23:01,160
在那里，我甚至不会加倍 

2227
01:22:59,870 --> 01:23:03,290
点击并打开它因为它 太大了 

2228
01:23:01,160 --> 01:23:05,090
打开需要几秒钟 

2229
01:23:03,290 --> 01:23:06,770
应用点 饼我们可能有 

2230
01:23:05,090 --> 01:23:08,630
这个应用程序的入口点和 

2231
01:23:06,770 --> 01:23:10,430
模板我们只有 三个模板 

2232
01:23:08,630 --> 01:23:11,840
这次正好 在你读书的时候 

2233
01:23:10,430 --> 01:23:13,310
别人的代码第一次 

2234
01:23:11,840 --> 01:23:14,570
我们的入口点应该在哪里 

2235
01:23:13,310 --> 01:23:17,080
我们应该开始寻求 理解吗？ 

2236
01:23:14,570 --> 01:23:17,080
这是怎么回事 

2237
01:23:17,290 --> 01:23:21,080
也许申请PI 或老实说你 

2238
01:23:19,940 --> 01:23:23,480
知道如果你想 看到什么 

2239
01:23:21,080 --> 01:23:25,730
什么东西确实运行它没有伤害 

2240
01:23:23,480 --> 01:23:27,200
这样做，让 我们运行烧瓶运行 make 

2241
01:23:25,730 --> 01:23:29,300
这个有点大让我 开放 

2242
01:23:27,200 --> 01:23:31,580
这里的URL打开了，我看到了一个 非常好的 

2243
01:23:29,300 --> 01:23:34,610
简单的形式问我查询 让我 

2244
01:23:31,580 --> 01:23:37,490
继续搜索并 单击 

2245
01:23:34,610 --> 01:23:40,490
搜索过一会儿好吧 

2246
01:23:37,490 --> 01:23:42,050
这显然是很多话

2247
01:23:40,490 --> 01:23:43,700
这些都是 我们 的英文 单词 

2248
01:23:42,050 --> 01:23:45,170
字典知道该下手 

2249
01:23:43,700 --> 01:23:46,820
字母 A，如果我走了一路 

2250
01:23:45,170 --> 01:23:49,610
在底部， 你会看到它停止在 AZ 

2251
01:23:46,820 --> 01:23:51,170
事实上没有B字的事情 

2252
01:23:49,610 --> 01:23:52,760
让我们确保这 实际上有效 

2253
01:23:51,170 --> 01:23:55,880
不只是一个技巧 让我们搜索B 

2254
01:23:52,760 --> 01:23:57,830
单词没关系，这似乎也有效 

2255
01:23:55,880 --> 01:23:58,490
并注意到我借了一些灵感 

2256
01:23:57,830 --> 01:24:00,290
来自谷歌 

2257
01:23:58,490 --> 01:24:01,970
注意我正在使用的路线是 

2258
01:24:00,290 --> 01:24:05,210
两个星期前称为斜线搜索

2259
01:24:01,970 --> 01:24:06,770
确实为查询和B采用Q参数 

2260
01:24:05,210 --> 01:24:09,470
如果是的话就是人类输入的内容

2261
01:24:06,770 --> 01:24:11,870
想要搜索Z字输入我 

2262
01:24:09,470 --> 01:24:13,940
应该有希望现在回来Z字所以 

2263
01:24:11,870 --> 01:24:16,040
现在不像两周前我们可以 

2264
01:24:13,940 --> 01:24:17,840
实现前端和后端

2265
01:24:16,040 --> 01:24:19,280
我们的搜索引擎的 后端 

2266
01:24:17,840 --> 01:24:21,140
搜索引擎现在搜索只是为了 

2267
01:24:19,280 --> 01:24:22,580
所以让我们来看看应用点 

2268
01:24:21,140 --> 01:24:25,160
建议 pi 是 入口点 

2269
01:24:22,580 --> 01:24:26,990
让我们看看我是如何 这样做的 

2270
01:24:25,160 --> 01:24:28,700
是我借用 了 一些代码 

2271
01:24:26,990 --> 01:24:30,470
我们 很快就 从上周开始 

2272
01:24:28,700 --> 01:24:32,270
在类似的拼写检查器中实现 

2273
01:24:30,470 --> 01:24:34,310
什么十二或二十行Python 

2274
01:24:32,270 --> 01:24:36,440
代码我正在声明一个全局变量 

2275
01:24:34,310 --> 01:24:38,270
我 称之为 单词并将其资本化 

2276
01:24:36,440 --> 01:24:40,340
让人想起上次和 

2277
01:24:38,270 --> 01:24:41,690
问题集我正在使用这种语法 

2278
01:24:40,340 --> 01:24:44,300
我之前提到的 只是更多 

2279
01:24:41,690 --> 01:24:46,580
常规或pythonic 打开大 

2280
01:24:44,300 --> 01:24:49,370
文件处于读取模式并调用该 变量 

2281
01:24:46,580 --> 01:24:51,560
文件然后在这里是一个for 循环通过它 

2282
01:24:49,370 --> 01:24:53,810
你可以遍历每一行 

2283
01:24:51,560 --> 01:24:57,550
文件一次读 一个但回想一下 

2284
01:24:53,810 --> 01:24:57,550
这个文件中的每一行到底是什么 

2285
01:24:57,580 --> 01:25:01,820
像反斜杠N， 我们不是真的 

2286
01:25:00,290 --> 01:25:03,410
希望那些作为正确的话语的一部分 

2287
01:25:01,820 --> 01:25:05,900
这不是英文单词 的一部分，所以 

2288
01:25:03,410 --> 01:25:07,220
我们的条带写入条删除任何白色 

2289
01:25:05,900 --> 01:25:08,720
从字符串末尾开始的 空格 

2290
01:25:07,220 --> 01:25:09,110
这就是为什么我需要 添加额外的东西 

2291
01:25:08,720 --> 01:25:10,610
线 

2292
01:25:09,110 --> 01:25:12,470
所以我只是清理 文件或 

2293
01:25:10,610 --> 01:25:15,350
按摩的数据， 你可能会做 

2294
01:25:12,470 --> 01:25:17,450
任何类型的基于数据的应用程序 

2295
01:25:15,350 --> 01:25:19,040
然后我就似乎 有 这个路由 

2296
01:25:17,450 --> 01:25:20,510
如果我查看索引，则呈现模板

2297
01:25:19,040 --> 01:25:23,330
点HTML让我们遵循的 

2298
01:25:20,510 --> 01:25:24,950
breadcrumbs 进入 索引点HTML 确定 

2299
01:25:23,330 --> 01:25:27,110
看起来并没有那么多 

2300
01:25:24,950 --> 01:25:28,700
就像一个 HTML形式的动作是 

2301
01:25:27,110 --> 01:25:31,130
斜线搜索就像谷歌的那样 

2302
01:25:28,700 --> 01:25:32,450
斜线的方法就像是 

2303
01:25:31,130 --> 01:25:34,040
谷歌没有什么真正私密的 

2304
01:25:32,450 --> 01:25:36,200
关于我在 这里 搜索的单词 

2305
01:25:34,040 --> 01:25:38,120
所以我 不在乎有些发烧友 

2306
01:25:36,200 --> 01:25:40,310
这里的功能通知占位符是 

2307
01:25:38,120 --> 01:25:43,430
灰色文本人类看到自动 

2308
01:25:40,310 --> 01:25:46,630
重点关注这又做了什么 

2309
01:25:43,430 --> 01:25:49,280
只是一个UI功能更好的用户体验 

2310
01:25:46,630 --> 01:25:51,290
是的它把光标 放在了 

2311
01:25:49,280 --> 01:25:52,970
文本框你要专注于一个东西 

2312
01:25:51,290 --> 01:25:54,650
网页意味着让它像是什么 

2313
01:25:52,970 --> 01:25:56,210
现在与用户交互

2314
01:25:54,650 --> 01:25:58,160
例如MAC OS凸显它 

2315
01:25:56,210 --> 01:26:00,440
蓝色所以当你第一次加载页面时 

2316
01:25:58,160 --> 01:26:01,720
光标在文本选择中闪烁

2317
01:26:00,440 --> 01:26:04,160
你 最关心的 盒子 

2318
01:26:01,720 --> 01:26:06,080
自动完成'关闭只是禁用 

2319
01:26:04,160 --> 01:26:07,700
浏览器版本的自动完成所以我 

2320
01:26:06,080 --> 01:26:08,780
不要仅仅因为看到过去的搜索

2321
01:26:07,700 --> 01:26:09,290
这里的重点 是 实现这一点 

2322
01:26:08,780 --> 01:26:11,210
我们自己

2323
01:26:09,290 --> 01:26:13,520
最终，然后我有我的搜索

2324
01:26:11,210 --> 01:26:15,500
按钮这只是 生姜的东西 

2325
01:26:13,520 --> 01:26:17,660
烧瓶让 我有一个 布局文件 

2326
01:26:15,500 --> 01:26:19,730
按照面包屑布局点HTML 

2327
01:26:17,660 --> 01:26:21,110
没有什么是有趣的事情 

2328
01:26:19,730 --> 01:26:23,060
如果你曾经想过我们为什么

2329
01:26:21,110 --> 01:26:25,010
在 我们 的很多 演示中 都有这些 

2330
01:26:23,060 --> 01:26:26,920
神秘寻找线在这里只是让 

2331
01:26:25,010 --> 01:26:29,090
网站在移动设备上看起来更好 

2332
01:26:26,920 --> 01:26:30,920
通常默认情况下，如果你 拉起 你的 

2333
01:26:29,090 --> 01:26:32,780
电话，看看它的网站 

2334
01:26:30,920 --> 01:26:34,610
没有像那样的 那种 线 

2335
01:26:32,780 --> 01:26:36,860
除非你，否则文字会非常微小 

2336
01:26:34,610 --> 01:26:39,050
像使用这条线捏和缩放一样

2337
01:26:36,860 --> 01:26:40,670
它的变化会增加 

2338
01:26:39,050 --> 01:26:42,650
一个默认的字体大小使它 成为 一个 

2339
01:26:40,670 --> 01:26:45,170
在小屏幕上更容易忍受 

2340
01:26:42,650 --> 01:26:46,640
这是一个轻松的胜利，用户体验 好 

2341
01:26:45,170 --> 01:26:48,050
我似乎已经筋疲力尽了 

2342
01:26:46,640 --> 01:26:50,000
这些模板中有趣的东西 

2343
01:26:48,050 --> 01:26:53,590
让我们看看另一条最后的路线 

2344
01:26:50,000 --> 01:26:56,870
这是我的搜索行，这很漂亮 

2345
01:26:53,590 --> 01:26:58,250
pythonic这是一口， 我们会 

2346
01:26:56,870 --> 01:27:00,230
我们在以不同的方式实现它

2347
01:26:58,250 --> 01:27:01,970
只是片刻，所以我有一个搜索路线 

2348
01:27:00,230 --> 01:27:05,000
在斜杠上侦听get请求 

2349
01:27:01,970 --> 01:27:07,280
然后搜索这个看起来很疯狂的线

2350
01:27:05,000 --> 01:27:08,900
和代码一样pythonic， 我会 

2351
01:27:07,280 --> 01:27:12,100
解释这是 做什么以及为什么 

2352
01:27:08,900 --> 01:27:14,300
一种传统的而不是 

2353
01:27:12,100 --> 01:27:16,220
直截了当乍一看，然后 

2354
01:27:14,300 --> 01:27:16,820
我渲染模板传递这些 

2355
01:27:16,220 --> 01:27:19,820
话

2356
01:27:16,820 --> 01:27:22,430
所以实际上这是 17号线上的单线 

2357
01:27:19,820 --> 01:27:22,940
有搜索140,000的效果

2358
01:27:22,430 --> 01:27:25,010
话

2359
01:27:22,940 --> 01:27:27,260
无论什么词开始于什么 

2360
01:27:25,010 --> 01:27:29,450
输入的用户看到这将是一个痛苦 

2361
01:27:27,260 --> 01:27:31,160
在Python的脖子 上你可以做到 

2362
01:27:29,450 --> 01:27:33,470
它与字面上的一行是一条长行 

2363
01:27:31,160 --> 01:27:35,390
但是有一条线 让我做 

2364
01:27:33,470 --> 01:27:38,330
如果我要搜索，这一点就更清楚了 

2365
01:27:35,390 --> 01:27:40,580
这个大文件中的数据中的单词我 

2366
01:27:38,330 --> 01:27:41,060
可能会做这样的话是一个 

2367
01:27:40,580 --> 01:27:43,070
空列表

2368
01:27:41,060 --> 01:27:44,420
所以这个小写单词就是全部 

2369
01:27:43,070 --> 01:27:46,100
符合 我要发送的单词

2370
01:27:44,420 --> 01:27:48,080
回到用户， 所以默认情况下 我 没有 

2371
01:27:46,100 --> 01:27:50,900
想知道要送什么， 但我知道我 

2372
01:27:48,080 --> 01:27:53,210
可以为词做到这一点 的话中是 

2373
01:27:50,900 --> 01:27:54,710
大写变量常数上升

2374
01:27:53,210 --> 01:27:56,330
在顶部， 有整体 不是 

2375
01:27:54,710 --> 01:27:58,070
甚至是不变的全球变量 

2376
01:27:56,330 --> 01:28:00,770
它包含 文件中的 所有单词 

2377
01:27:58,070 --> 01:28:03,350
这是我现在可以做的循环

2378
01:28:00,770 --> 01:28:06,620
如果是现在 这样说的话

2379
01:28:03,350 --> 01:28:08,450
单词以用户输入的内容开头

2380
01:28:06,620 --> 01:28:12,290
好吧，用户输入的内容是什么时候 

2381
01:28:08,450 --> 01:28:14,870
Q等于请求args得到报价unquote 

2382
01:28:12,290 --> 01:28:18,410
Q给我用户的名字dorm或in 

2383
01:28:14,870 --> 01:28:20,240
这种情况下Q值用于查询，如果是

2384
01:28:18,410 --> 01:28:25,450
我们目前正在迭代的一句话

2385
01:28:20,240 --> 01:28:30,380
从Q开始我可以继续追加 

2386
01:28:25,450 --> 01:28:34,610
我的woops附加 到这个列表 中 

2387
01:28:30,380 --> 01:28:36,980
一句话，你 会 说你很舒服 

2388
01:28:34,610 --> 01:28:39,770
这些线路在这里回顾一下给我 

2389
01:28:36,980 --> 01:28:42,380
一个空的列表，用于存储 

2390
01:28:39,770 --> 01:28:43,670
搜索结果迭代所有可能的 

2391
01:28:42,380 --> 01:28:45,830
十四万多字

2392
01:28:43,670 --> 01:28:47,180
得到，实际上这是 愚蠢的我 

2393
01:28:45,830 --> 01:28:49,130
我应该把 它放在 这里因为 我 

2394
01:28:47,180 --> 01:28:51,080
只需要检查一次 

2395
01:28:49,130 --> 01:28:54,920
将用户 输入存储在变量中 

2396
01:28:51,080 --> 01:28:57,080
在140,000中为每个单词 称为 Q. 

2397
01:28:54,920 --> 01:29:01,190
检查它是否以用户输入开头

2398
01:28:57,080 --> 01:29:03,170
一个 BZ 什么，如果是追加 到 

2399
01:29:01,190 --> 01:29:05,330
那么让我们暂时 摆脱 

2400
01:29:03,170 --> 01:29:07,370
这， 只是呈现模板 ，从而 

2401
01:29:05,330 --> 01:29:10,070
注意这可以完成工作但是这个 

2402
01:29:07,370 --> 01:29:13,070
是非常 像C逻辑它是没有错的 

2403
01:29:10,070 --> 01:29:14,720
完全正确，但Python是一个 

2404
01:29:13,070 --> 01:29:16,700
语言意味着 一点点 

2405
01:29:14,720 --> 01:29:19,160
更具人性化和更多 

2406
01:29:16,700 --> 01:29:20,900
优雅 如果更加 明显不那么明显 

2407
01:29:19,160 --> 01:29:22,490
这一行做同样的事情 

2408
01:29:20,900 --> 01:29:25,400
使用 称为列表 的功能 

2409
01:29:22,490 --> 01:29:26,630
理解具有讽刺意味的是具有讽刺意味的 

2410
01:29:25,400 --> 01:29:28,730
你不太了解它是怎么回事 

2411
01:29:26,630 --> 01:29:30,620
工作，但这是我想要的变量 

2412
01:29:28,730 --> 01:29:33,350
创造这些方形的被叫词

2413
01:29:30,620 --> 01:29:35,030
括号在这里说给我一个清单做什么 

2414
01:29:33,350 --> 01:29:36,159
你想要列入 我想要的 列表 

2415
01:29:35,030 --> 01:29:37,539
在这个盖子上说一句话

2416
01:29:36,159 --> 01:29:39,909
你想把这个词放在 这个词里面 

2417
01:29:37,539 --> 01:29:42,760
列出诱导此循环 的结果 

2418
01:29:39,909 --> 01:29:45,369
然后只放入 此列表a 

2419
01:29:42,760 --> 01:29:47,469
如果它从人类开始的话

2420
01:29:45,369 --> 01:29:49,809
键入所以它 需要一些时间 来 

2421
01:29:47,469 --> 01:29:51,849
到但这只是一个班轮方式 

2422
01:29:49,809 --> 01:29:54,159
表达那些的非常pythonic方式

2423
01:29:51,849 --> 01:29:56,979
几行非常程序化的代码 

2424
01:29:54,159 --> 01:29:58,900
变成一个简单的单行是更好的 是啊 

2425
01:29:56,979 --> 01:30:00,219
如果你不能读它，那就不是了 

2426
01:29:58,900 --> 01:30:01,900
让Python更舒服是的 

2427
01:30:00,219 --> 01:30:11,650
它更好， 因为它的代码更少 

2428
01:30:01,900 --> 01:30:13,900
是的好问题， 在这种情况下 

2429
01:30:11,650 --> 01:30:17,019
列表理解你只能有一个 

2430
01:30:13,900 --> 01:30:19,119
线或 你不能拥有的 一个条件 

2431
01:30:17,019 --> 01:30:20,709
其中有多条线，所以我无法启动 

2432
01:30:19,119 --> 01:30:22,749
点击Enter并在这里缩进

2433
01:30:20,709 --> 01:30:24,369
只是不允许所以你只会使用 

2434
01:30:22,749 --> 01:30:25,840
我坦白地说，这真是推动了 

2435
01:30:24,369 --> 01:30:27,249
限制你应该只使用 它 

2436
01:30:25,840 --> 01:30:29,320
语法何时适合你 

2437
01:30:27,249 --> 01:30:31,329
屏幕或 适合一个合理的人 

2438
01:30:29,320 --> 01:30:33,610
屏幕之后你应该 这样做 

2439
01:30:31,329 --> 01:30:36,429
其他 更具表现力的 东西 

2440
01:30:33,610 --> 01:30:38,079
问题，但这是很常见的 

2441
01:30:36,429 --> 01:30:40,030
如果你看到任何教程，在线等 

2442
01:30:38,079 --> 01:30:42,219
这种单线只是试着思考 

2443
01:30:40,030 --> 01:30:45,039
从它的方法来看它是什么 

2444
01:30:42,219 --> 01:30:47,199
实际上做得好，所以建议从 

2445
01:30:45,039 --> 01:30:48,669
用户体验视角 怎么可能 

2446
01:30:47,199 --> 01:30:50,530
这个程序更好， 因为这是 

2447
01:30:48,669 --> 01:30:57,849
只是我们的第一个版本， 所以可能是 

2448
01:30:50,530 --> 01:31:01,209
比这更好的用户 

2449
01:30:57,849 --> 01:31:03,869
更好是的

2450
01:31:01,209 --> 01:31:03,869
嗯

2451
01:31:05,400 --> 01:31:12,030
哦，确定言语和上限是全球性的 

2452
01:31:09,690 --> 01:31:14,970
变量我在这里定义存储 

2453
01:31:12,030 --> 01:31:18,030
所有140,000多个单词都是真的 

2454
01:31:14,970 --> 01:31:20,160
大文件称为大文本文件 

2455
01:31:18,030 --> 01:31:21,870
在这里我只 需要 一个局部变量if 

2456
01:31:20,160 --> 01:31:24,540
我可以更清楚地称之为结果 

2457
01:31:21,870 --> 01:31:26,820
然后只说结果等于 结果 

2458
01:31:24,540 --> 01:31:29,370
这是开始 的单词的子集 

2459
01:31:26,820 --> 01:31:38,340
用a或B或 任何人类型 

2460
01:31:29,370 --> 01:31:41,730
10这都是好问题，为什么 

2461
01:31:38,340 --> 01:31:44,760
没有必要改变我的 弧线 

2462
01:31:41,730 --> 01:31:46,980
今天早些时候我不明白 

2463
01:31:44,760 --> 01:31:49,500
你发生 了 什么应该使用请求 

2464
01:31:46,980 --> 01:31:55,140
弧 GET请求，你应该使用 

2465
01:31:49,500 --> 01:31:57,930
请求点形式 的帖子请求 

2466
01:31:55,140 --> 01:31:59,730
总是点得到 肯定，但你改变了什么 

2467
01:31:57,930 --> 01:32:01,560
你是在理想中得到的东西 

2468
01:31:59,730 --> 01:32:05,100
世界它会是 我的 东西 哦 

2469
01:32:01,560 --> 01:32:08,480
说出你 在这个意义上的意思是 

2470
01:32:05,100 --> 01:32:11,190
我们人类的动词意味着得到一些东西 

2471
01:32:08,480 --> 01:32:13,140
如果他们已经 完成 了这个意义上的组织 

2472
01:32:11,190 --> 01:32:14,490
这是问题，但这个 

2473
01:32:13,140 --> 01:32:16,170
可能是因为他们这样做了 

2474
01:32:14,490 --> 01:32:18,570
来自get似乎很奇怪

2475
01:32:16,170 --> 01:32:19,980
而从帖子获得不那么奇怪但是

2476
01:32:18,570 --> 01:32:22,170
只是他们称之为args和 

2477
01:32:19,980 --> 01:32:24,600
形式反而没关系 

2478
01:32:22,170 --> 01:32:27,710
所以让我们实际改进这个但是如何

2479
01:32:24,600 --> 01:32:30,060
什么可能对用户更好，是的 

2480
01:32:27,710 --> 01:32:31,560
好吧也许会搜索整个单词 

2481
01:32:30,060 --> 01:32:34,130
好不 只是第一个字母是什么 

2482
01:32:31,560 --> 01:32:34,130
我们还能这样做吗？ 

2483
01:32:38,569 --> 01:32:42,859
好的，我们可以创建一个索引列表 

2484
01:32:40,879 --> 01:32:44,989
也许使用哈希或某种形式的 

2485
01:32:42,859 --> 01:32:46,489
从 我们的问题中 获得和平的灵感 

2486
01:32:44,989 --> 01:32:48,109
这会拼写并实际使用 

2487
01:32:46,489 --> 01:32:50,299
更复杂的数据结构，以 获取 

2488
01:32:48,109 --> 01:32:51,799
这些答案更快，让我 

2489
01:32:50,299 --> 01:32:53,569
提出的目标是在这里实际上 

2490
01:32:51,799 --> 01:32:55,039
实现自动完成，但事实并非如此 

2491
01:32:53,569 --> 01:32:57,619
自动完成这就像老派 

2492
01:32:55,039 --> 01:32:59,449
查询中的搜索类型命中 输入 get a 

2493
01:32:57,619 --> 01:33:01,129
如果我们想要做 的结果页

2494
01:32:59,449 --> 01:33:03,019
更直接的东西，让我 

2495
01:33:01,129 --> 01:33:05,299
实际上在看之前提出这个建议

2496
01:33:03,019 --> 01:33:07,219
代码让我进入一个让我的话 

2497
01:33:05,299 --> 01:33:09,260
继续 并在该目录中运行flask 

2498
01:33:07,219 --> 01:33:11,539
让我继续，在这里重新加载表格 

2499
01:33:09,260 --> 01:33:12,829
现在注意没有提交按钮，因为 

2500
01:33:11,539 --> 01:33:14,479
不会有 任何实际的 

2501
01:33:12,829 --> 01:33:17,539
在这里提交申请，但是我会继续前进 

2502
01:33:14,479 --> 01:33:20,329
并打了字母A哦，那是亲切的 

2503
01:33:17,539 --> 01:33:22,729
很酷让我删除 那消失B. 

2504
01:33:20,329 --> 01:33:26,179
有所有B字让我去巴 

2505
01:33:22,729 --> 01:33:30,229
单词ba B字 

2506
01:33:26,179 --> 01:33:32,780
ba ba这是自动完成的方式

2507
01:33:30,229 --> 01:33:34,729
这样做似乎是在 回应 

2508
01:33:32,780 --> 01:33:36,469
我的 输入立刻就是 这样的 

2509
01:33:34,729 --> 01:33:38,359
发生但我实际上并不是 

2510
01:33:36,469 --> 01:33:40,969
提交表格，所以我有点使用 

2511
01:33:38,359 --> 01:33:42,289
它现在似乎是客户端JavaScript 

2512
01:33:40,969 --> 01:33:44,239
也许和服务器说话

2513
01:33:42,289 --> 01:33:45,289
我们在这里推断 它应该如此 

2514
01:33:44,239 --> 01:33:47,149
您只要你想的本能

2515
01:33:45,289 --> 01:33:48,889
了解某人的网站是如何运作的 

2516
01:33:47,149 --> 01:33:50,809
如果你想从中学习或模仿 

2517
01:33:48,889 --> 01:33:53,510
某些基本功能 

2518
01:33:50,809 --> 01:33:55,069
提前检查页面，你没有 

2519
01:33:53,510 --> 01:33:57,199
大概太在意 的HTML 

2520
01:33:55,069 --> 01:33:58,669
然而，这些数据来自let 

2521
01:33:57,199 --> 01:34:00,769
我点击我们 的网络标签 

2522
01:33:58,669 --> 01:34:02,149
看了几个 星期前 ， 让我 

2523
01:34:00,769 --> 01:34:03,799
继续并重启这个让我 

2524
01:34:02,149 --> 01:34:05,419
明确这一点并从头 开始 

2525
01:34:03,799 --> 01:34:08,689
这个故事让我们看看会发生什么 

2526
01:34:05,419 --> 01:34:11,809
我输入了一封有趣的字母 

2527
01:34:08,689 --> 01:34:14,629
一个网络请求，所以如果我放大 这里 

2528
01:34:11,809 --> 01:34:17,929
注意我的浏览器 实际搜索过 

2529
01:34:14,629 --> 01:34:19,280
对于Q等于 人类的输入让我 

2530
01:34:17,929 --> 01:34:20,749
继续前进，它继续搜索，因为 

2531
01:34:19,280 --> 01:34:22,309
我在这里 使用键盘 快捷键但是 

2532
01:34:20,749 --> 01:34:25,249
让我继续点击这一行 

2533
01:34:22,309 --> 01:34:28,399
注意到发生了什么事我做了一个请求 

2534
01:34:25,249 --> 01:34:30,409
斜线搜索问号Q等于a 

2535
01:34:28,399 --> 01:34:32,689
通过好好让我们看看是什么 

2536
01:34:30,409 --> 01:34:36,169
如果我认为，回应是这里的回应

2537
01:34:32,689 --> 01:34:38,359
来源或者更确切地说，如果我 读 了 

2538
01:34:36,169 --> 01:34:40,939
回复通知什么回来了

2539
01:34:38,359 --> 01:34:43,999
看起来我的服务器回到了我身边 

2540
01:34:40,939 --> 01:34:45,919
包含数百个HTML的片段

2541
01:34:43,999 --> 01:34:48,229
也许成千上万的单词以a开头

2542
01:34:45,919 --> 01:34:49,909
但请注意，没有ul标签 没有 

2543
01:34:48,229 --> 01:34:51,790
头标签没有标题没有身体它只是一个 

2544
01:34:49,909 --> 01:34:53,350
部分HTML片段，但那 

2545
01:34:51,790 --> 01:34:54,970
有趣， 因为我知道Python 我 

2546
01:34:53,350 --> 01:34:57,610
做就怎么做 ，我可以生成 

2547
01:34:54,970 --> 01:34:59,770
我想要的任何东西在服务器上然后 

2548
01:34:57,610 --> 01:35:02,080
也许浏览器 可以插入那些 

2549
01:34:59,770 --> 01:35:04,030
改变了结果让我继续前进 

2550
01:35:02,080 --> 01:35:07,120
如果我去，请查看此页面的代码 

2551
01:35:04,030 --> 01:35:09,970
现在到浏览器源代码的视图 

2552
01:35:07,120 --> 01:35:13,000
页面源您会看到 一些新行 

2553
01:35:09,970 --> 01:35:14,800
所以要轻松地这样做，我实际上正在使用 

2554
01:35:13,000 --> 01:35:17,500
另一个图书馆叫这个

2555
01:35:14,800 --> 01:35:19,030
jQuery 这对很多你的超级 

2556
01:35:17,500 --> 01:35:20,350
超人气这有点开始 

2557
01:35:19,030 --> 01:35:22,570
掉 出 时尚 的 ，但它仍然是这样 

2558
01:35:20,350 --> 01:35:24,610
功能强大，非常 有用，并且被它所使用 

2559
01:35:22,570 --> 01:35:25,840
引导我们的其他CSS库

2560
01:35:24,610 --> 01:35:28,750
谈到这么完美

2561
01:35:25,840 --> 01:35:30,220
合理地 在这里使用它注意 我是怎么回事 

2562
01:35:28,750 --> 01:35:32,320
包括它的 脚本标签和 

2563
01:35:30,220 --> 01:35:33,730
它托管在 第三方 网站上 

2564
01:35:32,320 --> 01:35:36,550
我不需要保存它的副本 

2565
01:35:33,730 --> 01:35:38,680
我自己在自己的IDE中 然后让我们来看看 

2566
01:35:36,550 --> 01:35:40,780
我实际编写的代码注意到了 

2567
01:35:38,680 --> 01:35:42,670
在这个文件上面甚至不是 

2568
01:35:40,780 --> 01:35:44,680
完整的形式它只是HTML 

2569
01:35:42,670 --> 01:35:45,850
输入，因为我不需要一个完整的表格我 

2570
01:35:44,680 --> 01:35:47,170
不需要我 不需要的动作 

2571
01:35:45,850 --> 01:35:49,420
方法， 因为我没有 提交它 

2572
01:35:47,170 --> 01:35:52,150
与人类或合作的任何地方

2573
01:35:49,420 --> 01:35:54,190
我将使用我自己的 代码 

2574
01:35:52,150 --> 01:35:55,660
脚本标记在这里我的JavaScript代码 

2575
01:35:54,190 --> 01:35:57,220
注意 我在做什么 

2576
01:35:55,660 --> 01:35:59,710
这是两周以来的一些代码

2577
01:35:57,220 --> 01:36:01,540
以前 我要去找那棵树 

2578
01:35:59,710 --> 01:36:03,670
代表这个 网页，实际上它 

2579
01:36:01,540 --> 01:36:05,170
是从树上回忆起来的 

2580
01:36:03,670 --> 01:36:07,870
我们查看HTML页面的时间 

2581
01:36:05,170 --> 01:36:10,480
由于浏览器 存在 内存 

2582
01:36:07,870 --> 01:36:11,950
像Dom 文档 那样的树 

2583
01:36:10,480 --> 01:36:14,740
表示您的页面的对象模型

2584
01:36:11,950 --> 01:36:18,430
使用JavaScript 我们 可以 更改该页面 

2585
01:36:14,740 --> 01:36:20,470
事后 所以 我究竟 该怎么办，我 

2586
01:36:18,430 --> 01:36:24,190
要告诉浏览器 这个时候 

2587
01:36:20,470 --> 01:36:26,200
输入这里是一个名为Anki的事件 

2588
01:36:24,190 --> 01:36:29,290
只要场地有焦点，它就是蓝色 

2589
01:36:26,200 --> 01:36:31,600
在Mac OS和人类击中一把钥匙和 

2590
01:36:29,290 --> 01:36:33,610
然后我们走 了，钥匙就开始了 

2591
01:36:31,600 --> 01:36:35,890
提前并打电话给以下匿名者 

2592
01:36:33,610 --> 01:36:37,660
功能你现在想要做什么 

2593
01:36:35,890 --> 01:36:39,220
这段代码有点神秘但让我 

2594
01:36:37,660 --> 01:36:42,970
引导我们走过它，因为它只是 

2595
01:36:39,220 --> 01:36:45,610
这条代码在这里使用的三行代码 

2596
01:36:42,970 --> 01:36:47,590
特色美元符号来了 

2597
01:36:45,610 --> 01:36:50,590
来自这个名为jQuery的 库 

2598
01:36:47,590 --> 01:36:53,080
在一个时刻，有些库 

2599
01:36:50,590 --> 01:36:55,120
lis有点混乱地命名 了 

2600
01:36:53,080 --> 01:36:56,590
函数叫做get，什么都没有 

2601
01:36:55,120 --> 01:36:59,170
使用Python 或我们刚才谈到的那个 

2602
01:36:56,590 --> 01:37:01,540
但是这 与 HTTP有关 

2603
01:36:59,170 --> 01:37:03,520
您可以通过这行代码获取 

2604
01:37:01,540 --> 01:37:04,030
一个浏览器甚至在 网页出现之后 

2605
01:37:03,520 --> 01:37:05,530
装 

2606
01:37:04,030 --> 01:37:08,230
去把我这等 

2607
01:37:05,530 --> 01:37:10,210
URL请你想要什么URL 

2608
01:37:08,230 --> 01:37:14,469
继续前进，让我从同一个 

2609
01:37:10,210 --> 01:37:17,130
服务器/搜索q等于然后是什么 

2610
01:37:14,469 --> 01:37:19,150
+的意思是 在JavaScript中 ，如果你还记得 

2611
01:37:17,130 --> 01:37:21,340
连接所以它意味着只是追加 

2612
01:37:19,150 --> 01:37:23,020
一个字符串 到另一个 所以这就像 

2613
01:37:21,340 --> 01:37:25,510
话说继续 前进 ，让我的网址 

2614
01:37:23,020 --> 01:37:29,079
以斜线搜索问号 q 结尾 

2615
01:37:25,510 --> 01:37:30,610
等于a或 q等于B或Q等于Z. 

2616
01:37:29,079 --> 01:37:33,369
无论人类输入的是什么 

2617
01:37:30,610 --> 01:37:34,869
打到最后然后就是这样

2618
01:37:33,369 --> 01:37:36,730
我们从输入点获取它 

2619
01:37:34,869 --> 01:37:38,860
value 是用户输入的值 

2620
01:37:36,730 --> 01:37:41,320
然后是最后一行 和这个 

2621
01:37:38,860 --> 01:37:44,409
也许 是 我 最 高档 的 通知 

2622
01:37:41,320 --> 01:37:46,570
在这有一个匿名的功能 

2623
01:37:44,409 --> 01:37:49,780
库名为jQuery 就有这个 

2624
01:37:46,570 --> 01:37:52,630
名为get的 函数 在何时 获取URL 

2625
01:37:49,780 --> 01:37:54,730
服务器响应您的请求 

2626
01:37:52,630 --> 01:37:56,320
这是一个虚拟的信封 

2627
01:37:54,730 --> 01:37:58,360
匿名函数被调用和 

2628
01:37:56,320 --> 01:38:02,440
回复信封会交给你 

2629
01:37:58,360 --> 01:38:04,559
作为数据作为数据参数发言 

2630
01:38:02,440 --> 01:38:07,750
变量然后你可以做什么 

2631
01:38:04,559 --> 01:38:09,369
记录查询选择器 ul是什么 

2632
01:38:07,750 --> 01:38:11,230
这是一个无序列表

2633
01:38:09,369 --> 01:38:13,420
此页面上的默认值中没有任何内容 

2634
01:38:11,230 --> 01:38:15,010
但回想一下服务器是什么 

2635
01:38:13,420 --> 01:38:16,150
发回来的 是一堆Li标签 

2636
01:38:15,010 --> 01:38:18,309
这很棒，因为我想把 它们放进去 

2637
01:38:16,150 --> 01:38:20,289
李标签就在这里， 所以怎么做 

2638
01:38:18,309 --> 01:38:22,239
我这样做， 我进入 了 所谓的 内 

2639
01:38:20,289 --> 01:38:24,039
UL标签的 HTML 可能不是 

2640
01:38:22,239 --> 01:38:27,699
以前见过这个， 但你可以 改变 

2641
01:38:24,039 --> 01:38:30,099
里面现有标签的内容

2642
01:38:27,699 --> 01:38:32,590
通过使用内部HTML 和只是plop它 

2643
01:38:30,099 --> 01:38:34,659
那里的数据等等

2644
01:38:32,590 --> 01:38:36,730
发生的是这让我继续前进 ， 

2645
01:38:34,659 --> 01:38:38,469
打开 Chrome的检查员 重新加载 

2646
01:38:36,730 --> 01:38:41,380
页面所以它是空的 让我 打开 

2647
01:38:38,469 --> 01:38:43,420
Chrome的检查员按原样转到元素 

2648
01:38:41,380 --> 01:38:46,329
此页面上的默认和通知 

2649
01:38:43,420 --> 01:38:48,699
注意ul标签是打开和关闭的 

2650
01:38:46,329 --> 01:38:51,070
那一刻里面什么都没有

2651
01:38:48,699 --> 01:38:53,679
虽然我搜索 什么东西看什么 

2652
01:38:51,070 --> 01:38:55,900
如果我搜索 所有的一个，就会发生

2653
01:38:53,679 --> 01:38:57,460
它突然眨了眨眼有点儿 

2654
01:38:55,900 --> 01:39:00,130
小的， 现在有一个小 三角形 

2655
01:38:57,460 --> 01:39:03,159
所有这些都在里面 

2656
01:39:00,130 --> 01:39:04,690
从服务器来的那么李标签

2657
01:39:03,159 --> 01:39:07,659
使用Java Script我们有这个惊人的 

2658
01:39:04,690 --> 01:39:09,489
现在 能够改变一个人的内心 

2659
01:39:07,659 --> 01:39:10,690
通过 询问 服务器的网页

2660
01:39:09,489 --> 01:39:12,789
更多数据，如果你 曾经使用过 

2661
01:39:10,690 --> 01:39:14,710
Facebook或你使用谷歌聊天或 

2662
01:39:12,789 --> 01:39:16,210
任何动态变化的网站

2663
01:39:14,710 --> 01:39:17,949
每当你每时每秒钟

2664
01:39:16,210 --> 01:39:19,389
如果你的话，可以从字面上得到一条消息 

2665
01:39:17,949 --> 01:39:21,969
得到一点爱管闲事 

2666
01:39:19,389 --> 01:39:23,830
检查员，观看Dom观看此事 

2667
01:39:21,969 --> 01:39:25,989
元素选项卡，你会看到新的东西 

2668
01:39:23,830 --> 01:39:28,030
每次弹出 你 得到 一个 消息 

2669
01:39:25,989 --> 01:39:30,850
或聊天或任何其他此类通知 

2670
01:39:28,030 --> 01:39:33,040
在屏幕上现在作为 旁边这是一个 

2671
01:39:30,850 --> 01:39:34,600
有点草率要 返回HTML，但 

2672
01:39:33,040 --> 01:39:37,810
让我们看看它是如何完成的让我进入 

2673
01:39:34,600 --> 01:39:40,540
应用程序PI 转发 一个 

2674
01:39:37,810 --> 01:39:43,389
此示例在此处和应用程序PI中 

2675
01:39:40,540 --> 01:39:46,780
注意我正在做的是这个 

2676
01:39:43,389 --> 01:39:49,000
比返回整页结果 我是 

2677
01:39:46,780 --> 01:39:50,679
返回一个叫做搜索模板

2678
01:39:49,000 --> 01:39:53,350
HTML 所有剩下的代码 都是 

2679
01:39:50,679 --> 01:39:55,210
如果我进入我的相同之前 

2680
01:39:53,350 --> 01:39:58,239
模板并将搜索到HTML 

2681
01:39:55,210 --> 01:40:00,219
看看代码是多么简单 

2682
01:39:58,239 --> 01:40:02,409
服务器， 如果你想做的只是吐 

2683
01:40:00,219 --> 01:40:03,699
出了一堆列表项，这就是全部 

2684
01:40:02,409 --> 01:40:05,110
你需要没有像这样的模板 

2685
01:40:03,699 --> 01:40:06,730
没有扩展布局，因为你 

2686
01:40:05,110 --> 01:40:09,030
不返回整个 网页 你 

2687
01:40:06,730 --> 01:40:12,850
返回 的 是个小小小小的片段 

2688
01:40:09,030 --> 01:40:14,860
HTML，但这可以说有点 

2689
01:40:12,850 --> 01:40:16,719
马虎， 因为 有很多 

2690
01:40:14,860 --> 01:40:18,489
如果我 ，那将会 出现 什么样的冗余

2691
01:40:16,719 --> 01:40:19,030
看看这个回来的标签 

2692
01:40:18,489 --> 01:40:21,040
服务器 

2693
01:40:19,030 --> 01:40:22,449
什么是明显多余的

2694
01:40:21,040 --> 01:40:23,830
这些信息即将发布 

2695
01:40:22,449 --> 01:40:28,110
如果我真的看到网络 标签 

2696
01:40:23,830 --> 01:40:28,110
看到它在回应什么是多余的

2697
01:40:29,460 --> 01:40:33,580
这只是 因为我打了一些像 

2698
01:40:31,869 --> 01:40:35,320
放大和缩小， 以便它假装 

2699
01:40:33,580 --> 01:40:37,510
提出多个请求，以便红鲱鱼 

2700
01:40:35,320 --> 01:40:39,130
这里只关注这一部分 

2701
01:40:37,510 --> 01:40:42,070
所有数据都是多余的 

2702
01:40:39,130 --> 01:40:44,350
回来 它只是继续说清单 

2703
01:40:42,070 --> 01:40:46,030
项目单词关闭列表项目列表项目 

2704
01:40:44,350 --> 01:40:48,310
关于他们的 单词 关闭 列表我的意思是来吧 

2705
01:40:46,030 --> 01:40:49,780
就像 通常更有效的语法一样 

2706
01:40:48,310 --> 01:40:52,090
用逗号分隔东西

2707
01:40:49,780 --> 01:40:53,860
这是发送更轻的重量

2708
01:40:52,090 --> 01:40:56,800
很多字节我的意思是看那里 

2709
01:40:53,860 --> 01:40:58,840
千字节，这是千字节 

2710
01:40:56,800 --> 01:41:01,150
我们所 掌握的信息的定义

2711
01:40:58,840 --> 01:41:02,679
派出一个开放的支架 李关闭 

2712
01:41:01,150 --> 01:41:04,929
支架一次又一次这不是很好 

2713
01:41:02,679 --> 01:41:06,580
有效，所以世界实际上有 

2714
01:41:04,929 --> 01:41:08,800
我采用了不同的方法 

2715
01:41:06,580 --> 01:41:10,869
我会用言语表明这一点 

2716
01:41:08,800 --> 01:41:13,449
实际上返回一个 叫 Java的 东西 

2717
01:41:10,869 --> 01:41:14,889
脚本对象表示法更多 

2718
01:41:13,449 --> 01:41:18,909
简洁的表示为 

2719
01:41:14,889 --> 01:41:21,489
跟着让 我进入运行的话语 

2720
01:41:18,909 --> 01:41:23,260
那里的烧瓶寻找同一种 

2721
01:41:21,489 --> 01:41:24,760
事情，然后看看会发生什么

2722
01:41:23,260 --> 01:41:27,219
这次我 在 网络面板上 

2723
01:41:24,760 --> 01:41:29,139
搜索一下我马上 回来了 

2724
01:41:27,219 --> 01:41:31,449
相同的视觉效果，但如果我看这个 

2725
01:41:29,139 --> 01:41:33,130
搜索查询现在看看我回来了什么 

2726
01:41:31,449 --> 01:41:34,810
声称这 是一个很大的问题 

2727
01:41:33,130 --> 01:41:36,520
紧凑的表示

2728
01:41:34,810 --> 01:41:37,780
信息这是一个有点恼人 的是 

2729
01:41:36,520 --> 01:41:39,040
这是双引号，因为它们是 

2730
01:41:37,780 --> 01:41:40,210
有点多余，但至少有两倍 

2731
01:41:39,040 --> 01:41:42,280
报价比效率更高 

2732
01:41:40,210 --> 01:41:43,990
打开支架李然后关闭支架 

2733
01:41:42,280 --> 01:41:45,520
最后相反，所以这是 

2734
01:41:43,990 --> 01:41:48,360
什么叫做JavaScript对象表示法 

2735
01:41:45,520 --> 01:41:50,920
和这个方括号 在这里和 

2736
01:41:48,360 --> 01:41:52,750
广场上后千言万语

2737
01:41:50,920 --> 01:41:55,900
括号最后暗示这是一个 

2738
01:41:52,750 --> 01:41:58,120
正在发 回的 JavaScript 数组 

2739
01:41:55,900 --> 01:42:00,750
从服务器 所以唯一的事情是 

2740
01:41:58,120 --> 01:42:03,940
这里改变的是在话如下 

2741
01:42:00,750 --> 01:42:06,460
这个例子注意到 我 甚至没有 

2742
01:42:03,940 --> 01:42:08,050
需要再返回一个模板 

2743
01:42:06,460 --> 01:42:09,340
这个代码是 一样 的过去两年 

2744
01:42:08,050 --> 01:42:12,790
这 是我正在寻找的例子

2745
01:42:09,340 --> 01:42:15,250
快速140,000字， 但如果我包括 

2746
01:42:12,790 --> 01:42:18,490
现在来自flash的一个更好的功能叫做

2747
01:42:15,250 --> 01:42:21,010
JSON Fi它不是一个字，而是JSON 

2748
01:42:18,490 --> 01:42:23,620
采用任何数据结构的Fi 

2749
01:42:21,010 --> 01:42:25,390
像这个单词列表中的数据 

2750
01:42:23,620 --> 01:42:27,010
匹配， 它变成了那个 

2751
01:42:25,390 --> 01:42:28,990
带引号 的基于文本的 表示 

2752
01:42:27,010 --> 01:42:30,700
和逗号，你 甚至不必 

2753
01:42:28,990 --> 01:42:33,370
自己写一个模板，的确是我

2754
01:42:30,700 --> 01:42:34,270
摆脱搜索点HTML 唯一 

2755
01:42:33,370 --> 01:42:37,450
给自己的东西你必须做的事情 

2756
01:42:34,270 --> 01:42:39,550
访问此 功能不是导入 

2757
01:42:37,450 --> 01:42:42,310
只是渲染模板和请求和 

2758
01:42:39,550 --> 01:42:45,640
烧瓶， 但只是听起来像Phi 

2759
01:42:42,310 --> 01:42:49,710
烧瓶 库，它仅仅是一个 更 

2760
01:42:45,640 --> 01:42:52,150
对此有 任何疑问 

2761
01:42:49,710 --> 01:42:55,170
在我们 把它们全部带到一起 之前 

2762
01:42:52,150 --> 01:42:55,170
最后的例子是啊 

2763
01:42:57,280 --> 01:43:02,020
可以用双引号打破这个好处 

2764
01:42:59,470 --> 01:43:04,480
问题伟大的直觉 没有 因为 

2765
01:43:02,020 --> 01:43:06,760
JSON的作者， 如果 我对此很聪明的话 

2766
01:43:04,480 --> 01:43:09,670
如果该作者通知是一个引用 

2767
01:43:06,760 --> 01:43:12,490
像撇号或类似的东西 

2768
01:43:09,670 --> 01:43:14,620
用你自己的名字 来 引用它 

2769
01:43:12,490 --> 01:43:16,570
通常会以某种方式逃脱它

2770
01:43:14,620 --> 01:43:18,250
反斜杠很好的本能，但那是 

2771
01:43:16,570 --> 01:43:19,810
为什么你可能不想写 

2772
01:43:18,250 --> 01:43:21,610
这个代码 自己因为你有 

2773
01:43:19,810 --> 01:43:23,320
将 所有 这些角落 案例都视为 

2774
01:43:21,610 --> 01:43:25,750
反对专注于你的部分 

2775
01:43:23,320 --> 01:43:28,330
关心好，所以有一个 

2776
01:43:25,750 --> 01:43:30,880
最后一个例子 ，它 可能会来 

2777
01:43:28,330 --> 01:43:34,030
在这里完整的圆圈 我们甚至需要 

2778
01:43:30,880 --> 01:43:35,590
服务器这一十四万

2779
01:43:34,030 --> 01:43:37,810
现在或在一个名为的文件中的单词

2780
01:43:35,590 --> 01:43:40,030
我的大型Web应用程序加载该文件 

2781
01:43:37,810 --> 01:43:42,520
进入记忆 然后搜索但是谁 

2782
01:43:40,030 --> 01:43:47,730
否则可以搜索一个大的列表 

2783
01:43:42,520 --> 01:43:50,380
文件在哪里我们可以把这个逻辑 

2784
01:43:47,730 --> 01:43:51,970
浏览器右侧浏览器为您提供 

2785
01:43:50,380 --> 01:43:54,520
JavaScript Java脚本是一种语言 

2786
01:43:51,970 --> 01:43:57,370
语言可以搜索东西所以让我 

2787
01:43:54,520 --> 01:43:59,620
在我们的三个单词中 尝试这个 

2788
01:43:57,370 --> 01:44:01,270
这里的例子注意到我有一个 

2789
01:43:59,620 --> 01:44:02,800
提前新文件

2790
01:44:01,270 --> 01:44:04,810
我拿了刚才 有的大文本文件

2791
01:44:02,800 --> 01:44:06,700
每行一个字， 我把它放入一个 

2792
01:44:04,810 --> 01:44:09,160
标准格式只是因为它使我的 

2793
01:44:06,700 --> 01:44:12,550
生活有点容易 你会看到大J 

2794
01:44:09,160 --> 01:44:14,350
S的 是一个第二文件 这个时候 

2795
01:44:12,550 --> 01:44:17,740
我刚才的 JavaScript文件 

2796
01:44:14,350 --> 01:44:19,750
声明 的所有的 JavaScript数组 

2797
01:44:17,740 --> 01:44:21,310
十四万字

2798
01:44:19,750 --> 01:44:23,200
无论好坏，我只是把它们放入 

2799
01:44:21,310 --> 01:44:25,150
与逗号略有不同的格式 

2800
01:44:23,200 --> 01:44:27,340
和引号和方括号 和我 

2801
01:44:25,150 --> 01:44:29,620
给了这整个东西一个变量名称

2802
01:44:27,340 --> 01:44:31,770
文件的最顶部 现在为什么这样 

2803
01:44:29,620 --> 01:44:34,270
如果我 进入索引点HTML，这很有用

2804
01:44:31,770 --> 01:44:36,010
请注意，没有更多的申请 

2805
01:44:34,270 --> 01:44:37,630
这个例子的饼图或模板 

2806
01:44:36,010 --> 01:44:39,520
无论我们摆脱Python 

2807
01:44:37,630 --> 01:44:41,860
我完全不知道这是否是对 的 

2808
01:44:39,520 --> 01:44:44,590
无论好坏，但现在都会看到 

2809
01:44:41,860 --> 01:44:46,930
这个文件通知 我们在 输入标签中有 

2810
01:44:44,590 --> 01:44:49,930
在为 所有你的占位符之前

2811
01:44:46,930 --> 01:44:52,180
ELL，但我们现在也包括这个 

2812
01:44:49,930 --> 01:44:54,340
从而告诉大j / s文件 

2813
01:44:52,180 --> 01:44:56,950
浏览器请下载全部和 

2814
01:44:54,340 --> 01:44:58,780
四万字然后搜索

2815
01:44:56,950 --> 01:45:01,060
他们在当地如何搜索它

2816
01:44:58,780 --> 01:45:02,830
在本地我基本上转换了 

2817
01:45:01,060 --> 01:45:06,190
我之前用Python写过的语言

2818
01:45:02,830 --> 01:45:08,470
以下是这里所说的JavaScript 

2819
01:45:06,190 --> 01:45:10,660
浏览器去让我输入 的是， 

2820
01:45:08,470 --> 01:45:11,230
用户可以输入这个告诉 

2821
01:45:10,660 --> 01:45:13,030
浏览器 

2822
01:45:11,230 --> 01:45:15,130
继续，随时听取密钥 

2823
01:45:13,030 --> 01:45:16,510
出现这种情况，请调用这个 函数 

2824
01:45:15,130 --> 01:45:17,739
没有 名字， 因为我想要你 

2825
01:45:16,510 --> 01:45:19,810
只是立刻打电话给我，我不需要 

2826
01:45:17,739 --> 01:45:22,030
它的名称此函数由 

2827
01:45:19,810 --> 01:45:23,739
这几行几行 

2828
01:45:22,030 --> 01:45:25,360
必须做比 以前 更多的工作 

2829
01:45:23,739 --> 01:45:26,890
因为在服务器完成之前 

2830
01:45:25,360 --> 01:45:29,080
艰苦的工作送回所有 的 

2831
01:45:26,890 --> 01:45:31,900
数据， 我们只是把它塞进了 网络 

2832
01:45:29,080 --> 01:45:34,510
页面，但 在这里，我要建立一个列表 

2833
01:45:31,900 --> 01:45:36,310
多一点手动，所以我要放手 

2834
01:45:34,510 --> 01:45:37,750
一个名为HTML的变量等于引用

2835
01:45:36,310 --> 01:45:40,420
因为我想要建立 起来 ， 所以不要引用

2836
01:45:37,750 --> 01:45:41,890
无序列表 我自己 然后如果人类 

2837
01:45:40,420 --> 01:45:44,140
确实如此输入内容

2838
01:45:41,890 --> 01:45:46,180
输入为非null，因此如果输入为

2839
01:45:44,140 --> 01:45:48,310
至少有一个角色 执行 以下操作 

2840
01:45:46,180 --> 01:45:50,470
这在JavaScript中很奇怪但是当你 

2841
01:45:48,310 --> 01:45:53,380
迭代在JavaScript中 你 的数组 

2842
01:45:50,470 --> 01:45:56,020
使用介词不是这样的 

2843
01:45:53,380 --> 01:45:59,110
词语继续 前进 并做 

2844
01:45:56,020 --> 01:46:01,030
如果当前单词开始则跟随 

2845
01:45:59,110 --> 01:46:02,739
通知大写的W也 

2846
01:46:01,030 --> 01:46:04,870
从Python的，但同样的想法不同的 只是 

2847
01:46:02,739 --> 01:46:06,880
如果我是这个词， 拼写不同 

2848
01:46:04,870 --> 01:46:09,850
迭代开始无论什么 

2849
01:46:06,880 --> 01:46:12,610
人类输入我们发现一场比赛继续 

2850
01:46:09,850 --> 01:46:14,770
并附加到此HTML变量Open 

2851
01:46:12,610 --> 01:46:17,500
支架李紧支架连接 

2852
01:46:14,770 --> 01:46:20,650
单词然后关闭括号

2853
01:46:17,500 --> 01:46:23,320
那么我正在 构建一个变量 

2854
01:46:20,650 --> 01:46:25,150
浏览器的内存包含HTML 

2855
01:46:23,320 --> 01:46:26,530
我想要挤进Dom 

2856
01:46:25,150 --> 01:46:28,150
最终我该怎么做

2857
01:46:26,530 --> 01:46:31,480
我说的最后一行 

2858
01:46:28,150 --> 01:46:34,270
文件选择 里面 的UL 标签 

2859
01:46:31,480 --> 01:46:36,360
它的HTML 并改变 那里的 一切 

2860
01:46:34,270 --> 01:46:40,180
据推测，这个HTML字符串

2861
01:46:36,360 --> 01:46:42,580
0个或更多 Li标签现在基于那些 

2862
01:46:40,180 --> 01:46:45,460
搜索结果现在让我 回过头 来 

2863
01:46:42,580 --> 01:46:47,680
言语一个相当不错的让 我回去 

2864
01:46:45,460 --> 01:46:49,480
这里这个例子让 我继续前进 ， 

2865
01:46:47,680 --> 01:46:51,460
服务于此，但它不再是烧瓶了 

2866
01:46:49,480 --> 01:46:54,130
所以我必须从两个使用我们的服务器

2867
01:46:51,460 --> 01:46:56,020
几周前， HTTP服务器只提供 HTML 

2868
01:46:54,130 --> 01:46:59,970
让我继续并重新加载屏幕 

2869
01:46:56,020 --> 01:47:02,530
这里打开 index.html，然后通知现在 

2870
01:46:59,970 --> 01:47:08,230
我们很高兴 去做我们想做的事 

2871
01:47:02,530 --> 01:47:11,230
搜索 OK BC，让我们开拓 

2872
01:47:08,230 --> 01:47:12,940
网络选项卡检查网络让我们 

2873
01:47:11,230 --> 01:47:18,880
看到我每次搜索 Z 时会发生什么

2874
01:47:12,940 --> 01:47:21,349
嗯，为什么Q 嘿，为什么没有网络 

2875
01:47:18,880 --> 01:47:23,760
交通现在

2876
01:47:21,349 --> 01:47:26,550
好吧，但这就是我说的但是为什么 

2877
01:47:23,760 --> 01:47:28,349
它没有网络流量 

2878
01:47:26,550 --> 01:47:29,729
发送任何不与之交谈的路线 

2879
01:47:28,349 --> 01:47:33,419
后端服务器为什么因为所有的数据 

2880
01:47:29,729 --> 01:47:35,969
我可能 需要的已经是本地 混合了 

2881
01:47:33,419 --> 01:47:37,439
这里的消息也更好 

2882
01:47:35,969 --> 01:47:39,389
什么是外卖 你是怎么做的 

2883
01:47:37,439 --> 01:47:40,530
想想这个，因为现在而不是 

2884
01:47:39,389 --> 01:47:42,090
很多我们 早期 的节目 

2885
01:47:40,530 --> 01:47:43,079
学期我们甚至相对较小 

2886
01:47:42,090 --> 01:47:45,449
虽然他们没有这种感觉 

2887
01:47:43,079 --> 01:47:47,070
现在时间我们有 更多的设计 

2888
01:47:45,449 --> 01:47:48,929
可能性和答案是 

2889
01:47:47,070 --> 01:47:50,699
越来越不明显 ，这就是原因 

2890
01:47:48,929 --> 01:47:52,530
你作为程序员会得到更多 

2891
01:47:50,699 --> 01:47:53,879
你会很满意

2892
01:47:52,530 --> 01:47:55,530
也许练习你所看到的讲道 

2893
01:47:53,879 --> 01:47:56,969
首先， 你将决定 你可能是谁 

2894
01:47:55,530 --> 01:47:58,469
已经说过我不喜欢我 

2895
01:47:56,969 --> 01:48:00,300
要以其他 方式 做到这一点 ，那怎么做 

2896
01:47:58,469 --> 01:48:03,179
你想想 这 几个中的 哪 一个 

2897
01:48:00,300 --> 01:48:04,800
单词示例是最佳版本零

2898
01:48:03,179 --> 01:48:06,479
让服务器完成所有工作 

2899
01:48:04,800 --> 01:48:09,570
发回一个全新的 结果 页面 

2900
01:48:06,479 --> 01:48:12,030
像谷歌在1999年那样做了第一版 

2901
01:48:09,570 --> 01:48:14,939
我们添加了 一些 使用 的JavaScript 

2902
01:48:12,030 --> 01:48:16,439
jQuery库与服务器通信

2903
01:48:14,939 --> 01:48:18,329
使用一种名为Ajax的技术 

2904
01:48:16,439 --> 01:48:20,219
异步JavaScript和XML 但 

2905
01:48:18,329 --> 01:48:22,050
只是意味着去获取更多数据和 每一个 

2906
01:48:20,219 --> 01:48:23,789
返回li元素然后我们决定 

2907
01:48:22,050 --> 01:48:25,559
你似乎没有那么草率 

2908
01:48:23,789 --> 01:48:27,899
发送给我所有这些无用的标签 

2909
01:48:25,559 --> 01:48:29,909
逗号分隔 的单词列表 ，这是 

2910
01:48:27,899 --> 01:48:31,349
版本二，然后是最后一个版本 

2911
01:48:29,909 --> 01:48:32,939
摆脱所有 这 一切 ， 只是发送 

2912
01:48:31,349 --> 01:48:35,959
浏览器中的所有单词 并让它 

2913
01:48:32,939 --> 01:48:40,260
完全处理它 

2914
01:48:35,959 --> 01:48:44,209
谁喜欢哪一个最好的零一两 

2915
01:48:40,260 --> 01:48:44,209
三 你怎么看？ 

2916
01:48:50,260 --> 01:48:56,740
这是一个很好的权衡， 所以如果用户 

2917
01:48:52,600 --> 01:48:59,170
关闭JavaScript 哦3ok冒犯 

2918
01:48:56,740 --> 01:49:00,910
三个 人和 一个人都不会工作 

2919
01:48:59,170 --> 01:49:02,260
因为javascript被禁用了

2920
01:49:00,910 --> 01:49:04,900
你现在关心那个吗？ 

2921
01:49:02,260 --> 01:49:06,400
也许不是它的用户 数量少

2922
01:49:04,900 --> 01:49:07,330
在互联网上或谁是如此 关注 

2923
01:49:06,400 --> 01:49:08,710
刚刚关闭的这个

2924
01:49:07,330 --> 01:49:10,150
完全是JavaScript和现实 

2925
01:49:08,710 --> 01:49:11,290
这么多网站都 打破了这些日子 

2926
01:49:10,150 --> 01:49:13,390
没有JavaScript可能是一个 

2927
01:49:11,290 --> 01:49:17,470
合理的经营成本 还可以 

2928
01:49:13,390 --> 01:49:19,270
其他想法是的，是最后一个版本

2929
01:49:17,470 --> 01:49:23,680
最快的我不知道我们怎么样 

2930
01:49:19,270 --> 01:49:25,330
评估是的，我的意思是我们可以 

2931
01:49:23,680 --> 01:49:27,610
从字面上衡量它并诚实地建立 

2932
01:49:25,330 --> 01:49:29,320
进入铬和其他标签， 我没有 

2933
01:49:27,610 --> 01:49:30,970
甚至点击都是很多表现 

2934
01:49:29,320 --> 01:49:32,620
您可以实际监控方式的工具

2935
01:49:30,970 --> 01:49:34,090
很长的一切都是这个被称为 

2936
01:49:32,620 --> 01:49:35,560
更普遍的基准测试， 这是 

2937
01:49:34,090 --> 01:49:36,910
你在拼写中做了什么

2938
01:49:35,560 --> 01:49:38,470
问题集即使我们写了

2939
01:49:36,910 --> 01:49:40,270
代码将所有内容计时并进行测量 

2940
01:49:38,470 --> 01:49:43,060
一切要 回答 这个问题 ，你 

2941
01:49:40,270 --> 01:49:44,290
可以尝试计时每一个 

2942
01:49:43,060 --> 01:49:56,170
例子，然后自己决定 

2943
01:49:44,290 --> 01:49:58,240
这是最好的确定是的，我更多的收费 

2944
01:49:56,170 --> 01:50:01,180
数据你可能会 减慢我的速度 

2945
01:49:58,240 --> 01:50:04,620
电话下来非常合理的关注让 

2946
01:50:01,180 --> 01:50:08,050
我在这里进入我们的字典文件 

2947
01:50:04,620 --> 01:50:10,810
列出这个大型 JS文件的大小

2948
01:50:08,050 --> 01:50:13,120
在移动设备上是2.2兆字节

2949
01:50:10,810 --> 01:50:14,980
特别是在你的信号的地方 

2950
01:50:13,120 --> 01:50:16,810
很慢或你的字节很贵 或 

2951
01:50:14,980 --> 01:50:18,790
你只有间歇性的访问权限

2952
01:50:16,810 --> 01:50:20,530
有点讨厌 发送 2兆字节 

2953
01:50:18,790 --> 01:50:22,570
如果你可以避免它给用户 

2954
01:50:20,530 --> 01:50:25,000
特别是当你只能 发送 

2955
01:50:22,570 --> 01:50:27,730
结果的 子集 可能是几千字节 

2956
01:50:25,000 --> 01:50:29,770
相反的比赛非常合理 

2957
01:50:27,730 --> 01:50:33,790
关注成本用户体验表现

2958
01:50:29,770 --> 01:50:35,440
其他的想法这是 为了 更好的 

2959
01:50:33,790 --> 01:50:36,940
像大学和企业一样的人 

2960
01:50:35,440 --> 01:50:40,870
那些往往真的有的校园

2961
01:50:36,940 --> 01:50:42,400
良好的互联网接入再说 三 

2962
01:50:40,870 --> 01:50:43,630
不错，但如果它不是 一百 什么 ， 

2963
01:50:42,400 --> 01:50:46,810
四万字，但它就像一个 

2964
01:50:43,630 --> 01:50:48,490
十亿张 猫的 照片 就是这样的 

2965
01:50:46,810 --> 01:50:50,320
谷歌 索引是对的，或者你知道 

2966
01:50:48,490 --> 01:50:52,150
成千上万的朋友和所有人 

2967
01:50:50,320 --> 01:50:53,470
他们的个人资料数据就像在某些人一样 

2968
01:50:52,150 --> 01:50:55,570
指出这是 一个拐点 

2969
01:50:53,470 --> 01:50:57,340
太多的数据权利不是 

2970
01:50:55,570 --> 01:50:58,630
合理的，你不想要的太多了 

2971
01:50:57,340 --> 01:51:00,580
只是给你公司的副本 

2972
01:50:58,630 --> 01:51:02,230
数据库只为你的每个用户 

2973
01:51:00,580 --> 01:51:03,640
让他们 再次 在本地搜索 

2974
01:51:02,230 --> 01:51:03,969
这些是非显而易见的问题 

2975
01:51:03,640 --> 01:51:05,829
一 

2976
01:51:03,969 --> 01:51:07,210
坦率地说最终的项目，如果目标

2977
01:51:05,829 --> 01:51:09,460
你做一些基于网络或移动的事情 

2978
01:51:07,210 --> 01:51:10,929
基于或海基或任何东西都是 

2979
01:51:09,460 --> 01:51:13,329
这些问题现在归结为你 

2980
01:51:10,929 --> 01:51:14,889
就像我们没有 明确的答案 

2981
01:51:13,329 --> 01:51:16,420
关注你的最终项目 

2982
01:51:14,889 --> 01:51:18,280
应该做以及如何做到最好 

2983
01:51:16,420 --> 01:51:20,199
但是在未来的几个星期里，你将成为前任 

2984
01:51:18,280 --> 01:51:21,639
提出一些项目建议 

2985
01:51:20,199 --> 01:51:23,380
然后是一个实际的项目构想 

2986
01:51:21,639 --> 01:51:24,639
设计和实施这个和你 

2987
01:51:23,380 --> 01:51:26,170
也可能会感受到这种紧张 

2988
01:51:24,639 --> 01:51:28,030
答案 并不 总是 显而易见的 

2989
01:51:26,170 --> 01:51:29,139
你的教学研究员甚至可能都不知道 

2990
01:51:28,030 --> 01:51:30,219
如何回答你的问题， 因为他 

2991
01:51:29,139 --> 01:51:31,809
或她将 所有 的 想法 

2992
01:51:30,219 --> 01:51:33,729
拥有，但它 最终取决于你和 

2993
01:51:31,809 --> 01:51:36,159
我们现在正处于一个阶段 

2994
01:51:33,729 --> 01:51:37,659
喜欢我们正在考虑的编码成熟度

2995
01:51:36,159 --> 01:51:40,960
训练 轮 关闭了 更多 

2996
01:51:37,659 --> 01:51:42,369
决定现在留给你让我们结束 

2997
01:51:40,960 --> 01:51:43,479
在这里， 我会坚持 一对一 

2998
01:51:42,369 --> 01:51:46,440
问题，我们 下周 会见到你 

2999
01:51:43,479 --> 01:51:46,440
对于数据库 

